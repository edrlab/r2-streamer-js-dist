{
  "name": "r2-streamer-js",
  "version": "0.0.1-alpha34",
  "description": "Readium 2 'streamer' for NodeJS (TypeScript)",
  "keywords": [
    "readium",
    "readium2",
    "streamer",
    "EPUB",
    "TypeScript",
    "JavaScript",
    "ES5",
    "ES6",
    "ECMAScript 2015",
    "ECMAScript 6",
    "ES7",
    "ECMAScript 2016",
    "ECMAScript 7",
    "ES8",
    "ECMAScript 2017",
    "ECMAScript 8"
  ],
  "engines": {
    "node": ">=6",
    "npm": ">=3",
    "yarn": ">=1.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/edrlab/r2-streamer-js.git"
  },
  "author": {
    "name": "EDRLab",
    "organization": "EDRLab",
    "url": "http://github.com/edrlab/"
  },
  "license": "BSD-3-Clause",
  "licenses": [
    {
      "type": "BSD-3-Clause",
      "url": "http://opensource.org/licenses/BSD-3-Clause"
    }
  ],
  "bugs": {
    "url": "https://github.com/edrlab/r2-streamer-js/issues"
  },
  "homepage": "https://github.com/edrlab/r2-streamer-js",
  "dependencies": {
    "bindings": "^1.3.0",
    "css2json": "^0.0.4",
    "debounce": "^1.0.2",
    "debug": "^3.1.0",
    "electron-store": "^1.3.0",
    "express": "^4.16.2",
    "filehound": "^1.16.2",
    "image-size": "^0.6.1",
    "json-markup": "^1.1.0",
    "material-components-web": "^0.23.0",
    "material-design-icons": "^3.0.1",
    "mime-types": "^2.1.17",
    "moment": "2.18.*",
    "morgan": "^1.9.0",
    "node-forge": "^0.7.1",
    "node-stream-zip": "^1.3.7",
    "portfinder": "^1.0.13",
    "reflect-metadata": "^0.1.10",
    "request": "^2.83.0",
    "request-promise-native": "^1.0.5",
    "resize-sensor": "github:normanzb/resize-sensor#master",
    "riot": "^3.7.3",
    "slugify": "^1.2.1",
    "system-font-families": "^0.5.0",
    "ta-json": "github:danielweck/ta-json#dist",
    "tmp": "^0.0.33",
    "tslib": "^1.8.0",
    "unzipper": "^0.8.9",
    "urijs": "^1.19.0",
    "uuid": "^3.1.0",
    "xmldom": "^0.1.27",
    "xpath": "^0.0.24",
    "yauzl": "^2.8.0",
    "yazl": "^2.4.2"
  },
  "devDependencies": {
    "@types/debounce": "^1.0.0",
    "@types/debug": "^0.0.30",
    "@types/electron-store": "^1.2.0",
    "@types/express": "^4.0.39",
    "@types/image-size": "^0.0.29",
    "@types/mime-types": "^2.1.0",
    "@types/morgan": "^1.7.35",
    "@types/node-forge": "^0.6.10",
    "@types/request": "^2.0.7",
    "@types/request-promise-native": "^1.0.9",
    "@types/tmp": "^0.0.33",
    "@types/urijs": "^1.15.34",
    "@types/uuid": "^3.4.3",
    "@types/xmldom": "^0.1.29",
    "ava": "^0.22.0",
    "browserify": "^14.5.0",
    "cpy-cli": "^1.0.1",
    "cross-env": "^5.1.0",
    "eclint": "^2.4.3",
    "electron": "1.7.*",
    "exorcist": "^1.0.0",
    "git-rev-sync": "^1.9.1",
    "mkdirp": "^0.5.1",
    "rimraf": "^2.6.2",
    "riot-typed": "github:danielweck/riot-typed#master",
    "sorcery": "^0.10.0",
    "tslint": "^5.8.0",
    "tslint-language-service": "^0.9.6",
    "typescript": "^2.5.3",
    "uglify-es": "^3.1.5"
  },
  "main": "dist/es6-es2015/src/index.js",
  "types": "dist/es6-es2015/src/index.d.js",
  "bin": {
    "r2-streamer-js-server": "dist/es6-es2015/src/http/server-cli.js"
  },
  "files": [
    "LICENSE",
    "README.md",
    "docs/**/*",
    "dist/**/*"
  ],
  "scripts": {
    "browserify:all": "npm run browserify:es5 && npm run browserify:es6-es2015 && npm run browserify:es7-es2016 && npm run browserify:es8-es2017",
    "browserify:es5": "echo \"Browserify skipped.\"",
    "___browserify:es5": "browserify ./dist/es5/src/electron/renderer/index.js --exclude electron --debug | exorcist --root ../../../../../ ./dist/es5/src/electron/renderer/index_browserify_bundle_.js.map > ./dist/es5/src/electron/renderer/index_browserify_bundle_.js && sorcery --input ./dist/es5/src/electron/renderer/index_browserify_bundle_.js --output ./dist/es5/src/electron/renderer/index_browserify_bundle.js && uglifyjs ./dist/es5/src/electron/renderer/index_browserify_bundle.js --output ./dist/es5/src/electron/renderer/index_browserify_bundle.min.js --compress --mangle --ecma 5 --source-map \"root='',url='browserify_bundle.min.js.map',content='./dist/es5/src/electron/renderer/index_browserify_bundle.js.map'\" && rimraf ./dist/es5/src/electron/renderer/index_browserify_bundle_.js && rimraf ./dist/es5/src/electron/renderer/index_browserify_bundle_.js.map",
    "browserify:es6-es2015": "echo \"Browserify skipped.\"",
    "___browserify:es6-es2015": "browserify ./dist/es6-es2015/src/electron/renderer/index.js --exclude electron --debug | exorcist --root ../../../../../ ./dist/es6-es2015/src/electron/renderer/index_browserify_bundle_.js.map > ./dist/es6-es2015/src/electron/renderer/index_browserify_bundle_.js && sorcery --input ./dist/es6-es2015/src/electron/renderer/index_browserify_bundle_.js --output ./dist/es6-es2015/src/electron/renderer/index_browserify_bundle.js && uglifyjs ./dist/es6-es2015/src/electron/renderer/index_browserify_bundle.js --output ./dist/es6-es2015/src/electron/renderer/index_browserify_bundle.min.js --compress --mangle --ecma 6 --source-map \"root='',url='browserify_bundle.min.js.map',content='./dist/es6-es2015/src/electron/renderer/index_browserify_bundle.js.map'\" && rimraf ./dist/es6-es2015/src/electron/renderer/index_browserify_bundle_.js && rimraf ./dist/es6-es2015/src/electron/renderer/index_browserify_bundle_.js.map",
    "browserify:es7-es2016": "echo \"Browserify skipped.\"",
    "___browserify:es7-es2016": "browserify ./dist/es7-es2016/src/electron/renderer/index.js --exclude electron --debug | exorcist --root ../../../../../ ./dist/es7-es2016/src/electron/renderer/index_browserify_bundle_.js.map > ./dist/es7-es2016/src/electron/renderer/index_browserify_bundle_.js && sorcery --input ./dist/es7-es2016/src/electron/renderer/index_browserify_bundle_.js --output ./dist/es7-es2016/src/electron/renderer/index_browserify_bundle.js && uglifyjs ./dist/es7-es2016/src/electron/renderer/index_browserify_bundle.js --output ./dist/es7-es2016/src/electron/renderer/index_browserify_bundle.min.js --compress --mangle --ecma 7 --source-map \"root='',url='browserify_bundle.min.js.map',content='./dist/es7-es2016/src/electron/renderer/index_browserify_bundle.js.map'\" && rimraf ./dist/es7-es2016/src/electron/renderer/index_browserify_bundle_.js && rimraf ./dist/es7-es2016/src/electron/renderer/index_browserify_bundle_.js.map",
    "browserify:es8-es2017": "echo \"Browserify skipped.\"",
    "___browserify:es8-es2017": "browserify ./dist/es8-es2017/src/electron/renderer/index.js --exclude electron --debug | exorcist --root ../../../../../ ./dist/es8-es2017/src/electron/renderer/index_browserify_bundle_.js.map > ./dist/es8-es2017/src/electron/renderer/index_browserify_bundle_.js && sorcery --input ./dist/es8-es2017/src/electron/renderer/index_browserify_bundle_.js --output ./dist/es8-es2017/src/electron/renderer/index_browserify_bundle.js && uglifyjs ./dist/es8-es2017/src/electron/renderer/index_browserify_bundle.js --output ./dist/es8-es2017/src/electron/renderer/index_browserify_bundle.min.js --compress --mangle --ecma 8 --source-map \"root='',url='browserify_bundle.min.js.map',content='./dist/es8-es2017/src/electron/renderer/index_browserify_bundle.js.map'\" && rimraf ./dist/es8-es2017/src/electron/renderer/index_browserify_bundle_.js && rimraf ./dist/es8-es2017/src/electron/renderer/index_browserify_bundle_.js.map",
    "___browserify:es8-es2017_": "browserify ./dist/es8-es2017/src/electron/renderer/index.js --exclude electron --debug | uglifyjs --compress --mangle --ecma 8 --source-map \"root='../../../../../',url='browserify_bundle_.min.js.map',content='inline'\" --output ./dist/es8-es2017/src/electron/renderer/index_browserify_bundle_.min.js && sorcery --input ./dist/es8-es2017/src/electron/renderer/index_browserify_bundle_.min.js --output ./dist/es8-es2017/src/electron/renderer/index_browserify_bundle.min.js",
    "riot:all": "npm run riot:es5 && npm run riot:es6-es2015 && npm run riot:es7-es2016 && npm run riot:es8-es2017",
    "riot:es5": "cpy ./node_modules/riot/riot.js ./dist/es5/src/electron/renderer/ && riot --ext html --type none ./dist/es5/src/electron/renderer/riots/ ./dist/es5/src/electron/renderer/riots/ && rimraf \"./dist/es5/src/electron/renderer/riots/**/*.html\"",
    "riot:es6-es2015": "cpy ./node_modules/riot/riot.js ./dist/es6-es2015/src/electron/renderer/ && riot --ext html --type none ./dist/es6-es2015/src/electron/renderer/riots/ ./dist/es6-es2015/src/electron/renderer/riots/ && rimraf \"./dist/es6-es2015/src/electron/renderer/riots/**/*.html\"",
    "riot:es7-es2016": "cpy ./node_modules/riot/riot.js ./dist/es7-es2016/src/electron/renderer/ && riot --ext html --type none ./dist/es7-es2016/src/electron/renderer/riots/ ./dist/es7-es2016/src/electron/renderer/riots/ && rimraf \"./dist/es7-es2016/src/electron/renderer/riots/**/*.html\"",
    "riot:es8-es2017": "cpy ./node_modules/riot/riot.js ./dist/es8-es2017/src/electron/renderer/ && riot --ext html --type none ./dist/es8-es2017/src/electron/renderer/riots/ ./dist/es8-es2017/src/electron/renderer/riots/ && rimraf \"./dist/es8-es2017/src/electron/renderer/riots/**/*.html\"",
    "material:es5": "cpy node_modules/material-design-icons/iconfont/MaterialIcons-Regular.woff2 ./dist/es5/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.css ./dist/es5/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.js ./dist/es5/src/electron/renderer/",
    "material:es6-es2015": "cpy node_modules/material-design-icons/iconfont/MaterialIcons-Regular.woff2 ./dist/es6-es2015/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.css ./dist/es6-es2015/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.js ./dist/es6-es2015/src/electron/renderer/",
    "material:es7-es2016": "cpy node_modules/material-design-icons/iconfont/MaterialIcons-Regular.woff2 ./dist/es7-es2016/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.css ./dist/es7-es2016/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.js ./dist/es7-es2016/src/electron/renderer/",
    "material:es8-es2017": "cpy node_modules/material-design-icons/iconfont/MaterialIcons-Regular.woff2 ./dist/es8-es2017/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.css ./dist/es8-es2017/src/electron/renderer/ && cpy ./node_modules/material-components-web/dist/material-components-web.js ./dist/es8-es2017/src/electron/renderer/",
    "preelectron-renderer:all": "npm run preelectron-renderer:es5 && npm run preelectron-renderer:es6-es2015 && npm run preelectron-renderer:es7-es2016 && npm run preelectron-renderer:es8-es2017",
    "preelectron-renderer:es5": "npm run material:es5 && cpy \"./src/electron/renderer/**/*.html\" ./dist/es5/ --cwd=./ --parents && cpy \"./src/electron/renderer/**/*.css\" ./dist/es5/ --cwd=./ --parents",
    "preelectron-renderer:es6-es2015": "npm run material:es6-es2015 && cpy \"./src/electron/renderer/**/*.html\" ./dist/es6-es2015/ --cwd=./ --parents && cpy \"./src/electron/renderer/**/*.css\" ./dist/es6-es2015/ --cwd=./ --parents",
    "preelectron-renderer:es7-es2016": "npm run material:es7-es2016 && cpy \"./src/electron/renderer/**/*.html\" ./dist/es7-es2016/ --cwd=./ --parents && cpy \"./src/electron/renderer/**/*.css\" ./dist/es7-es2016/ --cwd=./ --parents",
    "preelectron-renderer:es8-es2017": "npm run material:es8-es2017 && cpy \"./src/electron/renderer/**/*.html\" ./dist/es8-es2017/ --cwd=./ --parents && cpy \"./src/electron/renderer/**/*.css\" ./dist/es8-es2017/ --cwd=./ --parents",
    "electron-renderer:all": "npm run browserify:all && npm run riot:all && cpy \"./ReadiumCSS/**/*.*\" ../dist/ --cwd=./misc --parents",
    "electron-renderer:es5": "npm run browserify:es5 && npm run riot:es5 && cpy \"./ReadiumCSS/**/*.*\" ../dist/ --cwd=./misc --parents",
    "electron-renderer:es6-es2015": "npm run browserify:es6-es2015 && npm run riot:es6-es2015 && cpy \"./ReadiumCSS/**/*.*\" ../dist/ --cwd=./misc --parents",
    "electron-renderer:es7-es2016": "npm run browserify:es7-es2016 && npm run riot:es7-es2016 && cpy \"./ReadiumCSS/**/*.*\" ../dist/ --cwd=./misc --parents",
    "electron-renderer:es8-es2017": "npm run browserify:es8-es2017 && npm run riot:es8-es2017 && cpy \"./ReadiumCSS/**/*.*\" ../dist/ --cwd=./misc --parents",
    "electron": "node tools/electronRename.js && cross-env DEBUG=r2:* BUILD_ENV=DEV electron ./dist/es8-es2017/src/electron/main/index.js",
    "_pregitdist": "npm run build:all",
    "gitdist": "cd ../r2-streamer-js-dist/ && git status || echo status && (rimraf \"*\" && echo rimrafOK) || echo rimrafNOK && cpy ../r2-streamer-js/package.json . && cpy ../r2-streamer-js/package-lock.json . && cpy ../r2-streamer-js/LICENSE . && cpy ../r2-streamer-js/README.md . && cpy \"docs/**/*.*\" ../r2-streamer-js-dist/ --cwd=../r2-streamer-js/ --parents && cpy \"dist/**/*.*\" ../r2-streamer-js-dist/ --cwd=../r2-streamer-js/ --parents && git add * || echo add && git commit -a -m \"add new dist\" || echo commit && git push || echo push && git status || echo status && cd ..",
    "start": "cross-env DEBUG=r2:* node \"./dist/es6-es2015/src/http/server-cli.js\" ./misc/epubs/",
    "prepare_": "npm run build:all && npm test",
    "prepublish_": "npm run prepare_",
    "prenow": "npm run clean && npm run build:es8-es2017",
    "now": "cpy package-lock.json ./now && cpy \"**/*.*\" ../now/ --cwd=./dist --parents && rimraf \"./now/**/*.d.ts\" && rimraf \"./now/**/*.js.map\" && cpy \"misc/readers/reader-NYPL/**/*.*\" ./now/ --cwd=./ --parents && cpy \"misc/readers/reader-HADRIEN/**/*.*\" ./now/ --cwd=./ --parents && cpy \"misc/epubs/*.epub\" now/misc/epubs/ && cpy package-now.json now/ && cd now/ && mv package-now.json package.json && now && cd ..",
    "typescript:imports": "node tools/typescript_relativize_path_mapping_imports.js",
    "gitrev": "node tools/gitrev.js && cat dist/gitrev.json",
    "afterdist": "npm run typescript:imports && npm run gitrev",
    "prebuild": "npm run lint",
    "build": "npm run transpile:typescript",
    "postbuild": "npm run afterdist && npm run electron-renderer:es8-es2017",
    "prebuild:all": "npm run lint",
    "build:all": "npm run transpile:typescript:all",
    "postbuild:all": "npm run afterdist && npm run electron-renderer:all",
    "prebuild:es5": "npm run lint && npm run clean",
    "build:es5": "npm run transpile:typescript:es5",
    "postbuild:es5": "npm run afterdist && npm run electron-renderer:es5",
    "prebuild:es6-es2015": "npm run lint && npm run clean",
    "build:es6-es2015": "npm run transpile:typescript:es6-es2015",
    "postbuild:es6-es2015": "npm run afterdist && npm run electron-renderer:es6-es2015",
    "prebuild:es7-es2016": "npm run lint && npm run clean",
    "build:es7-es2016": "npm run transpile:typescript:es7-es2016",
    "postbuild:es7-es2016": "npm run afterdist && npm run electron-renderer:es7-es2016",
    "prebuild:es8-es2017": "npm run lint && npm run clean",
    "build:es8-es2017": "npm run transpile:typescript:es8-es2017",
    "postbuild:es8-es2017": "npm run afterdist && npm run electron-renderer:es8-es2017",
    "clean": "rimraf ./dist && rimraf ./now && mkdirp ./dist",
    "lint": "npm run lint:all && npm run lint:typescript:full",
    "lint:all": "eclint check \"**/*\" \"!**/*.node\" \"!.git/**/*\" \"!node_modules*/**/*\" \"!dist/**/*\" \"!misc/**/*\" \"!now/**/*\" \"!.vscode/**/*\" \"!.history/**/*\" \"!**/.DS_Store\" \"!**/*.epub\" \"!**/*.cbz\"  \"!**/*.jpg\"  \"!**/*.jpeg\"  \"!**/*.png\"  \"!**/*.log\"",
    "lint:typescript": "tslint -c \"./tslint.json\" \"./src/**/*.ts\" \"./test/**/*.ts\"",
    "lint:typescript:full": "tslint --type-check --project \"./tsconfig.json\" -c \"./tslint.json\" \"./src/**/*.ts\" \"./test/**/*.ts\"",
    "lintfix": "sed -i \"\" \"s/let normalizedPath = path\\.normalize(documentPath);/let normalizedPath = path.normalize(documentPath).toLowerCase();/g\" ./node_modules/tslint-language-service/out/src/index.js",
    "pretranspile:typescript": "npm run clean",
    "transpile:typescript": "tsc -p \"./tsconfig.json\"",
    "pretranspile:typescript:all": "npm run clean",
    "transpile:typescript:all": "npm run transpile:typescript:es5 && npm run transpile:typescript:es6-es2015 && npm run transpile:typescript:es7-es2016 && npm run transpile:typescript:es8-es2017",
    "transpile:typescript:es5": "tsc -p \"./tsconfigs/tsconfig-es5-all.json\"",
    "transpile:typescript:es6-es2015": "tsc -p \"./tsconfigs/tsconfig-es6-es2015-all.json\"",
    "transpile:typescript:es7-es2016": "tsc -p \"./tsconfigs/tsconfig-es7-es2016-all.json\"",
    "transpile:typescript:es8-es2017": "tsc -p \"./tsconfigs/tsconfig-es8-es2017-all.json\"",
    "transpile:typescript:es8-es2017+afterdist": "npm run transpile:typescript:es8-es2017 && npm run afterdist && npm run electron-renderer:es8-es2017",
    "transpile:typescript:single": "node tools/typescript_compile_single.js",
    "posttranspile:typescript:single": "npm run afterdist && npm run electron-renderer:es8-es2017",
    "test": "cross-env DEBUG=r2:* ava --verbose --fail-fast --serial --color \"./dist/es8-es2017/test/**/test*.js\"",
    "cli": "node \"./dist/es8-es2017/src/_utils/cli.js\"",
    "cli-debug": "cross-env DEBUG=r2:* npm run cli",
    "cli-debug-x": "cross-env DEBUG=* npm run cli",
    "server": "node \"./dist/es8-es2017/src/http/server-cli.js\"",
    "server-debug": "cross-env DEBUG=r2:* npm run server",
    "server-debug-x": "cross-env DEBUG=* npm run server",
    "heroku-prebuild": "echo \"heroku-prebuild\"",
    "heroku-postbuild": "echo \"heroku-postbuild\" && npm run clean && npm run transpile:typescript:es8-es2017 && npm run typescript:imports && curl -s -o ./dist/gitrev.json https://rawgit.com/edrlab/r2-streamer-js-dist/master/dist/gitrev.json && ls ./dist"
  },
  "importSort": {
    ".ts": {
      "parser": "typescript",
      "style": "module"
    }
  }
}
