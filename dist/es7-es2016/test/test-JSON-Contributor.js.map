{"version":3,"file":"test-JSON-Contributor.js","sourceRoot":"","sources":["../../../test/test-JSON-Contributor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Metadata } from \"@models/metadata\";\nimport { Contributor } from \"@models/metadata-contributor\";\nimport { test } from \"ava\";\nimport { JSON as TAJSON } from \"ta-json\";\n\nimport { initGlobals } from \"../src/init-globals\";\nimport {\n    checkType,\n    checkType_Array,\n    checkType_Object,\n    checkType_String,\n    inspect,\n    logJSON,\n} from \"./helpers\";\n\ninitGlobals();\n\n// ==========================\n\nconst contName1 = \"theName1\";\nconst contRole1 = \"theRole1\";\nconst cont1 = new Contributor();\ncont1.Name = contName1;\ncont1.Role = contRole1;\nconst contName2 = \"theName2\";\nconst contRole2 = \"theRole2\";\nconst cont2 = new Contributor();\ncont2.Name = contName2;\ncont2.Role = contRole2;\n\n// ==========================\n\ntest(\"JSON SERIALIZE: Metadata.Imprint => Contributor[]\", (t) => {\n\n    const md = new Metadata();\n    md.Imprint = [];\n    md.Imprint.push(cont1);\n    md.Imprint.push(cont2);\n    inspect(md);\n\n    const json = TAJSON.serialize(md);\n    logJSON(json);\n\n    checkType_Array(t, json.imprint);\n    t.is(json.imprint.length, 2);\n\n    checkType_Object(t, json.imprint[0]);\n\n    checkType_String(t, json.imprint[0].name);\n    t.is(json.imprint[0].name, contName1);\n\n    checkType_String(t, json.imprint[0].role);\n    t.is(json.imprint[0].role, contRole1);\n\n    checkType_Object(t, json.imprint[1]);\n\n    checkType_String(t, json.imprint[1].name);\n    t.is(json.imprint[1].name, contName2);\n\n    checkType_String(t, json.imprint[1].role);\n    t.is(json.imprint[1].role, contRole2);\n});\n\ntest(\"JSON SERIALIZE: Metadata.Imprint => Contributor[1] collapse-array\", (t) => {\n\n    const md = new Metadata();\n    md.Imprint = [cont1];\n    inspect(md);\n\n    const json = TAJSON.serialize(md);\n    // // (normalizes single-item array to the item value itself)\n    // traverseJsonObjects(json,\n    //     (obj, parent, keyInParent) => {\n    //         if (parent && obj instanceof Array && obj.length === 1) {\n    //             parent[keyInParent] = obj[0];\n    //         }\n    //     });\n    logJSON(json);\n\n    checkType_Object(t, json.imprint);\n\n    checkType_String(t, json.imprint.name);\n    t.is(json.imprint.name, contName1);\n\n    checkType_String(t, json.imprint.role);\n    t.is(json.imprint.role, contRole1);\n});\n\n// implemented, see IPropertyConverter.collapseArrayWithSingleItem()\n// test(\"JSON SERIALIZE: Metadata.Imprint => Contributor[1] keep-array\", (t) => {\n\n//     const md = new Metadata();\n//     md.Imprint = [cont1];\n//     inspect(md);\n\n//     const json = TAJSON.serialize(md);\n//     logJSON(json);\n\n//     checkType_Array(t, json.imprint);\n//     t.is(json.imprint.length, 1);\n\n//     checkType_Object(t, json.imprint[0]);\n\n//     checkType_String(t, json.imprint[0].name);\n//     t.is(json.imprint[0].name, contName1);\n\n//     checkType_String(t, json.imprint[0].role);\n//     t.is(json.imprint[0].role, contRole1);\n// });\n\ntest(\"JSON DESERIALIZE: Metadata.Imprint => Contributor[]\", (t) => {\n\n    const json: any = {};\n    json.imprint = [{ name: contName1, role: contRole1 }, { name: contName2, role: contRole2 }];\n    logJSON(json);\n\n    const md: Metadata = TAJSON.deserialize<Metadata>(json, Metadata);\n    inspect(md);\n\n    checkType_Array(t, md.Imprint);\n    t.is(md.Imprint.length, 2);\n\n    checkType(t, md.Imprint[0], Contributor);\n\n    checkType_String(t, md.Imprint[0].Name);\n    t.is(md.Imprint[0].Name, contName1);\n\n    checkType_String(t, md.Imprint[0].Role);\n    t.is(md.Imprint[0].Role, contRole1);\n\n    checkType(t, md.Imprint[1], Contributor);\n\n    checkType_String(t, md.Imprint[1].Name);\n    t.is(md.Imprint[1].Name, contName2);\n\n    checkType_String(t, md.Imprint[1].Role);\n    t.is(md.Imprint[1].Role, contRole2);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Imprint => Contributor[1]\", (t) => {\n\n    const json: any = {};\n    json.imprint = [{ name: contName1, role: contRole1 }];\n    logJSON(json);\n\n    const md: Metadata = TAJSON.deserialize<Metadata>(json, Metadata);\n    inspect(md);\n\n    checkType_Array(t, md.Imprint);\n    t.is(md.Imprint.length, 1);\n\n    checkType(t, md.Imprint[0], Contributor);\n\n    checkType_String(t, md.Imprint[0].Name);\n    t.is(md.Imprint[0].Name, contName1);\n\n    checkType_String(t, md.Imprint[0].Role);\n    t.is(md.Imprint[0].Role, contRole1);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Imprint => Contributor\", (t) => {\n\n    const json: any = {};\n    json.imprint = { name: contName2, role: contRole2 };\n    logJSON(json);\n\n    const md: Metadata = TAJSON.deserialize<Metadata>(json, Metadata);\n    inspect(md);\n\n    checkType_Array(t, md.Imprint);\n    t.is(md.Imprint.length, 1);\n\n    checkType(t, md.Imprint[0], Contributor);\n\n    checkType_String(t, md.Imprint[0].Name);\n    t.is(md.Imprint[0].Name, contName2);\n\n    checkType_String(t, md.Imprint[0].Role);\n    t.is(md.Imprint[0].Role, contRole2);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Imprint => ContributorSTR[]\", (t) => {\n\n    const json: any = {};\n    json.imprint = [contName1, contName2];\n    logJSON(json);\n\n    const md: Metadata = TAJSON.deserialize<Metadata>(json, Metadata);\n    inspect(md);\n\n    checkType_Array(t, md.Imprint);\n    t.is(md.Imprint.length, 2);\n\n    checkType(t, md.Imprint[0], Contributor);\n\n    checkType_String(t, md.Imprint[0].Name);\n    t.is(md.Imprint[0].Name, contName1);\n\n    checkType(t, md.Imprint[1], Contributor);\n\n    checkType_String(t, md.Imprint[1].Name);\n    t.is(md.Imprint[1].Name, contName2);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Imprint => ContributorSTR[1]\", (t) => {\n\n    const json: any = {};\n    json.imprint = [contName1];\n    logJSON(json);\n\n    const md: Metadata = TAJSON.deserialize<Metadata>(json, Metadata);\n    inspect(md);\n\n    checkType_Array(t, md.Imprint);\n    t.is(md.Imprint.length, 1);\n\n    checkType(t, md.Imprint[0], Contributor);\n\n    checkType_String(t, md.Imprint[0].Name);\n    t.is(md.Imprint[0].Name, contName1);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Imprint => ContributorSTR\", (t) => {\n\n    const json: any = {};\n    json.imprint = contName2;\n    logJSON(json);\n\n    const md: Metadata = TAJSON.deserialize<Metadata>(json, Metadata);\n    inspect(md);\n\n    checkType_Array(t, md.Imprint);\n    t.is(md.Imprint.length, 1);\n\n    checkType(t, md.Imprint[0], Contributor);\n\n    checkType_String(t, md.Imprint[0].Name);\n    t.is(md.Imprint[0].Name, contName2);\n});\n"]}