{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../../test/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import * as util from \"util\";\r\n\r\nimport { TestContext } from \"ava\";\r\n\r\nexport function inspect(obj: any) {\r\n    if (!process.env.DEBUG || process.env.DEBUG === \"false\" || process.env.DEBUG === \"0\") {\r\n        return;\r\n    }\r\n    // breakLength: 100  maxArrayLength: undefined\r\n    console.log(util.inspect(obj,\r\n        { showHidden: false, depth: 1000, colors: true, customInspect: true }));\r\n}\r\n\r\nexport function log(str: string) {\r\n    if (!process.env.DEBUG || process.env.DEBUG === \"false\" || process.env.DEBUG === \"0\") {\r\n        return;\r\n    }\r\n    console.log(str);\r\n}\r\n\r\nexport function logJSON(json: any) {\r\n    if (!process.env.DEBUG || process.env.DEBUG === \"false\" || process.env.DEBUG === \"0\") {\r\n        return;\r\n    }\r\n    const jsonStr = global.JSON.stringify(json, null, \"\");\r\n    log(jsonStr);\r\n}\r\n\r\n// ==========================\r\n\r\nexport function checkDate(t: TestContext, d1: Date, d2: Date) {\r\n    t.true(d1.getTime() === d2.getTime());\r\n    t.true(d1.toString() === d2.toString());\r\n    t.true(+d1 === +d2);\r\n    t.true(d1 >= d2 && d1 <= d2);\r\n}\r\n\r\n// import { FunctionType } from \"@utils/xml-js-mapper\";\r\n// tslint:disable-next-line:ban-types\r\nexport function checkType(t: TestContext, obj: any, clazz: Function) {\r\n    t.is(typeof obj, \"object\"); // obj.constructor.name\r\n    t.true(obj instanceof clazz);\r\n    t.is(obj.constructor, clazz);\r\n}\r\n\r\nexport function checkType_String(t: TestContext, obj: any) {\r\n    t.is(typeof obj, \"string\");\r\n    t.false(obj instanceof String);\r\n    t.false(obj instanceof Object);\r\n    t.is(obj.constructor, String);\r\n}\r\n\r\nexport function checkType_Array(t: TestContext, obj: any) {\r\n    t.is(typeof obj, \"object\");\r\n    t.true(obj instanceof Array);\r\n    t.true(obj instanceof Object);\r\n    t.is(obj.constructor, Array);\r\n}\r\n\r\nexport function checkType_Object(t: TestContext, obj: any) {\r\n    checkType(t, obj, Object);\r\n}\r\n"]}