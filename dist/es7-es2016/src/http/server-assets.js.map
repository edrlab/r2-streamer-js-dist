{"version":3,"file":"server-assets.js","sourceRoot":"","sources":["../../../../src/http/server-assets.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from \"path\";\r\n\r\nimport { Link } from \"@models/publication-link\";\r\nimport { Transformers } from \"@transform/transformer\";\r\nimport { parseRangeHeader } from \"@utils/http/RangeUtils\";\r\nimport { streamToBufferPromise } from \"@utils/stream/BufferUtils\";\r\n// import { CounterPassThroughStream } from \"@utils/stream/CounterPassThroughStream\";\r\nimport { IStreamAndLength, IZip } from \"@utils/zip/zip\";\r\nimport * as debug_ from \"debug\";\r\nimport * as express from \"express\";\r\nimport * as mime from \"mime-types\";\r\n\r\nimport { Publication } from \"@models/publication\";\r\nimport { Server } from \"./server\";\r\n\r\nconst debug = debug_(\"r2:server:assets\");\r\n\r\nexport function serverAssets(server: Server, routerPathBase64: express.Router) {\r\n\r\n    // let streamCounter = 0;\r\n\r\n    const routerAssets = express.Router({ strict: false });\r\n    // routerAssets.use(morgan(\"combined\"));\r\n\r\n    routerAssets.get(\"/\",\r\n        async (req: express.Request, res: express.Response) => {\r\n\r\n            if (!req.params.pathBase64) {\r\n                req.params.pathBase64 = (req as any).pathBase64;\r\n            }\r\n            if (!req.params.asset) {\r\n                req.params.asset = (req as any).asset;\r\n            }\r\n            if (!req.params.lcpPass64) {\r\n                req.params.lcpPass64 = (req as any).lcpPass64;\r\n            }\r\n\r\n            const isShow = req.query.show;\r\n\r\n            // debug(req.method);\r\n            const isHead = req.method.toLowerCase() === \"head\";\r\n            if (isHead) {\r\n                debug(\"HEAD !!!!!!!!!!!!!!!!!!!\");\r\n            }\r\n\r\n            const pathBase64Str = new Buffer(req.params.pathBase64, \"base64\").toString(\"utf8\");\r\n\r\n            // const fileName = path.basename(pathBase64Str);\r\n            // const ext = path.extname(fileName).toLowerCase();\r\n\r\n            let publication: Publication;\r\n            try {\r\n                publication = await server.loadOrGetCachedPublication(pathBase64Str);\r\n            } catch (err) {\r\n                debug(err);\r\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                    + err + \"</p></body></html>\");\r\n                return;\r\n            }\r\n\r\n            // dumpPublication(publication);\r\n\r\n            const zipInternal = publication.findFromInternal(\"zip\");\r\n            if (!zipInternal) {\r\n                const err = \"No publication zip!\";\r\n                debug(err);\r\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                    + err + \"</p></body></html>\");\r\n                return;\r\n            }\r\n            const zip = zipInternal.Value as IZip;\r\n\r\n            const pathInZip = req.params.asset;\r\n\r\n            if (!zip.hasEntry(pathInZip)) {\r\n                const err = \"Asset not in zip! \" + pathInZip;\r\n                debug(err);\r\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                    + err + \"</p></body></html>\");\r\n                return;\r\n            }\r\n\r\n            let link: Link | undefined;\r\n\r\n            if ((publication.Resources || publication.Spine)\r\n                && pathInZip.indexOf(\"META-INF/\") !== 0\r\n                && !pathInZip.endsWith(\".opf\")) {\r\n\r\n                const relativePath = pathInZip;\r\n\r\n                if (publication.Resources) {\r\n                    link = publication.Resources.find((l) => {\r\n                        if (l.Href === relativePath) {\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    });\r\n                }\r\n                if (!link) {\r\n                    if (publication.Spine) {\r\n                        link = publication.Spine.find((l) => {\r\n                            if (l.Href === relativePath) {\r\n                                return true;\r\n                            }\r\n                            return false;\r\n                        });\r\n                    }\r\n                }\r\n                if (!link) {\r\n                    const err = \"Asset not declared in publication spine/resources!\" + relativePath;\r\n                    debug(err);\r\n                    res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                        + err + \"</p></body></html>\");\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let mediaType = mime.lookup(pathInZip);\r\n            if (link && link.TypeLink) {\r\n                mediaType = link.TypeLink;\r\n            }\r\n\r\n            const isText = mediaType && (\r\n                mediaType.indexOf(\"text/\") === 0 ||\r\n                mediaType.indexOf(\"application/xhtml\") === 0 ||\r\n                mediaType.indexOf(\"application/xml\") === 0 ||\r\n                mediaType.indexOf(\"application/json\") === 0 ||\r\n                mediaType.indexOf(\"application/svg\") === 0 ||\r\n                mediaType.indexOf(\"application/smil\") === 0 ||\r\n                mediaType.indexOf(\"+json\") > 0 ||\r\n                mediaType.indexOf(\"+smil\") > 0 ||\r\n                mediaType.indexOf(\"+svg\") > 0 ||\r\n                mediaType.indexOf(\"+xhtml\") > 0 ||\r\n                mediaType.indexOf(\"+xml\") > 0);\r\n\r\n            // const isVideoAudio = mediaType && (\r\n            //     mediaType.indexOf(\"audio/\") === 0 ||\r\n            //     mediaType.indexOf(\"video/\") === 0);\r\n            // if (isVideoAudio) {\r\n            //     debug(req.headers);\r\n            // }\r\n\r\n            const isEncrypted = link && link.Properties && link.Properties.Encrypted;\r\n            const isObfuscatedFont = isEncrypted && link &&\r\n                (link.Properties.Encrypted.Algorithm === \"http://ns.adobe.com/pdf/enc#RC\"\r\n                    || link.Properties.Encrypted.Algorithm === \"http://www.idpf.org/2008/embedding\");\r\n\r\n            const isPartialByteRangeRequest = ((req.headers && req.headers.range) ? true : false);\r\n\r\n            // if (isEncrypted && isPartialByteRangeRequest) {\r\n            //     const err = \"Encrypted video/audio not supported (HTTP 206 partial request byte range)\";\r\n            //     debug(err);\r\n            //     res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n            //         + err + \"</p></body></html>\");\r\n            //     return;\r\n            // }\r\n\r\n            let partialByteBegin = 0; // inclusive boundaries\r\n            let partialByteEnd = -1;\r\n            let partialByteLength = 0;\r\n            if (isPartialByteRangeRequest) {\r\n                debug(req.headers.range);\r\n                const ranges = parseRangeHeader(req.headers.range);\r\n                // debug(ranges);\r\n\r\n                if (ranges && ranges.length) {\r\n                    if (ranges.length > 1) {\r\n                        const err = \"Too many HTTP ranges: \" + req.headers.range;\r\n                        debug(err);\r\n                        res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                            + err + \"</p></body></html>\");\r\n                        return;\r\n                    }\r\n                    partialByteBegin = ranges[0].begin;\r\n                    partialByteEnd = ranges[0].end;\r\n\r\n                    if (partialByteBegin < 0) {\r\n                        partialByteBegin = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // debug(`${pathInZip} >> ${partialByteBegin}-${partialByteEnd}`);\r\n            let zipStream_: IStreamAndLength;\r\n            try {\r\n                zipStream_ = isPartialByteRangeRequest && !isEncrypted ?\r\n                    await zip.entryStreamRangePromise(pathInZip, partialByteBegin, partialByteEnd) :\r\n                    await zip.entryStreamPromise(pathInZip);\r\n            } catch (err) {\r\n                debug(err);\r\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                    + err + \"</p></body></html>\");\r\n                return;\r\n            }\r\n\r\n            // TODO: isHead for encrypted Content-Length\r\n            if ((isEncrypted && (isObfuscatedFont || !server.disableDecryption)) &&\r\n                link) {\r\n\r\n                let decryptFail = false;\r\n                let transformedStream: IStreamAndLength;\r\n                try {\r\n                    transformedStream = await Transformers.tryStream(\r\n                        publication, link,\r\n                        zipStream_,\r\n                        isPartialByteRangeRequest, partialByteBegin, partialByteEnd);\r\n                } catch (err) {\r\n                    debug(err);\r\n                    res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                        + err + \"</p></body></html>\");\r\n                    return;\r\n                }\r\n                if (transformedStream) {\r\n                    zipStream_ = transformedStream;\r\n                } else {\r\n                    decryptFail = true;\r\n                }\r\n\r\n                if (decryptFail) {\r\n                    const err = \"Encryption scheme not supported.\";\r\n                    debug(err);\r\n                    res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                        + err + \"</p></body></html>\");\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (partialByteEnd < 0) {\r\n                partialByteEnd = zipStream_.length - 1;\r\n            }\r\n\r\n            partialByteLength = isPartialByteRangeRequest ?\r\n                partialByteEnd - partialByteBegin + 1 :\r\n                zipStream_.length;\r\n\r\n            if (isShow) {\r\n                let zipData: Buffer;\r\n                try {\r\n                    zipData = await streamToBufferPromise(zipStream_.stream);\r\n                } catch (err) {\r\n                    debug(err);\r\n                    res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                        + err + \"</p></body></html>\");\r\n                    return;\r\n                }\r\n                if (zipData) {\r\n                    debug(\"CHECK: \" + zipStream_.length + \" ==> \" + zipData.length);\r\n                }\r\n                res.status(200).send(\"<html><body>\" +\r\n                    \"<h1>\" + path.basename(pathBase64Str) + \"</h1>\" +\r\n                    \"<h2>\" + mediaType + \"</h2>\" +\r\n                    ((isText && zipData) ?\r\n                        (\"<p><pre>\" +\r\n                            zipData.toString(\"utf8\").replace(/&/g, \"&amp;\")\r\n                                .replace(/</g, \"&lt;\")\r\n                                .replace(/>/g, \"&gt;\")\r\n                                .replace(/\"/g, \"&quot;\")\r\n                                .replace(/'/g, \"&apos;\") +\r\n                            \"</pre></p>\")\r\n                        : \"<p>BINARY</p>\"\r\n                    ) + \"</body></html>\");\r\n\r\n                return;\r\n            }\r\n\r\n            server.setResponseCORS(res);\r\n            res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\r\n\r\n            if (mediaType) {\r\n                res.set(\"Content-Type\", mediaType);\r\n                // res.type(mediaType);\r\n            }\r\n\r\n            res.setHeader(\"Accept-Ranges\", \"bytes\");\r\n\r\n            if (isPartialByteRangeRequest) {\r\n                // res.setHeader(\"Connection\", \"close\");\r\n                // res.setHeader(\"Transfer-Encoding\", \"chunked\");\r\n                res.setHeader(\"Content-Length\", `${partialByteLength}`);\r\n                const rangeHeader = `bytes ${partialByteBegin}-${partialByteEnd}/${zipStream_.length}`;\r\n                // debug(\"+++> \" + rangeHeader + \" (( \" + partialByteLength);\r\n                res.setHeader(\"Content-Range\", rangeHeader);\r\n                res.status(206);\r\n            } else {\r\n                res.setHeader(\"Content-Length\", `${zipStream_.length}`);\r\n                // debug(\"---> \" + zipStream_.length);\r\n                res.status(200);\r\n            }\r\n\r\n            if (isHead) {\r\n                res.end();\r\n                // } else if (zipStream_.length === 2) {\r\n                //     debug(\"===> BUFFER SEND (short stream)\");\r\n                //     let zipData: Buffer;\r\n                //     try {\r\n                //         zipData = await streamToBufferPromise(zipStream_.stream);\r\n                //     } catch (err) {\r\n                //         debug(err);\r\n                //         res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                //             + err + \"</p></body></html>\");\r\n                //         return;\r\n                //     }\r\n                //     if (zipData) {\r\n                //         debug(\"CHECK: \" + zipStream_.length + \" ==> \" + zipData.length);\r\n                //     }\r\n                //     res.send(zipStream_.stream);\r\n            } else {\r\n                // debug(\"===> STREAM PIPE\");\r\n\r\n                // const counterStream = new CounterPassThroughStream(++streamCounter);\r\n\r\n                zipStream_.stream\r\n                    // .on(\"finish\", () => {\r\n                    //     debug(\"ZIP FINISH \" + counterStream.id);\r\n                    // })\r\n                    // .on(\"end\", () => {\r\n                    //     debug(\"ZIP END \" + counterStream.id);\r\n                    // })\r\n                    // .on(\"close\", () => {\r\n                    //     debug(\"ZIP CLOSE \" + counterStream.id);\r\n                    // })\r\n                    // .on(\"error\", () => {\r\n                    //     debug(\"ZIP ERROR \" + counterStream.id);\r\n                    // })\r\n                    // .on(\"pipe\", () => {\r\n                    //     debug(\"ZIP PIPE \" + counterStream.id);\r\n                    // })\r\n                    // .on(\"unpipe\", () => {\r\n                    //     debug(\"ZIP UNPIPE \" + counterStream.id);\r\n                    // })\r\n                    // .on(\"drain\", () => {\r\n                    //     debug(\"ZIP DRAIN \" + counterStream.id);\r\n                    // })\r\n                    // .pipe(counterStream)\r\n                    // .on(\"progress\", function f() {\r\n                    //     debug(\"CounterPassThroughStream PROGRESS: \" +\r\n                    //         (this as CounterPassThroughStream).id +\r\n                    //         \" -- \" + (this as CounterPassThroughStream).bytesReceived);\r\n                    // })\r\n                    // .on(\"end\", function f() {\r\n                    //     debug(\"CounterPassThroughStream END: \" +\r\n                    //         (this as CounterPassThroughStream).id);\r\n                    // })\r\n                    // .on(\"close\", function f() {\r\n                    //     debug(\"CounterPassThroughStream CLOSE: \" +\r\n                    //         (this as CounterPassThroughStream).id);\r\n                    // })\r\n                    // .once(\"finish\", function f() {\r\n                    //     debug(\"CounterPassThroughStream FINISH: \" +\r\n                    //         (this as CounterPassThroughStream).id +\r\n                    //         \" -- \" + (this as CounterPassThroughStream).bytesReceived);\r\n                    // })\r\n                    // .on(\"error\", function f() {\r\n                    //     debug(\"CounterPassThroughStream ERROR: \" +\r\n                    //         (this as CounterPassThroughStream).id);\r\n                    // })\r\n                    // .on(\"pipe\", function f() {\r\n                    //     debug(\"CounterPassThroughStream PIPE: \" +\r\n                    //         (this as CounterPassThroughStream).id);\r\n                    // })\r\n                    // .on(\"unpipe\", function f() {\r\n                    //     debug(\"CounterPassThroughStream UNPIPE: \" +\r\n                    //         (this as CounterPassThroughStream).id);\r\n                    // })\r\n                    // // .on(\"drain\", function f() {\r\n                    // //     debug(\"CounterPassThroughStream DRAIN: \" +\r\n                    // //         (this as CounterPassThroughStream).id);\r\n                    // // })\r\n                    .pipe(res)\r\n                    // .on(\"finish\", () => {\r\n                    //     debug(\"RES FINISH \" + counterStream.id);\r\n                    // })\r\n                    // .on(\"end\", () => {\r\n                    //     debug(\"RES END \" + counterStream.id);\r\n                    // })\r\n                    .on(\"close\", () => {\r\n                        // debug(\"RES CLOSE \" + counterStream.id);\r\n\r\n                        res.end();\r\n\r\n                        // counterStream.unpipe(res);\r\n                        // counterStream.end();\r\n                        // if (zipStream_) {\r\n                        //     zipStream_.stream.unpipe(counterStream);\r\n                        // }\r\n\r\n                        // zipStream.close();\r\n                    })\r\n                    // .on(\"error\", () => {\r\n                    //     debug(\"RES ERROR \" + counterStream.id);\r\n                    // })\r\n                    // .on(\"pipe\", () => {\r\n                    //     debug(\"RES PIPE \" + counterStream.id);\r\n                    // })\r\n                    // .on(\"unpipe\", () => {\r\n                    //     debug(\"RES UNPIPE \" + counterStream.id);\r\n                    // })\r\n                    // .on(\"drain\", () => {\r\n                    //     debug(\"RES DRAIN \" + counterStream.id);\r\n                    // })\r\n                    ;\r\n            }\r\n        });\r\n\r\n    routerPathBase64.param(\"asset\", (req, _res, next, value, _name) => {\r\n        (req as any).asset = value;\r\n        next();\r\n    });\r\n\r\n    routerPathBase64.use(\"/:pathBase64/:asset(*)\", routerAssets);\r\n}\r\n"]}