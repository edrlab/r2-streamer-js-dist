{"version":3,"file":"server-root.js","sourceRoot":"","sources":["../../../../src/http/server-root.ts"],"names":[],"mappings":";;AAOA,6BAA6B;AAE7B,gEAAuF;AAEvF,6CAAmD;AAEnD,+CAA8D;AAE9D,mEAAoE;AACpE,mEAAoE;AACpE,iFAAkF;AAClF,qEAAsE;AACtE,6CAA8C;AAC9C,6CAAoD;AACpD,qDAAsD;AAKtD,SAAgB,UAAU,CAAC,MAAc,EAAE,SAA8B;IAErE,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAqB,EAAE,GAAqB,EAAE,EAAE;QAEhE,MAAM,IAAI,GACN;;;;;EAKV,MAAM,CAAC,eAAe,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACvB,MAAM,cAAc,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC1D,OAAO;gBACP,2BAAc,IAAI,qCAA0B,CAAC,cAAc,CAAC;EAC1E,iBAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;;CAEvC,CAAC;QACU,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;EACrB,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;YAEhB,mDAA0B;;CAErC;;;gBAGe,mCAAkB,IAAI,mBAAK;;EAEzC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACpB,iCAAoB;CACnC;;EAEC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACZ,iDAAyB;gBACzB,iDAAyB;gBACzB,+DAAgC;CAC/C;;;;CAIA,CAAC;QAEM,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,kBAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;AACP,CAAC;AA3CD,gCA2CC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as path from \"path\";\n\nimport { encodeURIComponent_RFC3986, isHTTP } from \"@r2-utils-js/_utils/http/UrlUtils\";\nimport * as express from \"express\";\nimport { html as beautifyHtml } from \"js-beautify\";\n\nimport { _jsonPath, _show, _urlEncoded } from \"./request-ext\";\nimport { Server } from \"./server\";\nimport { serverOPDS_browse_v1_PATH } from \"./server-opds-browse-v1\";\nimport { serverOPDS_browse_v2_PATH } from \"./server-opds-browse-v2\";\nimport { serverOPDS_convert_v1_to_v2_PATH } from \"./server-opds-convert-v1-to-v2\";\nimport { serverOPDS_local_feed_PATH } from \"./server-opds-local-feed\";\nimport { serverPub_PATH } from \"./server-pub\";\nimport { serverRemotePub_PATH } from \"./server-url\";\nimport { serverVersion_PATH } from \"./server-version\";\n\n// import * as debug_ from \"debug\";\n// const debug = debug_(\"r2:streamer#http/server-root\");\n\nexport function serverRoot(server: Server, topRouter: express.Application) {\n\n    topRouter.get(\"/\", (_req: express.Request, res: express.Response) => {\n\n        const html =\n            `\\\n<!DOCTYPE html>\n<html>\n<body>\n<h1>Local Publications</h1>\n${server.getPublications().map((pub) => {\n                const filePathBase64 = new Buffer(pub).toString(\"base64\");\n                return `\\\n<h2><a href=\".${serverPub_PATH}/${encodeURIComponent_RFC3986(filePathBase64)}\">\\\n${isHTTP(pub) ? pub : path.basename(pub)}\\\n</a></h2>\n`;\n            }).join(\"\")}\\\n${server.disableOPDS ? \"\" : `\\\n<p>\n<a href='.${serverOPDS_local_feed_PATH}'>See OPDS2 Feed</a> (JSON)\n</p>\n`}\\\n<h1>Additional Services</h1>\n\n<h2><a href='.${serverVersion_PATH}/${_show}'>Display Server Version</a></h2>\n\n${server.disableRemotePubUrl ? \"\" : `\\\n<h2><a href='.${serverRemotePub_PATH}'>Load Remote Publication</a> (HTTP URL)</h2>\n`}\\\n\n${server.disableOPDS ? \"\" : `\\\n<h2><a href='.${serverOPDS_browse_v1_PATH}'>Browse OPDS1 (XML/Atom) feed</a> (HTTP URL)</h2>\n<h2><a href='.${serverOPDS_browse_v2_PATH}'>Browse OPDS2 (JSON) feed</a> (HTTP URL)</h2>\n<h2><a href='.${serverOPDS_convert_v1_to_v2_PATH}'>Convert OPDS v1 to v2</a> (HTTP URL)</h2>\n`}\\\n\n</body>\n</html>\n`;\n\n        res.status(200).send(beautifyHtml(html));\n    });\n}\n"]}