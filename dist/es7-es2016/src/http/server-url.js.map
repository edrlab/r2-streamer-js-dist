{"version":3,"file":"server-url.js","sourceRoot":"","sources":["../../../../src/http/server-url.ts"],"names":[],"mappings":";;AAAA,gCAAgC;AAChC,mCAAmC;AACnC,iCAAiC;AAEjC,+CAAsE;AAEtE,qFAAyE;AAEzE,MAAM,KAAK,GAAG,MAAM,CAAC,6BAA6B,CAAC,CAAC;AAEpD,mBAA0B,OAAe,EAAE,SAA8B;IAErE,MAAM,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IACpD,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IAElC,SAAS,CAAC,GAAG,CAAC,sDAAqB,CAAC,CAAC;IAErC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAqB,EAAE,GAAqB,EAAE,EAAE;QAEhE,IAAI,IAAI,GAAG,cAAc,CAAC;QAC1B,IAAI,IAAI,4EAA4E;YAChF,8DAA8D;YAC9D,kDAAkD;YAClD,oBAAoB;YACpB,+CAA+C;YAC/C,mBAAmB;YAGnB,YAAY;YACZ,oEAAoE;YACpE,gCAAgC,CAAC;QACrC,IAAI,IAAI,SAAS,CAAC;QAElB,IAAI,IAAI,gCAAgC,CAAC;QAEzC,IAAI,IAAI,sCAAsC;YAC1C,mDAAmD;YACnD,0CAA0C,CAAC;QAE/C,IAAI,IAAI,gBAAgB,CAAC;QAEzB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;QAC3D,GAAgC,CAAC,UAAU,GAAG,KAAK,CAAC;QACrD,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,CAAC,IAAI,GAAG,yBAAW,GAAG,KAAK,EAAE,CAAC,GAAoB,EAAE,GAAqB,EAAE,EAAE;QAEtF,MAAM,SAAS,GAAG,GAAG,CAAC,MAAkC,CAAC;QAEzD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;YACxB,SAAS,CAAC,UAAU,GAAI,GAAgC,CAAC,UAAU,CAAC;QACxE,CAAC;QAED,MAAM,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;QAIxC,KAAK,CAAC,UAAU,CAAC,CAAC;QAElB,MAAM,gBAAgB,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACnE,MAAM,QAAQ,GAAG,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;cACtE,OAAO,GAAG,gBAAgB,GAAG,GAAG,CAAC;QAKvC,KAAK,CAAC,aAAa,GAAG,CAAC,WAAW,QAAQ,QAAQ,EAAE,CAAC,CAAC;QACtD,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AACrC,CAAC;AAjED,8BAiEC","sourcesContent":["import * as debug_ from \"debug\";\nimport * as express from \"express\";\nimport * as morgan from \"morgan\";\n\nimport { IRequestPayloadExtension, _urlEncoded } from \"./request-ext\";\nimport { Server } from \"./server\";\nimport { trailingSlashRedirect } from \"./server-trailing-slash-redirect\";\n\nconst debug = debug_(\"r2:streamer#http/server-url\");\n\nexport function serverUrl(_server: Server, topRouter: express.Application) {\n\n    const routerUrl = express.Router({ strict: false });\n    routerUrl.use(morgan(\"combined\"));\n\n    routerUrl.use(trailingSlashRedirect);\n\n    routerUrl.get(\"/\", (_req: express.Request, res: express.Response) => {\n\n        let html = \"<html><head>\";\n        html += `<script type=\"text/javascript\">function encodeURIComponent_RFC3986(str) { ` +\n            `return encodeURIComponent(str).replace(/[!'()*]/g, (c) => { ` +\n            `return \"%\" + c.charCodeAt(0).toString(16); }); }` +\n            `function go(evt) {` +\n            `if (evt) { evt.preventDefault(); } var url = ` +\n            `location.origin +` +\n            // `location.protocol + '//' + location.hostname + ` +\n            // `(location.port ? (':' + location.port) : '') + ` +\n            ` '/url/' +` +\n            ` encodeURIComponent_RFC3986(document.getElementById(\"url\").value);` +\n            `location.href = url;}</script>`;\n        html += \"</head>\";\n\n        html += \"<body><h1>Publication URL</h1>\";\n\n        html += `<form onsubmit=\"go();return false;\">` +\n            `<input type=\"text\" name=\"url\" id=\"url\" size=\"80\">` +\n            `<input type=\"submit\" value=\"Go!\"></form>`;\n\n        html += \"</body></html>\";\n\n        res.status(200).send(html);\n    });\n\n    routerUrl.param(\"urlEncoded\", (req, _res, next, value, _name) => {\n        (req as IRequestPayloadExtension).urlEncoded = value;\n        next();\n    });\n\n    routerUrl.get(\"/:\" + _urlEncoded + \"(*)\", (req: express.Request, res: express.Response) => {\n\n        const reqparams = req.params as IRequestPayloadExtension;\n\n        if (!reqparams.urlEncoded) {\n            reqparams.urlEncoded = (req as IRequestPayloadExtension).urlEncoded;\n        }\n\n        const urlDecoded = reqparams.urlEncoded;\n        // if (urlDecoded.substr(-1) === \"/\") {\n        //     urlDecoded = urlDecoded.substr(0, urlDecoded.length - 1);\n        // }\n        debug(urlDecoded);\n\n        const urlDecodedBase64 = new Buffer(urlDecoded).toString(\"base64\");\n        const redirect = req.originalUrl.substr(0, req.originalUrl.indexOf(\"/url/\"))\n            + \"/pub/\" + urlDecodedBase64 + \"/\";\n\n        // No need for CORS with this URL redirect (HTML page lists available services)\n        // server.setResponseCORS(res);\n\n        debug(`REDIRECT: ${req.originalUrl} ==> ${redirect}`);\n        res.redirect(301, redirect);\n    });\n\n    topRouter.use(\"/url\", routerUrl);\n}\n"]}