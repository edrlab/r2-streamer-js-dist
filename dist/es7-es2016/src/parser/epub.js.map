{"version":3,"file":"epub.js","sourceRoot":"","sources":["../../../../src/parser/epub.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from \"path\";\nimport * as querystring from \"querystring\";\n\nimport { MediaOverlayNode, timeStrToSeconds } from \"@models/media-overlay\";\nimport { Metadata } from \"@models/metadata\";\nimport { BelongsTo } from \"@models/metadata-belongsto\";\nimport { Collection } from \"@models/metadata-collection\";\nimport { Contributor } from \"@models/metadata-contributor\";\nimport { Encrypted } from \"@models/metadata-encrypted\";\nimport { IStringMap } from \"@models/metadata-multilang\";\nimport { Properties } from \"@models/metadata-properties\";\nimport { Subject } from \"@models/metadata-subject\";\nimport { Publication } from \"@models/publication\";\nimport { Link } from \"@models/publication-link\";\nimport { streamToBufferPromise } from \"@utils/stream/BufferUtils\";\nimport { XML } from \"@utils/xml-js-mapper\";\nimport { IStreamAndLength, IZip } from \"@utils/zip/zip\";\nimport { zipLoadPromise } from \"@utils/zip/zipFactory\";\nimport * as debug_ from \"debug\";\nimport * as sizeOf from \"image-size\";\nimport * as moment from \"moment\";\nimport { JSON as TAJSON } from \"ta-json\";\nimport * as xmldom from \"xmldom\";\nimport * as xpath from \"xpath\";\n\nimport { Container } from \"./epub/container\";\nimport { Rootfile } from \"./epub/container-rootfile\";\nimport { Encryption } from \"./epub/encryption\";\nimport { LCP } from \"./epub/lcp\";\nimport { NCX } from \"./epub/ncx\";\nimport { NavPoint } from \"./epub/ncx-navpoint\";\nimport { OPF } from \"./epub/opf\";\nimport { Author } from \"./epub/opf-author\";\nimport { Manifest } from \"./epub/opf-manifest\";\nimport { Metafield } from \"./epub/opf-metafield\";\nimport { Title } from \"./epub/opf-title\";\nimport { SMIL } from \"./epub/smil\";\nimport { Par } from \"./epub/smil-par\";\nimport { Seq } from \"./epub/smil-seq\";\nimport { SeqOrPar } from \"./epub/smil-seq-or-par\";\n\nconst debug = debug_(\"r2:epub\");\n\nconst epub3 = \"3.0\";\nconst epub301 = \"3.0.1\";\nconst epub31 = \"3.1\";\n// const epub2 = \"2.0\";\n// const epub201 = \"2.0.1\";\nconst autoMeta = \"auto\";\nconst noneMeta = \"none\";\nconst reflowableMeta = \"reflowable\";\n\nexport const mediaOverlayURLPath = \"media-overlay.json\";\nexport const mediaOverlayURLParam = \"resource\";\n\nexport const addCoverDimensions = async (publication: Publication, coverLink: Link): Promise<void> => {\n\n    const zipInternal = publication.findFromInternal(\"zip\");\n    if (zipInternal) {\n        const zip = zipInternal.Value as IZip;\n        if (zip.hasEntry(coverLink.Href)) {\n            let zipStream: IStreamAndLength | undefined;\n            try {\n                zipStream = await zip.entryStreamPromise(coverLink.Href);\n\n                let zipData: Buffer | undefined;\n                try {\n                    zipData = await streamToBufferPromise(zipStream.stream);\n\n                    const imageInfo = sizeOf(zipData);\n                    if (imageInfo) {\n                        coverLink.Width = imageInfo.width;\n                        coverLink.Height = imageInfo.height;\n\n                        if (coverLink.TypeLink &&\n                            coverLink.TypeLink.replace(\"jpeg\", \"jpg\").replace(\"+xml\", \"\")\n                            !== (\"image/\" + imageInfo.type)) {\n                                debug(`Wrong image type? ${coverLink.TypeLink} -- ${imageInfo.type}`);\n                        }\n                    }\n                } catch (err) {\n                    debug(err);\n                }\n            } catch (err) {\n                debug(err);\n            }\n        }\n    }\n};\n\nexport async function EpubParsePromise(filePath: string): Promise<Publication> {\n\n    const zip = await zipLoadPromise(filePath);\n\n    if (!zip.hasEntries()) {\n        return Promise.reject(\"EPUB zip empty\");\n    }\n\n    const publication = new Publication();\n    publication.Context = [\"http://readium.org/webpub/default.jsonld\"];\n    publication.Metadata = new Metadata();\n    publication.Metadata.RDFType = \"http://schema.org/Book\";\n    publication.Metadata.Modified = moment(Date.now()).toDate();\n\n    publication.AddToInternal(\"filename\", path.basename(filePath));\n\n    publication.AddToInternal(\"type\", \"epub\");\n    publication.AddToInternal(\"zip\", zip);\n\n    let lcpl: LCP | undefined;\n    const lcplZipPath = \"META-INF/license.lcpl\";\n    if (zip.hasEntry(lcplZipPath)) {\n        const lcplZipStream_ = await zip.entryStreamPromise(lcplZipPath);\n        const lcplZipStream = lcplZipStream_.stream;\n        const lcplZipData = await streamToBufferPromise(lcplZipStream);\n\n        const lcplStr = lcplZipData.toString(\"utf8\");\n        const lcplJson = global.JSON.parse(lcplStr);\n        debug(lcplJson);\n        lcpl = TAJSON.deserialize<LCP>(lcplJson, LCP);\n        lcpl.ZipPath = lcplZipPath;\n        lcpl.JsonSource = lcplStr;\n\n        // breakLength: 100  maxArrayLength: undefined\n        // console.log(util.inspect(lcpl,\n        //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n\n        lcpl.init();\n        publication.LCP = lcpl;\n\n        // // breakLength: 100  maxArrayLength: undefined\n        // console.log(util.inspect(this.LCP,\n        //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n\n        publication.AddLink(\"application/vnd.readium.lcp.license-1.0+json\", [\"license\"],\n            lcpl.ZipPath, false);\n    }\n\n    let encryption: Encryption | undefined;\n    const encZipPath = \"META-INF/encryption.xml\";\n    if (zip.hasEntry(encZipPath)) {\n        const encryptionXmlZipStream_ = await zip.entryStreamPromise(encZipPath);\n        const encryptionXmlZipStream = encryptionXmlZipStream_.stream;\n        const encryptionXmlZipData = await streamToBufferPromise(encryptionXmlZipStream);\n        const encryptionXmlStr = encryptionXmlZipData.toString(\"utf8\");\n        const encryptionXmlDoc = new xmldom.DOMParser().parseFromString(encryptionXmlStr);\n\n        encryption = XML.deserialize<Encryption>(encryptionXmlDoc, Encryption);\n        encryption.ZipPath = encZipPath;\n\n        // breakLength: 100  maxArrayLength: undefined\n        // console.log(util.inspect(encryption,\n        //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n    }\n\n    const containerZipPath = \"META-INF/container.xml\";\n    const containerXmlZipStream_ = await zip.entryStreamPromise(containerZipPath);\n    const containerXmlZipStream = containerXmlZipStream_.stream;\n    const containerXmlZipData = await streamToBufferPromise(containerXmlZipStream);\n    const containerXmlStr = containerXmlZipData.toString(\"utf8\");\n    const containerXmlDoc = new xmldom.DOMParser().parseFromString(containerXmlStr);\n\n    // debug(containerXmlDoc);\n    // debug(containerXmlStr);\n    // const containerXmlRootElement = xpath.select1(\"/\", containerXmlDoc);\n    // debug(containerXmlRootElement.toString());\n\n    const container = XML.deserialize<Container>(containerXmlDoc, Container);\n    container.ZipPath = containerZipPath;\n    // breakLength: 100  maxArrayLength: undefined\n    // console.log(util.inspect(container,\n    //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n\n    const rootfile = container.Rootfile[0];\n\n    // debug(`${rootfile.Path}:`);\n\n    // let timeBegin = process.hrtime();\n\n    const opfZipStream_ = await zip.entryStreamPromise(rootfile.Path);\n    const opfZipStream = opfZipStream_.stream;\n\n    // const timeElapsed1 = process.hrtime(timeBegin);\n    // debug(`1) ${timeElapsed1[0]} seconds + ${timeElapsed1[1]} nanoseconds`);\n    // timeBegin = process.hrtime();\n\n    const opfZipData = await streamToBufferPromise(opfZipStream);\n\n    // debug(`${opfZipData.length} bytes`);\n\n    // const timeElapsed2 = process.hrtime(timeBegin);\n    // debug(`2) ${timeElapsed2[0]} seconds + ${timeElapsed2[1]} nanoseconds`);\n    // timeBegin = process.hrtime();\n\n    const opfStr = opfZipData.toString(\"utf8\");\n\n    // const timeElapsed3 = process.hrtime(timeBegin);\n    // debug(`3) ${timeElapsed3[0]} seconds + ${timeElapsed3[1]} nanoseconds`);\n    // timeBegin = process.hrtime();\n\n    // TODO: this takes some time with large OPF XML data\n    // (typically: many manifest items),\n    // but it remains acceptable.\n    // e.g. BasicTechnicalMathWithCalculus.epub with 2.5MB OPF!\n    const opfDoc = new xmldom.DOMParser().parseFromString(opfStr);\n\n    // const timeElapsed4 = process.hrtime(timeBegin);\n    // debug(`4) ${timeElapsed4[0]} seconds + ${timeElapsed4[1]} nanoseconds`);\n    // const timeBegin = process.hrtime();\n\n    // tslint:disable-next-line:no-string-literal\n    // process.env[\"OPF_PARSE\"] = \"true\";\n    // TODO: this takes a MASSIVE amount of time with large OPF XML data\n    // (typically: many manifest items)\n    // e.g. BasicTechnicalMathWithCalculus.epub with 2.5MB OPF!\n    // culprit: XPath lib ... so we use our own mini XPath parser/matcher\n    // (=> performance gain in orders of magnitude!)\n    const opf = XML.deserialize<OPF>(opfDoc, OPF);\n    // tslint:disable-next-line:no-string-literal\n    // process.env[\"OPF_PARSE\"] = \"false\";\n\n    // const timeElapsed5 = process.hrtime(timeBegin);\n    // debug(`5) ${timeElapsed5[0]} seconds + ${timeElapsed5[1]} nanoseconds`);\n\n    opf.ZipPath = rootfile.Path;\n\n    // breakLength: 100  maxArrayLength: undefined\n    // console.log(util.inspect(opf,\n    //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n\n    // const epubVersion = getEpubVersion(rootfile, opf);\n\n    let ncx: NCX | undefined;\n    if (opf.Spine.Toc) {\n        const ncxManItem = opf.Manifest.find((manifestItem) => {\n            return manifestItem.ID === opf.Spine.Toc;\n        });\n        if (ncxManItem) {\n            const ncxFilePath = path.join(path.dirname(opf.ZipPath), ncxManItem.Href)\n                .replace(/\\\\/g, \"/\");\n            // debug(\"########## NCX: \"\n            //     + opf.ZipPath\n            //     + \" == \"\n            //     + ncxManItem.Href\n            //     + \" -- \"\n            //     + ncxFilePath);\n            const ncxZipStream_ = await zip.entryStreamPromise(ncxFilePath);\n            const ncxZipStream = ncxZipStream_.stream;\n            const ncxZipData = await streamToBufferPromise(ncxZipStream);\n            const ncxStr = ncxZipData.toString(\"utf8\");\n            const ncxDoc = new xmldom.DOMParser().parseFromString(ncxStr);\n            ncx = XML.deserialize<NCX>(ncxDoc, NCX);\n            ncx.ZipPath = ncxFilePath;\n\n            // breakLength: 100  maxArrayLength: undefined\n            // console.log(util.inspect(ncx,\n            //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n        }\n    }\n\n    addTitle(publication, rootfile, opf);\n\n    addIdentifier(publication, rootfile, opf);\n\n    if (opf.Metadata) {\n        if (opf.Metadata.Language) {\n            publication.Metadata.Language = opf.Metadata.Language;\n        }\n        if (opf.Metadata.Rights && opf.Metadata.Rights.length) {\n            publication.Metadata.Rights = opf.Metadata.Rights.join(\" \");\n        }\n        if (opf.Metadata.Description && opf.Metadata.Description.length) {\n            publication.Metadata.Description = opf.Metadata.Description[0];\n        }\n        if (opf.Metadata.Publisher && opf.Metadata.Publisher.length) {\n            publication.Metadata.Publisher = [];\n\n            opf.Metadata.Publisher.forEach((pub) => {\n                const contrib = new Contributor();\n                contrib.Name = pub;\n                publication.Metadata.Publisher.push(contrib);\n            });\n        }\n        if (opf.Metadata.Source && opf.Metadata.Source.length) {\n            publication.Metadata.Source = opf.Metadata.Source[0];\n        }\n\n        if (opf.Metadata.Contributor && opf.Metadata.Contributor.length) {\n            opf.Metadata.Contributor.forEach((cont) => {\n                addContributor(publication, rootfile, opf, cont, undefined);\n            });\n        }\n        if (opf.Metadata.Creator && opf.Metadata.Creator.length) {\n            opf.Metadata.Creator.forEach((cont) => {\n                addContributor(publication, rootfile, opf, cont, \"aut\");\n            });\n        }\n    }\n\n    if (opf.Spine && opf.Spine.PageProgression) {\n        publication.Metadata.Direction = opf.Spine.PageProgression;\n    }\n    // else {\n    //     publication.Metadata.Direction = \"default\";\n    // }\n\n    if (isEpub3OrMore(rootfile, opf)) {\n        findContributorInMeta(publication, rootfile, opf);\n    }\n    await fillSpineAndResource(publication, rootfile, opf);\n\n    addRendition(publication, rootfile, opf);\n\n    await addCoverRel(publication, rootfile, opf);\n\n    if (encryption) {\n        fillEncryptionInfo(publication, rootfile, opf, encryption, lcpl);\n    }\n\n    await fillTOCFromNavDoc(publication, rootfile, opf, zip);\n\n    if (!publication.TOC || !publication.TOC.length) {\n        if (ncx) {\n            fillTOCFromNCX(publication, rootfile, opf, ncx);\n            fillPageListFromNCX(publication, rootfile, opf, ncx);\n        }\n        fillLandmarksFromGuide(publication, rootfile, opf);\n    }\n\n    fillCalibreSerieInfo(publication, rootfile, opf);\n    fillSubject(publication, rootfile, opf);\n\n    fillPublicationDate(publication, rootfile, opf);\n\n    await fillMediaOverlay(publication, rootfile, opf, zip);\n\n    return publication;\n}\n\n// private filePathToTitle(filePath: string): string {\n//     const fileName = path.basename(filePath);\n//     return slugify(fileName, \"_\").replace(/[\\.]/g, \"_\");\n// }\n\nconst fillMediaOverlay =\n    async (publication: Publication, rootfile: Rootfile, opf: OPF, zip: IZip)\n        : Promise<void> => {\n\n        if (!publication.Resources) {\n            return;\n        }\n\n        // no forEach(), because of await/async within the iteration body\n        // publication.Resources.forEach(async (item) => {\n        for (const item of publication.Resources) {\n            if (item.TypeLink !== \"application/smil+xml\") {\n                continue;\n            }\n\n            const smilFilePath = item.Href;\n            if (!zip.hasEntry(smilFilePath)) {\n                continue;\n            }\n\n            if (item.Properties && item.Properties.Encrypted) {\n                debug(\"ENCRYPTED SMIL MEDIA OVERLAY: \" + smilFilePath);\n                continue;\n            }\n\n            const mo = new MediaOverlayNode();\n            mo.SmilPathInZip = smilFilePath;\n\n            const manItemsHtmlWithSmil: Manifest[] = [];\n            opf.Manifest.forEach((manItemHtmlWithSmil) => {\n                if (manItemHtmlWithSmil.MediaOverlay) { // HTML\n                    const manItemSmil = opf.Manifest.find((mi) => {\n                        if (mi.ID === manItemHtmlWithSmil.MediaOverlay) {\n                            return true;\n                        }\n                        return false;\n                    });\n                    if (manItemSmil) {\n                        const smilFilePath2 = path.join(path.dirname(opf.ZipPath), manItemSmil.Href)\n                            .replace(/\\\\/g, \"/\");\n                        if (smilFilePath2 === smilFilePath) {\n                            manItemsHtmlWithSmil.push(manItemHtmlWithSmil);\n                        }\n                    }\n                }\n            });\n\n            manItemsHtmlWithSmil.forEach((manItemHtmlWithSmil) => {\n\n                const htmlPathInZip = path.join(path.dirname(opf.ZipPath), manItemHtmlWithSmil.Href)\n                    .replace(/\\\\/g, \"/\");\n\n                const link = findLinKByHref(publication, rootfile, opf, htmlPathInZip);\n                if (link) {\n                    if (!link.MediaOverlays) {\n                        link.MediaOverlays = [];\n                    }\n\n                    const alreadyExists = link.MediaOverlays.find((moo) => {\n                        if (mo.SmilPathInZip === moo.SmilPathInZip) {\n                            return true;\n                        }\n                        return false;\n                    });\n                    if (!alreadyExists) {\n                        link.MediaOverlays.push(mo);\n                    }\n\n                    if (!link.Properties) {\n                        link.Properties = new Properties();\n                    }\n                    link.Properties.MediaOverlay = mediaOverlayURLPath + \"?\" +\n                        mediaOverlayURLParam + \"=\" + querystring.escape(link.Href);\n                }\n            });\n\n            const smilZipStream_ = await zip.entryStreamPromise(smilFilePath);\n            const smilZipStream = smilZipStream_.stream;\n            const smilZipData = await streamToBufferPromise(smilZipStream);\n            const smilStr = smilZipData.toString(\"utf8\");\n            const smilXmlDoc = new xmldom.DOMParser().parseFromString(smilStr);\n            const smil = XML.deserialize<SMIL>(smilXmlDoc, SMIL);\n            smil.ZipPath = smilFilePath;\n\n            // breakLength: 100  maxArrayLength: undefined\n            // console.log(util.inspect(smil,\n            //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n\n            mo.Role = [];\n            mo.Role.push(\"section\");\n\n            if (smil.Body) {\n                if (smil.Body.TextRef) {\n                    const zipPath = path.join(path.dirname(smil.ZipPath), smil.Body.TextRef)\n                        .replace(/\\\\/g, \"/\");\n                    mo.Text = zipPath;\n\n                }\n                if (smil.Body.Children && smil.Body.Children.length) {\n                    smil.Body.Children.forEach((seqChild) => {\n                        if (!mo.Children) {\n                            mo.Children = [];\n                        }\n                        addSeqToMediaOverlay(smil, publication, rootfile, opf, mo, mo.Children, seqChild);\n                    });\n                }\n            }\n        }\n\n        return;\n    };\n\nconst addSeqToMediaOverlay = (\n    smil: SMIL, publication: Publication, rootfile: Rootfile, opf: OPF,\n    rootMO: MediaOverlayNode, mo: MediaOverlayNode[], seqChild: SeqOrPar) => {\n\n    const moc = new MediaOverlayNode();\n    mo.push(moc);\n\n    if (seqChild instanceof Seq) {\n        moc.Role = [];\n        moc.Role.push(\"section\");\n\n        const seq = seqChild as Seq;\n\n        if (seq.TextRef) {\n            const zipPath = path.join(path.dirname(smil.ZipPath), seq.TextRef)\n                .replace(/\\\\/g, \"/\");\n            moc.Text = zipPath;\n        }\n\n        if (seq.Children && seq.Children.length) {\n            seq.Children.forEach((child) => {\n                if (!moc.Children) {\n                    moc.Children = [];\n                }\n                addSeqToMediaOverlay(smil, publication, rootfile, opf, rootMO, moc.Children, child);\n            });\n        }\n    } else { // Par\n        const par = seqChild as Par;\n\n        if (par.Text && par.Text.Src) {\n            const zipPath = path.join(path.dirname(smil.ZipPath), par.Text.Src)\n                .replace(/\\\\/g, \"/\");\n            moc.Text = zipPath;\n        }\n        if (par.Audio && par.Audio.Src) {\n            const zipPath = path.join(path.dirname(smil.ZipPath), par.Audio.Src)\n                .replace(/\\\\/g, \"/\");\n            moc.Audio = zipPath;\n            moc.Audio += \"#t=\";\n            moc.Audio += par.Audio.ClipBegin ? timeStrToSeconds(par.Audio.ClipBegin) : \"0\";\n            if (par.Audio.ClipEnd) {\n                moc.Audio += \",\";\n                moc.Audio += timeStrToSeconds(par.Audio.ClipEnd);\n            }\n        }\n    }\n};\n\nconst fillPublicationDate = (publication: Publication, rootfile: Rootfile, opf: OPF) => {\n\n    if (opf.Metadata && opf.Metadata.Date && opf.Metadata.Date.length) {\n\n        if (isEpub3OrMore(rootfile, opf) && opf.Metadata.Date[0] && opf.Metadata.Date[0].Data) {\n            publication.Metadata.PublicationDate = moment(opf.Metadata.Date[0].Data).toDate();\n            return;\n        }\n\n        opf.Metadata.Date.forEach((date) => {\n            if (date.Data && date.Event && date.Event.indexOf(\"publication\") >= 0) {\n                publication.Metadata.PublicationDate = moment(date.Data).toDate();\n            }\n        });\n    }\n};\n\nconst findContributorInMeta = (publication: Publication, rootfile: Rootfile, opf: OPF) => {\n\n    if (opf.Metadata && opf.Metadata.Meta) {\n        opf.Metadata.Meta.forEach((meta) => {\n            if (meta.Property === \"dcterms:creator\" || meta.Property === \"dcterms:contributor\") {\n                const cont = new Author();\n                cont.Data = meta.Data;\n                cont.ID = meta.ID;\n                addContributor(publication, rootfile, opf, cont, undefined);\n            }\n        });\n    }\n};\n\nconst addContributor = (\n    publication: Publication, rootfile: Rootfile, opf: OPF, cont: Author, forcedRole: string | undefined) => {\n\n    const contributor = new Contributor();\n    let role: string | undefined;\n\n    // const epubVersion = getEpubVersion(rootfile, opf);\n\n    if (isEpub3OrMore(rootfile, opf)) {\n\n        const meta = findMetaByRefineAndProperty(rootfile, opf, cont.ID, \"role\");\n        if (meta && meta.Property === \"role\") {\n            role = meta.Data;\n        }\n        if (!role && forcedRole) {\n            role = forcedRole;\n        }\n\n        const metaAlt = findAllMetaByRefineAndProperty(rootfile, opf, cont.ID, \"alternate-script\");\n        if (metaAlt && metaAlt.length) {\n            contributor.Name = {} as IStringMap;\n\n            if (publication.Metadata &&\n                publication.Metadata.Language &&\n                publication.Metadata.Language.length) {\n\n                contributor.Name[publication.Metadata.Language[0].toLowerCase()] = cont.Data;\n            }\n\n            metaAlt.forEach((m) => {\n                if (m.Lang) {\n                    (contributor.Name as IStringMap)[m.Lang] = m.Data;\n                }\n            });\n        } else {\n            contributor.Name = cont.Data;\n        }\n    } else {\n        contributor.Name = cont.Data;\n        role = cont.Role;\n        if (!role && forcedRole) {\n            role = forcedRole;\n        }\n    }\n\n    if (role) {\n        switch (role) {\n            case \"aut\": {\n                if (!publication.Metadata.Author) {\n                    publication.Metadata.Author = [];\n                }\n                publication.Metadata.Author.push(contributor);\n                break;\n            }\n            case \"trl\": {\n                if (!publication.Metadata.Translator) {\n                    publication.Metadata.Translator = [];\n                }\n                publication.Metadata.Translator.push(contributor);\n                break;\n            }\n            case \"art\": {\n                if (!publication.Metadata.Artist) {\n                    publication.Metadata.Artist = [];\n                }\n                publication.Metadata.Artist.push(contributor);\n                break;\n            }\n            case \"edt\": {\n                if (!publication.Metadata.Editor) {\n                    publication.Metadata.Editor = [];\n                }\n                publication.Metadata.Editor.push(contributor);\n                break;\n            }\n            case \"ill\": {\n                if (!publication.Metadata.Illustrator) {\n                    publication.Metadata.Illustrator = [];\n                }\n                publication.Metadata.Illustrator.push(contributor);\n                break;\n            }\n            case \"ltr\": {\n                if (!publication.Metadata.Letterer) {\n                    publication.Metadata.Letterer = [];\n                }\n                publication.Metadata.Letterer.push(contributor);\n                break;\n            }\n            case \"pen\": {\n                if (!publication.Metadata.Penciler) {\n                    publication.Metadata.Penciler = [];\n                }\n                publication.Metadata.Penciler.push(contributor);\n                break;\n            }\n            case \"clr\": {\n                if (!publication.Metadata.Colorist) {\n                    publication.Metadata.Colorist = [];\n                }\n                publication.Metadata.Colorist.push(contributor);\n                break;\n            }\n            case \"ink\": {\n                if (!publication.Metadata.Inker) {\n                    publication.Metadata.Inker = [];\n                }\n                publication.Metadata.Inker.push(contributor);\n                break;\n            }\n            case \"nrt\": {\n                if (!publication.Metadata.Narrator) {\n                    publication.Metadata.Narrator = [];\n                }\n                publication.Metadata.Narrator.push(contributor);\n                break;\n            }\n            case \"pbl\": {\n                if (!publication.Metadata.Publisher) {\n                    publication.Metadata.Publisher = [];\n                }\n                publication.Metadata.Publisher.push(contributor);\n                break;\n            }\n            default: {\n                contributor.Role = role;\n\n                if (!publication.Metadata.Contributor) {\n                    publication.Metadata.Contributor = [];\n                }\n                publication.Metadata.Contributor.push(contributor);\n            }\n        }\n    }\n};\n\nconst addIdentifier = (publication: Publication, _rootfile: Rootfile, opf: OPF) => {\n    if (opf.Metadata && opf.Metadata.Identifier) {\n        if (opf.UniqueIdentifier && opf.Metadata.Identifier.length > 1) {\n            opf.Metadata.Identifier.forEach((iden) => {\n                if (iden.ID === opf.UniqueIdentifier) {\n                    publication.Metadata.Identifier = iden.Data;\n                }\n            });\n        } else if (opf.Metadata.Identifier.length > 0) {\n            publication.Metadata.Identifier = opf.Metadata.Identifier[0].Data;\n        }\n    }\n};\n\nconst addTitle = (publication: Publication, rootfile: Rootfile, opf: OPF) => {\n\n    if (isEpub3OrMore(rootfile, opf)) {\n        let mainTitle: Title | undefined;\n\n        if (opf.Metadata &&\n            opf.Metadata.Title &&\n            opf.Metadata.Title.length) {\n\n            if (opf.Metadata.Meta) {\n                const tt = opf.Metadata.Title.find((title) => {\n                    const refineID = \"#\" + title.ID;\n\n                    const m = opf.Metadata.Meta.find((meta) => {\n                        if (meta.Data === \"main\" && meta.Refine === refineID) {\n                            return true;\n                        }\n                        return false;\n                    });\n                    if (m) {\n                        return true;\n                    }\n                    return false;\n                });\n                if (tt) {\n                    mainTitle = tt;\n                }\n            }\n\n            if (!mainTitle) {\n                mainTitle = opf.Metadata.Title[0];\n            }\n        }\n\n        if (mainTitle) {\n            const metaAlt = findAllMetaByRefineAndProperty(rootfile, opf, mainTitle.ID, \"alternate-script\");\n            if (metaAlt && metaAlt.length) {\n                publication.Metadata.Title = {} as IStringMap;\n\n                if (mainTitle.Lang) {\n                    publication.Metadata.Title[mainTitle.Lang.toLowerCase()] = mainTitle.Data;\n                }\n\n                metaAlt.forEach((m) => {\n                    if (m.Lang) {\n                        (publication.Metadata.Title as IStringMap)[m.Lang.toLowerCase()] = m.Data;\n                    }\n                });\n            } else {\n                publication.Metadata.Title = mainTitle.Data;\n            }\n        }\n\n    } else {\n        if (opf.Metadata &&\n            opf.Metadata.Title &&\n            opf.Metadata.Title.length) {\n\n            publication.Metadata.Title = opf.Metadata.Title[0].Data;\n        }\n    }\n};\n\nconst addRelAndPropertiesToLink =\n    async (publication: Publication, link: Link, linkEpub: Manifest, rootfile: Rootfile, opf: OPF)\n        : Promise<void> => {\n\n        if (linkEpub.Properties) {\n            await addToLinkFromProperties(publication, link, linkEpub.Properties);\n        }\n        const spineProperties = findPropertiesInSpineForManifest(linkEpub, rootfile, opf);\n        if (spineProperties) {\n            await addToLinkFromProperties(publication, link, spineProperties);\n        }\n    };\n\nconst addToLinkFromProperties = async (publication: Publication, link: Link, propertiesString: string)\n    : Promise<void> => {\n\n    const properties = propertiesString.split(\" \");\n\n    const propertiesStruct = new Properties();\n\n    // https://idpf.github.io/epub-vocabs/rendition/\n\n    // no forEach(), because of await/async within the iteration body\n    // properties.forEach(async (p) => {\n    for (const p of properties) {\n        switch (p) {\n            case \"cover-image\": {\n                link.AddRel(\"cover\");\n                await addCoverDimensions(publication, link);\n                break;\n            }\n            case \"nav\": {\n                link.AddRel(\"contents\");\n                break;\n            }\n            case \"scripted\": {\n                if (!propertiesStruct.Contains) {\n                    propertiesStruct.Contains = [];\n                }\n                propertiesStruct.Contains.push(\"js\");\n                break;\n            }\n            case \"mathml\": {\n                if (!propertiesStruct.Contains) {\n                    propertiesStruct.Contains = [];\n                }\n                propertiesStruct.Contains.push(\"mathml\");\n                break;\n            }\n            case \"onix-record\": {\n                if (!propertiesStruct.Contains) {\n                    propertiesStruct.Contains = [];\n                }\n                propertiesStruct.Contains.push(\"onix\");\n                break;\n            }\n            case \"svg\": {\n                if (!propertiesStruct.Contains) {\n                    propertiesStruct.Contains = [];\n                }\n                propertiesStruct.Contains.push(\"svg\");\n                break;\n            }\n            case \"xmp-record\": {\n                if (!propertiesStruct.Contains) {\n                    propertiesStruct.Contains = [];\n                }\n                propertiesStruct.Contains.push(\"xmp\");\n                break;\n            }\n            case \"remote-resources\": {\n                if (!propertiesStruct.Contains) {\n                    propertiesStruct.Contains = [];\n                }\n                propertiesStruct.Contains.push(\"remote-resources\");\n                break;\n            }\n            case \"page-spread-left\": {\n                propertiesStruct.Page = \"left\";\n                break;\n            }\n            case \"page-spread-right\": {\n                propertiesStruct.Page = \"right\";\n                break;\n            }\n            case \"page-spread-center\": {\n                propertiesStruct.Page = \"center\";\n                break;\n            }\n            case \"rendition:spread-none\": {\n                propertiesStruct.Spread = noneMeta;\n                break;\n            }\n            case \"rendition:spread-auto\": {\n                propertiesStruct.Spread = autoMeta;\n                break;\n            }\n            case \"rendition:spread-landscape\": {\n                propertiesStruct.Spread = \"landscape\";\n                break;\n            }\n            case \"rendition:spread-portrait\": {\n                propertiesStruct.Spread = \"portrait\";\n                break;\n            }\n            case \"rendition:spread-both\": {\n                propertiesStruct.Spread = \"both\";\n                break;\n            }\n            case \"rendition:layout-reflowable\": {\n                propertiesStruct.Layout = reflowableMeta;\n                break;\n            }\n            case \"rendition:layout-pre-paginated\": {\n                propertiesStruct.Layout = \"fixed\";\n                break;\n            }\n            case \"rendition:orientation-auto\": {\n                propertiesStruct.Orientation = \"auto\";\n                break;\n            }\n            case \"rendition:orientation-landscape\": {\n                propertiesStruct.Orientation = \"landscape\";\n                break;\n            }\n            case \"rendition:orientation-portrait\": {\n                propertiesStruct.Orientation = \"portrait\";\n                break;\n            }\n            case \"rendition:flow-auto\": {\n                propertiesStruct.Overflow = autoMeta;\n                break;\n            }\n            case \"rendition:flow-paginated\": {\n                propertiesStruct.Overflow = \"paginated\";\n                break;\n            }\n            case \"rendition:flow-scrolled-continuous\": {\n                propertiesStruct.Overflow = \"scrolled-continuous\";\n                break;\n            }\n            case \"rendition:flow-scrolled-doc\": {\n                propertiesStruct.Overflow = \"scrolled\";\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n\n        if (propertiesStruct.Layout ||\n            propertiesStruct.Orientation ||\n            propertiesStruct.Overflow ||\n            propertiesStruct.Page ||\n            propertiesStruct.Spread ||\n            (propertiesStruct.Contains && propertiesStruct.Contains.length)) {\n\n            link.Properties = propertiesStruct;\n        }\n    }\n};\n\nconst addMediaOverlay = (link: Link, linkEpub: Manifest, rootfile: Rootfile, opf: OPF) => {\n    if (linkEpub.MediaOverlay) {\n        const meta = findMetaByRefineAndProperty(rootfile, opf, linkEpub.MediaOverlay, \"media:duration\");\n        if (meta) {\n            link.Duration = timeStrToSeconds(meta.Data);\n        }\n    }\n};\n\nconst findInManifestByID =\n    async (publication: Publication, rootfile: Rootfile, opf: OPF, ID: string): Promise<Link> => {\n\n        if (opf.Manifest && opf.Manifest.length) {\n            const item = opf.Manifest.find((manItem) => {\n                if (manItem.ID === ID) {\n                    return true;\n                }\n                return false;\n            });\n            if (item) {\n                const linkItem = new Link();\n                linkItem.TypeLink = item.MediaType;\n                const zipPath = path.join(path.dirname(opf.ZipPath), item.Href)\n                    .replace(/\\\\/g, \"/\");\n                linkItem.Href = zipPath;\n                await addRelAndPropertiesToLink(publication, linkItem, item, rootfile, opf);\n                addMediaOverlay(linkItem, item, rootfile, opf);\n                return linkItem;\n            }\n        }\n        return Promise.reject(`${ID} not found`);\n    };\n\nconst addRendition = (publication: Publication, _rootfile: Rootfile, opf: OPF) => {\n\n    if (opf.Metadata && opf.Metadata.Meta && opf.Metadata.Meta.length) {\n        const rendition = new Properties();\n\n        opf.Metadata.Meta.forEach((meta) => {\n            switch (meta.Property) {\n                case \"rendition:layout\": {\n                    if (meta.Data === \"pre-paginated\") {\n                        rendition.Layout = \"fixed\";\n                    } else if (meta.Data === \"reflowable\") {\n                        rendition.Layout = \"reflowable\";\n                    }\n                    break;\n                }\n                case \"rendition:orientation\": {\n                    rendition.Orientation = meta.Data;\n                    break;\n                }\n                case \"rendition:spread\": {\n                    rendition.Spread = meta.Data;\n                    break;\n                }\n                case \"rendition:flow\": {\n                    rendition.Overflow = meta.Data;\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        });\n\n        if (rendition.Layout || rendition.Orientation || rendition.Overflow || rendition.Page || rendition.Spread) {\n            publication.Metadata.Rendition = rendition;\n        }\n    }\n};\n\nconst fillSpineAndResource = async (publication: Publication, rootfile: Rootfile, opf: OPF)\n    : Promise<void> => {\n\n    if (opf.Spine && opf.Spine.Items && opf.Spine.Items.length) {\n        // no forEach(), because of await/async within the iteration body\n        // opf.Spine.Items.forEach(async (item) => {\n        for (const item of opf.Spine.Items) {\n\n            if (!item.Linear || item.Linear === \"yes\") {\n\n                let linkItem: Link | undefined;\n                try {\n                    linkItem = await findInManifestByID(publication, rootfile, opf, item.IDref);\n                } catch (err) {\n                    debug(err);\n                }\n\n                if (linkItem && linkItem.Href) {\n                    if (!publication.Spine) {\n                        publication.Spine = [];\n                    }\n                    publication.Spine.push(linkItem);\n                }\n            }\n        }\n    }\n\n    if (opf.Manifest && opf.Manifest.length) {\n\n        // no forEach(), because of await/async within the iteration body\n        // opf.Manifest.forEach(async (item) => {\n        for (const item of opf.Manifest) {\n\n            const zipPath = path.join(path.dirname(opf.ZipPath), item.Href)\n                .replace(/\\\\/g, \"/\");\n            const linkSpine = findInSpineByHref(publication, zipPath);\n            if (!linkSpine || !linkSpine.Href) {\n\n                const linkItem = new Link();\n                linkItem.TypeLink = item.MediaType;\n                linkItem.Href = zipPath;\n                await addRelAndPropertiesToLink(publication, linkItem, item, rootfile, opf);\n                addMediaOverlay(linkItem, item, rootfile, opf);\n\n                if (!publication.Resources) {\n                    publication.Resources = [];\n                }\n                publication.Resources.push(linkItem);\n            }\n        }\n    }\n};\n\nconst fillEncryptionInfo =\n    (publication: Publication, _rootfile: Rootfile, _opf: OPF, encryption: Encryption, lcp: LCP | undefined) => {\n\n        encryption.EncryptedData.forEach((encInfo) => {\n            const encrypted = new Encrypted();\n            encrypted.Algorithm = encInfo.EncryptionMethod.Algorithm;\n\n            if (lcp &&\n                encrypted.Algorithm !== \"http://www.idpf.org/2008/embedding\" &&\n                encrypted.Algorithm !== \"http://ns.adobe.com/pdf/enc#RC\") {\n                encrypted.Profile = lcp.Encryption.Profile;\n                encrypted.Scheme = \"http://readium.org/2014/01/lcp\";\n            }\n            if (encInfo.EncryptionProperties && encInfo.EncryptionProperties.length) {\n\n                encInfo.EncryptionProperties.forEach((prop) => {\n\n                    if (prop.Compression) {\n                        if (prop.Compression.OriginalLength) {\n                            encrypted.OriginalLength = parseFloat(prop.Compression.OriginalLength);\n                        }\n                        if (prop.Compression.Method === \"8\") {\n                            encrypted.Compression = \"deflate\";\n                        } else {\n                            encrypted.Compression = \"none\";\n                        }\n                    }\n                });\n            }\n\n            publication.Resources.forEach((l, _i, _arr) => {\n\n                const filePath = l.Href;\n                if (filePath === encInfo.CipherData.CipherReference.URI) {\n                    if (!l.Properties) {\n                        l.Properties = new Properties();\n                    }\n                    l.Properties.Encrypted = encrypted;\n                }\n            });\n\n            publication.Spine.forEach((l, _i, _arr) => {\n                const filePath = l.Href;\n                if (filePath === encInfo.CipherData.CipherReference.URI) {\n                    if (!l.Properties) {\n                        l.Properties = new Properties();\n                    }\n                    l.Properties.Encrypted = encrypted;\n                }\n            });\n        });\n    };\n\nconst fillPageListFromNCX = (publication: Publication, _rootfile: Rootfile, _opf: OPF, ncx: NCX) => {\n    if (ncx.PageList && ncx.PageList.PageTarget && ncx.PageList.PageTarget.length) {\n        ncx.PageList.PageTarget.forEach((pageTarget) => {\n            const link = new Link();\n            const zipPath = path.join(path.dirname(ncx.ZipPath), pageTarget.Content.Src)\n                .replace(/\\\\/g, \"/\");\n            link.Href = zipPath;\n            link.Title = pageTarget.Text;\n            if (!publication.PageList) {\n                publication.PageList = [];\n            }\n            publication.PageList.push(link);\n        });\n    }\n};\n\nconst fillTOCFromNCX = (publication: Publication, rootfile: Rootfile, opf: OPF, ncx: NCX) => {\n    if (ncx.Points && ncx.Points.length) {\n        ncx.Points.forEach((point) => {\n            if (!publication.TOC) {\n                publication.TOC = [];\n            }\n            fillTOCFromNavPoint(publication, rootfile, opf, ncx, point, publication.TOC);\n        });\n    }\n};\n\nconst fillLandmarksFromGuide = (publication: Publication, _rootfile: Rootfile, opf: OPF) => {\n    if (opf.Guide && opf.Guide.length) {\n        opf.Guide.forEach((ref) => {\n            if (ref.Href) {\n                const link = new Link();\n                const zipPath = path.join(path.dirname(opf.ZipPath), ref.Href)\n                    .replace(/\\\\/g, \"/\");\n                link.Href = zipPath;\n                link.Title = ref.Title;\n                if (!publication.Landmarks) {\n                    publication.Landmarks = [];\n                }\n                publication.Landmarks.push(link);\n            }\n        });\n    }\n};\n\nconst fillTOCFromNavPoint =\n    (publication: Publication, rootfile: Rootfile, opf: OPF, ncx: NCX, point: NavPoint, node: Link[]) => {\n\n        const link = new Link();\n        const zipPath = path.join(path.dirname(ncx.ZipPath), point.Content.Src)\n            .replace(/\\\\/g, \"/\");\n        link.Href = zipPath;\n        link.Title = point.Text;\n\n        if (point.Points && point.Points.length) {\n            point.Points.forEach((p) => {\n                if (!link.Children) {\n                    link.Children = [];\n                }\n                fillTOCFromNavPoint(publication, rootfile, opf, ncx, p, link.Children);\n            });\n        }\n\n        node.push(link);\n    };\n\nconst fillSubject = (publication: Publication, _rootfile: Rootfile, opf: OPF) => {\n    if (opf.Metadata && opf.Metadata.Subject && opf.Metadata.Subject.length) {\n        opf.Metadata.Subject.forEach((s) => {\n            const sub = new Subject();\n            sub.Name = s.Data;\n            sub.Code = s.Term;\n            sub.Scheme = s.Authority;\n            if (!publication.Metadata.Subject) {\n                publication.Metadata.Subject = [];\n            }\n            publication.Metadata.Subject.push(sub);\n        });\n    }\n};\n\nconst fillCalibreSerieInfo = (publication: Publication, _rootfile: Rootfile, opf: OPF) => {\n    let serie: string | undefined;\n    let seriePosition: number | undefined;\n\n    if (opf.Metadata && opf.Metadata.Meta && opf.Metadata.Meta.length) {\n        opf.Metadata.Meta.forEach((m) => {\n            if (m.Name === \"calibre:series\") {\n                serie = m.Content;\n            }\n            if (m.Name === \"calibre:series_index\") {\n                seriePosition = parseFloat(m.Content);\n            }\n        });\n    }\n\n    if (serie) {\n        const collection = new Collection();\n        collection.Name = serie;\n        if (seriePosition) {\n            collection.Position = seriePosition;\n        }\n        if (!publication.Metadata.BelongsTo) {\n            publication.Metadata.BelongsTo = new BelongsTo();\n        }\n        if (!publication.Metadata.BelongsTo.Series) {\n            publication.Metadata.BelongsTo.Series = [];\n        }\n        publication.Metadata.BelongsTo.Series.push(collection);\n    }\n};\n\nconst fillTOCFromNavDoc = async (publication: Publication, _rootfile: Rootfile, _opf: OPF, zip: IZip)\n    : Promise<void> => {\n\n    const navLink = publication.GetNavDoc();\n    if (!navLink) {\n        return;\n    }\n\n    const navDocFilePath = navLink.Href;\n    if (!zip.hasEntry(navDocFilePath)) {\n        return;\n    }\n    const navDocZipStream_ = await zip.entryStreamPromise(navDocFilePath);\n    const navDocZipStream = navDocZipStream_.stream;\n    const navDocZipData = await streamToBufferPromise(navDocZipStream);\n    const navDocStr = navDocZipData.toString(\"utf8\");\n    const navXmlDoc = new xmldom.DOMParser().parseFromString(navDocStr);\n\n    const select = xpath.useNamespaces({\n        epub: \"http://www.idpf.org/2007/ops\",\n        xhtml: \"http://www.w3.org/1999/xhtml\",\n    });\n\n    const navs = select(\"/xhtml:html/xhtml:body//xhtml:nav\", navXmlDoc);\n    if (navs && navs.length) {\n\n        navs.forEach((navElement: Element) => {\n\n            const typeNav = select(\"@epub:type\", navElement);\n            if (typeNav && typeNav.length) {\n\n                const olElem = select(\"xhtml:ol\", navElement) as Element[];\n\n                switch ((typeNav[0] as Attr).value) {\n\n                    case \"toc\": {\n                        publication.TOC = [];\n                        fillTOCFromNavDocWithOL(select, olElem, publication.TOC, navLink.Href);\n                        break;\n                    }\n                    case \"page-list\": {\n                        publication.PageList = [];\n                        fillTOCFromNavDocWithOL(select, olElem, publication.PageList, navLink.Href);\n                        break;\n                    }\n                    case \"landmarks\": {\n                        publication.Landmarks = [];\n                        fillTOCFromNavDocWithOL(select, olElem, publication.Landmarks, navLink.Href);\n                        break;\n                    }\n                    case \"lot\": {\n                        publication.LOT = [];\n                        fillTOCFromNavDocWithOL(select, olElem, publication.LOT, navLink.Href);\n                        break;\n                    }\n                    case \"loa\": {\n                        publication.LOA = [];\n                        fillTOCFromNavDocWithOL(select, olElem, publication.LOA, navLink.Href);\n                        break;\n                    }\n                    case \"loi\": {\n                        publication.LOI = [];\n                        fillTOCFromNavDocWithOL(select, olElem, publication.LOI, navLink.Href);\n                        break;\n                    }\n                    case \"lov\": {\n                        publication.LOV = [];\n                        fillTOCFromNavDocWithOL(select, olElem, publication.LOV, navLink.Href);\n                        break;\n                    }\n                    default: {\n                        break;\n                    }\n                }\n            }\n        });\n    }\n};\n\nconst fillTOCFromNavDocWithOL = (select: any, olElems: Element[], node: Link[], navDocPath: string) => {\n\n    olElems.forEach((olElem: Element) => {\n\n        const liElems = select(\"xhtml:li\", olElem);\n        if (liElems && liElems.length) {\n\n            liElems.forEach((liElem: Element) => {\n\n                const link = new Link();\n                node.push(link);\n\n                const aElems = select(\"xhtml:a\", liElem);\n                if (aElems && aElems.length > 0) {\n\n                    const aHref = select(\"@href\", aElems[0]);\n                    if (aHref && aHref.length) {\n                        let val = (aHref[0] as Attr).value;\n                        if (val[0] === \"#\") {\n                            val = path.basename(navDocPath) + val;\n                        }\n\n                        const zipPath = path.join(path.dirname(navDocPath), val)\n                            .replace(/\\\\/g, \"/\");\n                        link.Href = zipPath;\n                    }\n\n                    let aText = aElems[0].textContent; // select(\"text()\", aElems[0])[0].data;\n                    if (aText && aText.length) {\n                        aText = aText.trim();\n                        aText = aText.replace(/\\s\\s+/g, \" \");\n                        link.Title = aText;\n                    }\n                } else {\n                    const liFirstChild = select(\"xhtml:*[1]\", liElem);\n                    if (liFirstChild && liFirstChild.length && liFirstChild[0].textContent) {\n                        link.Title = liFirstChild[0].textContent.trim();\n                    }\n                }\n\n                const olElemsNext = select(\"xhtml:ol\", liElem);\n                if (olElemsNext && olElemsNext.length) {\n                    if (!link.Children) {\n                        link.Children = [];\n                    }\n                    fillTOCFromNavDocWithOL(select, olElemsNext, link.Children, navDocPath);\n                }\n            });\n        }\n    });\n};\n\nconst addCoverRel = async (publication: Publication, rootfile: Rootfile, opf: OPF)\n    : Promise<void> => {\n\n    let coverID: string | undefined;\n\n    if (opf.Metadata && opf.Metadata.Meta && opf.Metadata.Meta.length) {\n        opf.Metadata.Meta.find((meta) => {\n            if (meta.Name === \"cover\") {\n                coverID = meta.Content;\n                return true;\n            }\n            return false;\n        });\n    }\n\n    if (coverID) {\n        let manifestInfo: Link | undefined;\n        try {\n            manifestInfo = await findInManifestByID(publication, rootfile, opf, coverID);\n        } catch (err) {\n            debug(err);\n        }\n        if (manifestInfo && manifestInfo.Href && publication.Resources && publication.Resources.length) {\n\n            const href = manifestInfo.Href;\n            const linky = publication.Resources.find((item, _i, _arr) => {\n                if (item.Href === href) {\n                    return true;\n                }\n                return false;\n            });\n            if (linky) { // publication.Resources[i]\n                linky.AddRel(\"cover\");\n                await addCoverDimensions(publication, linky);\n            }\n        }\n    }\n};\n\nconst findPropertiesInSpineForManifest = (linkEpub: Manifest, _rootfile: Rootfile, opf: OPF): string | undefined => {\n\n    if (opf.Spine && opf.Spine.Items && opf.Spine.Items.length) {\n        const it = opf.Spine.Items.find((item) => {\n            if (item.IDref === linkEpub.ID) {\n                return true;\n            }\n            return false;\n        });\n        if (it && it.Properties) {\n            return it.Properties;\n        }\n    }\n\n    return undefined;\n};\n\nconst findInSpineByHref = (publication: Publication, href: string): Link | undefined => {\n\n    if (publication.Spine && publication.Spine.length) {\n        const ll = publication.Spine.find((l) => {\n            if (l.Href === href) {\n                return true;\n            }\n            return false;\n        });\n        if (ll) {\n            return ll;\n        }\n    }\n\n    return undefined;\n};\n\nconst findMetaByRefineAndProperty = (\n    rootfile: Rootfile, opf: OPF, ID: string, property: string): Metafield | undefined => {\n\n    const ret = findAllMetaByRefineAndProperty(rootfile, opf, ID, property);\n    if (ret.length) {\n        return ret[0];\n    }\n    return undefined;\n};\n\nconst findAllMetaByRefineAndProperty = (_rootfile: Rootfile, opf: OPF, ID: string, property: string): Metafield[] => {\n    const metas: Metafield[] = [];\n\n    const refineID = \"#\" + ID;\n\n    if (opf.Metadata && opf.Metadata.Meta) {\n        opf.Metadata.Meta.forEach((metaTag) => {\n            if (metaTag.Refine === refineID && metaTag.Property === property) {\n                metas.push(metaTag);\n            }\n        });\n    }\n\n    return metas;\n};\n\nconst getEpubVersion = (rootfile: Rootfile, opf: OPF): string | undefined => {\n\n    if (rootfile.Version) {\n        return rootfile.Version;\n    } else if (opf.Version) {\n        return opf.Version;\n    }\n\n    return undefined;\n};\n\nconst isEpub3OrMore = (rootfile: Rootfile, opf: OPF): boolean => {\n\n    const version = getEpubVersion(rootfile, opf);\n    return (version === epub3 || version === epub301 || version === epub31);\n};\n\nconst findLinKByHref = (publication: Publication, _rootfile: Rootfile, _opf: OPF, href: string): Link | undefined => {\n    if (publication.Spine && publication.Spine.length) {\n        const ll = publication.Spine.find((l) => {\n            const pathInZip = l.Href;\n\n            if (href === pathInZip) {\n                return true;\n            }\n            return false;\n        });\n        if (ll) {\n            return ll;\n        }\n    }\n\n    return undefined;\n};\n"]}