{"version":3,"file":"cli.js","sourceRoot":"","sources":["../../../../src/_utils/cli.ts"],"names":[],"mappings":";;;AAAA,yBAAyB;AACzB,6BAA6B;AAC7B,6BAA6B;AAG7B,mEAAqE;AAErE,0CAA0D;AAC1D,kDAA8C;AAE9C,0BAAW,EAAE,CAAC;AACd,4BAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;AAEpE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC9B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;AAE3B,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC3B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAEvB,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACnC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAElB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;IAC7C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC;AACD,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AAC/B,IAAI,QAAQ,GAAG,OAAO,CAAC;AACvB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC3B,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACzC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACtB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3B,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;YACxC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC;IACL,CAAC;AACL,CAAC;AAED,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACzC,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;AAGjD,CAAC,GAAS,EAAE;IAER,IAAI,WAAwB,CAAC;IAC7B,IAAI,CAAC;QACD,WAAW,GAAG,MAAM,4CAAuB,CAAC,QAAQ,CAAC,CAAC;IAC1D,CAAC;IAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACX,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC;IACX,CAAC;IACD,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;IAEpE,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAE9B,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC;QACxB,eAAe,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;AACL,CAAC,CAAA,CAAC,EAAE,CAAC;AAEL,yBAAgC,WAAwB;IAEpD,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IAGhC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAChC,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAahF,CAAC;AAnBD,0CAmBC","sourcesContent":["import * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport * as util from \"util\";\r\n\r\nimport { Publication } from \"@models/publication\";\r\nimport { PublicationParsePromise } from \"@parser/publication-parser\";\r\n\r\nimport { setLcpNativePluginPath } from \"@parser/epub/lcp\";\r\nimport { initGlobals } from \"../init-globals\";\r\n\r\ninitGlobals();\r\nsetLcpNativePluginPath(path.join(process.cwd(), \"LCP\", \"lcp.node\"));\r\n\r\nconsole.log(\"process.cwd():\");\r\nconsole.log(process.cwd());\r\n\r\nconsole.log(\"__dirname: \");\r\nconsole.log(__dirname);\r\n\r\nconst args = process.argv.slice(2);\r\nconsole.log(\"args:\");\r\nconsole.log(args);\r\n\r\nif (!args[0]) {\r\n    console.log(\"FILEPATH ARGUMENT IS MISSING.\");\r\n    process.exit(1);\r\n}\r\nconst argPath = args[0].trim();\r\nlet filePath = argPath;\r\nconsole.log(filePath);\r\nif (!fs.existsSync(filePath)) {\r\n    filePath = path.join(__dirname, argPath);\r\n    console.log(filePath);\r\n    if (!fs.existsSync(filePath)) {\r\n        filePath = path.join(process.cwd(), argPath);\r\n        console.log(filePath);\r\n        if (!fs.existsSync(filePath)) {\r\n            console.log(\"FILEPATH DOES NOT EXIST.\");\r\n            process.exit(1);\r\n        }\r\n    }\r\n}\r\n\r\nconst fileName = path.basename(filePath);\r\nconst ext = path.extname(fileName).toLowerCase();\r\n\r\n// tslint:disable-next-line:no-floating-promises\r\n(async () => {\r\n\r\n    let publication: Publication;\r\n    try {\r\n        publication = await PublicationParsePromise(filePath);\r\n    } catch (err) {\r\n        console.log(\"== Publication Parser: reject\");\r\n        console.log(err);\r\n        return;\r\n    }\r\n    console.log(\"== Publication Parser: resolve: \" + publication.Links);\r\n\r\n    if (/\\.epub[3]?$/.test(ext)) {\r\n        // dumpPublication(publication);\r\n    } else if (ext === \".cbz\") {\r\n        dumpPublication(publication);\r\n    }\r\n})();\r\n\r\nexport function dumpPublication(publication: Publication) {\r\n\r\n    console.log(\"#### RAW OBJECT:\");\r\n\r\n    // breakLength: 100  maxArrayLength: undefined\r\n    console.log(util.inspect(publication,\r\n        { showHidden: false, depth: 1000, colors: true, customInspect: true }));\r\n\r\n    // console.log(\"#### RAW JSON:\");\r\n    // const publicationJsonObj = JSON.serialize(publication);\r\n    // console.log(publicationJsonObj);\r\n\r\n    // console.log(\"#### PRETTY JSON:\");\r\n    // const publicationJsonStr = global.JSON.stringify(publicationJsonObj, null, \"  \");\r\n    // console.log(publicationJsonStr);\r\n\r\n    // console.log(\"#### CANONICAL JSON:\");\r\n    // const publicationJsonStrCanonical = JSON.stringify(sortObject(publicationJsonObj));\r\n    // console.log(publicationJsonStrCanonical);\r\n}\r\n"]}