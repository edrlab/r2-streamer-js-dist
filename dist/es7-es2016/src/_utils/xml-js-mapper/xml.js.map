{"version":3,"file":"xml.js","sourceRoot":"","sources":["../../../../../src/_utils/xml-js-mapper/xml.ts"],"names":[],"mappings":";;AAEA,uDAAoD;AAGpD;IACW,MAAM,CAAC,WAAW,CACrB,cAAkC,EAClC,UAAyB,EACzB,OAAuB;QAEvB,EAAE,CAAC,CAAC,cAAc,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC;YAChC,cAAc,GAAI,cAA2B,CAAC,eAAe,CAAC;QAClE,CAAC;QACD,MAAM,CAAC,yBAAW,CAAC,cAAyB,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IACvE,CAAC;CAKJ;AAfD,kBAeC","sourcesContent":["// import { serialize } from \"./methods/serialize\";\r\n\r\nimport { deserialize } from \"./methods/deserialize\";\r\nimport { FunctionType, IParseOptions } from \"./types\";\r\n\r\nexport class XML {\r\n    public static deserialize<T>(\r\n        objectInstance: Document | Element,\r\n        objectType?: FunctionType,\r\n        options?: IParseOptions): T {\r\n\r\n        if (objectInstance.nodeType === 9) { // DOCUMENT_NODE\r\n            objectInstance = (objectInstance as Document).documentElement;\r\n        }\r\n        return deserialize(objectInstance as Element, objectType, options);\r\n    }\r\n\r\n    // public static serialize(value: any): XmlValue {\r\n    //     return serialize(value);\r\n    // }\r\n}\r\n"]}