{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../../src/http/server.ts"],"names":[],"mappings":"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","sourcesContent":["import * as child_process from \"child_process\";\nimport * as crypto from \"crypto\";\nimport * as fs from \"fs\";\nimport * as http from \"http\";\nimport * as path from \"path\";\n\nimport { Publication } from \"@models/publication\";\nimport { OPDSFeed } from \"@opds/opds2/opds2\";\nimport { encodeURIComponent_RFC3986, isHTTP } from \"@utils/http/UrlUtils\";\nimport * as css2json from \"css2json\";\nimport * as debug_ from \"debug\";\nimport * as express from \"express\";\nimport * as jsonMarkup from \"json-markup\";\nimport { JSON as TAJSON } from \"ta-json\";\nimport { tmpNameSync } from \"tmp\";\n\nimport { PublicationParsePromise } from \"@parser/publication-parser\";\nimport { serverAssets } from \"./server-assets\";\nimport { serverManifestJson } from \"./server-manifestjson\";\nimport { serverMediaOverlays } from \"./server-mediaoverlays\";\nimport { serverOPDS } from \"./server-opds\";\nimport { serverOPDS12 } from \"./server-opds1-2\";\nimport { serverOPDS2 } from \"./server-opds2\";\nimport { serverPub } from \"./server-pub\";\nimport { serverUrl } from \"./server-url\";\n\nconst debug = debug_(\"r2:server:main\");\n\ninterface IPathPublicationMap { [key: string]: any; }\n\n// https://github.com/mafintosh/json-markup/blob/master/style.css\nconst jsonStyle = `\n.json-markup {\n    line-height: 17px;\n    font-size: 13px;\n    font-family: monospace;\n    white-space: pre;\n}\n.json-markup-key {\n    font-weight: bold;\n}\n.json-markup-bool {\n    color: firebrick;\n}\n.json-markup-string {\n    color: green;\n}\n.json-markup-null {\n    color: gray;\n}\n.json-markup-number {\n    color: blue;\n}\n`;\n\nexport interface IServerOptions {\n    disableReaders?: boolean;\n    disableDecryption?: boolean; /* excludes obfuscated fonts */\n}\n\nexport class Server {\n    public readonly disableReaders: boolean;\n    public readonly disableDecryption: boolean;\n\n    public readonly lcpBeginToken = \"*-\";\n    public readonly lcpEndToken = \"-*\";\n\n    private readonly publications: string[];\n    private publicationsOPDSfeed: OPDSFeed | undefined;\n    private publicationsOPDSfeedNeedsUpdate: boolean;\n    private readonly pathPublicationMap: IPathPublicationMap;\n    private creatingPublicationsOPDS: boolean;\n    private readonly opdsJsonFilePath: string;\n\n    private readonly expressApp: express.Application;\n    private httpServer: http.Server;\n\n    private started: boolean;\n\n    constructor(options?: IServerOptions) {\n\n        this.disableReaders = options && options.disableReaders ? options.disableReaders : false;\n        this.disableDecryption = options && options.disableDecryption ? options.disableDecryption : false;\n\n        this.publications = [];\n        this.pathPublicationMap = {};\n        this.publicationsOPDSfeed = undefined;\n        this.publicationsOPDSfeedNeedsUpdate = true;\n        this.creatingPublicationsOPDS = false;\n\n        this.opdsJsonFilePath = tmpNameSync({ prefix: \"readium2-OPDS2-\", postfix: \".json\" });\n\n        this.started = false;\n\n        this.expressApp = express();\n        // this.expressApp.enable('strict routing');\n\n        // https://expressjs.com/en/4x/api.html#express.static\n        const staticOptions = {\n            etag: false,\n        };\n\n        if (!this.disableReaders) {\n            this.expressApp.use(\"/readerNYPL\", express.static(\"misc/readers/reader-NYPL\", staticOptions));\n            this.expressApp.use(\"/readerHADRIEN\", express.static(\"misc/readers/reader-HADRIEN\", staticOptions));\n        }\n\n        this.expressApp.get(\"/\", (_req: express.Request, res: express.Response) => {\n\n            let html = \"<html><body><h1>Publications</h1>\";\n\n            this.publications.forEach((pub) => {\n                const filePathBase64 = new Buffer(pub).toString(\"base64\");\n\n                html += \"<p><strong>\"\n                    + (isHTTP(pub) ? pub : path.basename(pub))\n                    + \"</strong><br> => <a href='./pub/\" + encodeURIComponent_RFC3986(filePathBase64)\n                    + \"'>\" + \"./pub/\" + filePathBase64 + \"</a></p>\";\n            });\n            html += \"<h1>OPDS2 feed</h1><p><a href='./opds2'>CLICK HERE</a></p>\";\n            html += \"<h1>Load HTTP publication URL</h1><p><a href='./url'>CLICK HERE</a></p>\";\n            html += \"<h1>Browse HTTP OPDS1 feed</h1><p><a href='./opds'>CLICK HERE</a></p>\";\n            html += \"<h1>Convert OPDS feed v1 to v2</h1><p><a href='./opds12'>CLICK HERE</a></p>\";\n            html += \"<h1>Server version</h1><p><a href='./version/show'>CLICK HERE</a></p>\";\n            html += \"</body></html>\";\n\n            res.status(200).send(html);\n        });\n\n        this.expressApp.get([\"/version\", \"/version/show/:jsonPath?\"],\n            (req: express.Request, res: express.Response) => {\n\n                const isShow = req.url.indexOf(\"/show\") >= 0 || req.query.show;\n                if (!req.params.jsonPath && req.query.show) {\n                    req.params.jsonPath = req.query.show;\n                }\n\n                const gitRevJson = \"../../../gitrev.json\";\n                if (!fs.existsSync(path.resolve(path.join(__dirname, gitRevJson)))) {\n\n                    const err = \"Missing Git rev JSON! \";\n                    debug(err + gitRevJson);\n                    res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                        + err + \"</p></body></html>\");\n                    return;\n                }\n\n                const jsonObj = require(gitRevJson);\n                // debug(jsonObj);\n\n                if (isShow) {\n                    const jsonPretty = jsonMarkup(jsonObj, css2json(jsonStyle));\n\n                    res.status(200).send(\"<html><body>\" +\n                        \"<h1>R2-STREAMER-JS VERSION INFO</h1>\" +\n                        \"<hr><p><pre>\" + jsonPretty + \"</pre></p>\" +\n                        // \"<hr><p><pre>\" + jsonStr + \"</pre></p>\" +\n                        // \"<p><pre>\" + dumpStr + \"</pre></p>\" +\n                        \"</body></html>\");\n                } else {\n                    this.setResponseCORS(res);\n                    res.set(\"Content-Type\", \"application/json; charset=utf-8\");\n\n                    const jsonStr = JSON.stringify(jsonObj, null, \"  \");\n\n                    const checkSum = crypto.createHash(\"sha256\");\n                    checkSum.update(jsonStr);\n                    const hash = checkSum.digest(\"hex\");\n\n                    const match = req.header(\"If-None-Match\");\n                    if (match === hash) {\n                        debug(\"publications.json cache\");\n                        res.status(304); // StatusNotModified\n                        res.end();\n                        return;\n                    }\n\n                    res.setHeader(\"ETag\", hash);\n\n                    // res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\n\n                    res.status(200).send(jsonStr);\n                }\n            });\n\n        serverUrl(this, this.expressApp);\n        serverOPDS(this, this.expressApp);\n        serverOPDS2(this, this.expressApp);\n        serverOPDS12(this, this.expressApp);\n\n        const routerPathBase64: express.Router = serverPub(this, this.expressApp);\n        serverManifestJson(this, routerPathBase64);\n        serverMediaOverlays(this, routerPathBase64);\n        serverAssets(this, routerPathBase64);\n    }\n\n    public expressUse(pathf: string, func: express.Handler) {\n        this.expressApp.use(pathf, func);\n    }\n\n    public expressGet(paths: string[], func: express.Handler) {\n        this.expressApp.get(paths, func);\n    }\n\n    public start(port: number): string {\n\n        if (this.started) {\n            return this.url() as string;\n        }\n\n        const p = port || process.env.PORT || 3000;\n        debug(`PORT: ${p} || ${process.env.PORT} || 3000 => ${p}`);\n\n        this.httpServer = this.expressApp.listen(p, () => {\n            debug(`http://localhost:${p}`);\n        });\n\n        this.started = true;\n\n        return `http://127.0.0.1:${p}`; // this.httpServer.address().port\n    }\n\n    public stop() {\n        if (this.started) {\n            this.httpServer.close();\n            this.started = false;\n            this.uncachePublications();\n        }\n    }\n\n    public url(): string | undefined {\n        return this.started ?\n            `http://127.0.0.1:${this.httpServer.address().port}` :\n            undefined;\n    }\n\n    public setResponseCORS(res: express.Response) {\n        res.setHeader(\"Access-Control-Allow-Origin\",\n            \"*\");\n\n        res.setHeader(\"Access-Control-Allow-Methods\",\n            \"GET, HEAD, OPTIONS\"); // POST, DELETE, PUT, PATCH\n\n        res.setHeader(\"Access-Control-Allow-Headers\",\n            \"Content-Type, Content-Length, Accept-Ranges, Link, Transfer-Encoding\");\n    }\n\n    public addPublications(pubs: string[]): string[] {\n        pubs.forEach((pub) => {\n            if (this.publications.indexOf(pub) < 0) {\n                this.publicationsOPDSfeedNeedsUpdate = true;\n                this.publications.push(pub);\n            }\n        });\n\n        return pubs.map((pub) => {\n            const pubid = new Buffer(pub).toString(\"base64\");\n            return `/pub/${pubid}/manifest.json`;\n        });\n    }\n\n    public removePublications(pubs: string[]): string[] {\n        pubs.forEach((pub) => {\n            this.uncachePublication(pub);\n            const i = this.publications.indexOf(pub);\n            if (i >= 0) {\n                this.publicationsOPDSfeedNeedsUpdate = true;\n                this.publications.splice(i, 1);\n            }\n        });\n\n        return pubs.map((pub) => {\n            const pubid = new Buffer(pub).toString(\"base64\");\n            return `/pub/${pubid}/manifest.json`;\n        });\n    }\n\n    public getPublications(): string[] {\n        return this.publications;\n    }\n\n    public async loadOrGetCachedPublication(filePath: string): Promise<Publication> {\n\n        let publication = this.cachedPublication(filePath);\n        if (!publication) {\n\n            // const fileName = path.basename(pathBase64Str);\n            // const ext = path.extname(fileName).toLowerCase();\n\n            try {\n                publication = await PublicationParsePromise(filePath);\n            } catch (err) {\n                debug(err);\n                // return Promise.reject(err);\n                // return Promise.reject(new Error(err));\n                throw new Error(err);\n            }\n\n            this.cachePublication(filePath, publication);\n        }\n        // return Promise.resolve(publication);\n        return publication;\n    }\n\n    public isPublicationCached(filePath: string): boolean {\n        return typeof this.cachedPublication(filePath) !== \"undefined\";\n    }\n\n    public cachedPublication(filePath: string): Publication | undefined {\n        return this.pathPublicationMap[filePath];\n    }\n\n    public cachePublication(filePath: string, pub: Publication) {\n        // TODO: implement LRU caching algorithm? Anything smarter than this will do!\n        if (!this.isPublicationCached(filePath)) {\n            this.pathPublicationMap[filePath] = pub;\n        }\n    }\n\n    public uncachePublication(filePath: string) {\n        if (this.isPublicationCached(filePath)) {\n            const pub = this.cachedPublication(filePath);\n            if (pub) {\n                pub.freeDestroy();\n            }\n            this.pathPublicationMap[filePath] = undefined;\n            delete this.pathPublicationMap[filePath];\n        }\n    }\n\n    public uncachePublications() {\n        Object.keys(this.pathPublicationMap).forEach((filePath) => {\n            this.uncachePublication(filePath);\n        });\n    }\n\n    public publicationsOPDS(): OPDSFeed | undefined {\n\n        if (this.publicationsOPDSfeedNeedsUpdate) {\n            this.publicationsOPDSfeed = undefined;\n            if (fs.existsSync(this.opdsJsonFilePath)) {\n                fs.unlinkSync(this.opdsJsonFilePath);\n            }\n        }\n\n        if (this.publicationsOPDSfeed) {\n            return this.publicationsOPDSfeed;\n        }\n\n        debug(`OPDS2.json => ${this.opdsJsonFilePath}`);\n        if (!fs.existsSync(this.opdsJsonFilePath)) {\n            if (!this.creatingPublicationsOPDS) {\n                this.creatingPublicationsOPDS = true;\n\n                this.publicationsOPDSfeedNeedsUpdate = false;\n\n                const jsFile = path.join(__dirname, \"opds2-create-cli.js\");\n                const args = [jsFile, this.opdsJsonFilePath];\n                this.publications.forEach((pub) => {\n                    const filePathBase64 = new Buffer(pub).toString(\"base64\");\n                    args.push(filePathBase64);\n                });\n                // debug(\"SPAWN OPDS2 create: %o\", args);\n                debug(`SPAWN OPDS2-create: ${args[0]}`);\n\n                const child = child_process.spawn(\"node\", args, {\n                    cwd: process.cwd(),\n                    // detached: true,\n                    env: process.env,\n                    // stdio: [\"ignore\"],\n                })\n                    // .unref()\n                    ;\n                child.stdout.on(\"data\", (data) => {\n                    console.log(data.toString());\n                });\n                child.stderr.on(\"data\", (data) => {\n                    console.log(data.toString());\n                });\n            }\n            return undefined;\n        }\n        this.creatingPublicationsOPDS = false;\n        const jsonStr = fs.readFileSync(this.opdsJsonFilePath, { encoding: \"utf8\" });\n        if (!jsonStr) {\n            return undefined;\n        }\n        const json = global.JSON.parse(jsonStr);\n\n        this.publicationsOPDSfeed = TAJSON.deserialize<OPDSFeed>(json, OPDSFeed);\n        return this.publicationsOPDSfeed;\n    }\n}\n"]}