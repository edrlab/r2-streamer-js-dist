{"version":3,"file":"main.js","sourceRoot":"","sources":["../../../../src/electron/main.ts"],"names":[],"mappings":"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","sourcesContent":["// https://github.com/electron/electron/blob/master/docs/api/sandbox-option.md\n// https://github.com/electron/electron/blob/master/docs/api/process.md\n// https://github.com/electron/electron/blob/master/docs/api/browser-window.md\n// https://github.com/electron/electron/blob/master/docs/api/protocol.md\n// https://github.com/electron/electron/blob/master/docs/api/web-frame.md\n// https://github.com/electron/electron/blob/master/docs/api/web-contents.md\n// https://github.com/electron/electron/blob/master/docs/api/web-request.md\n// https://github.com/electron/electron/blob/master/docs/api/session.md\n// https://github.com/electron/electron/blob/master/docs/api/webview-tag.md\n// https://github.com/electron/electron/blob/master/docs/api/browser-view.md\n// https://github.com/electron/electron/blob/master/docs/api/client-request.md\n// https://github.com/electron/electron/blob/master/docs/api/sandbox-option.md\n// https://github.com/electron/electron/blob/master/docs/api/dialog.md\n// https://github.com/electron/electron/blob/master/docs/api/ipc-renderer.md\n\nimport * as crypto from \"crypto\";\nimport * as express from \"express\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\n\nimport { encodeURIComponent_RFC3986 } from \"@utils/http/UrlUtils\";\nimport * as debug_ from \"debug\";\nimport { BrowserWindow, Menu, app, dialog, ipcMain, session, webContents } from \"electron\";\nimport * as filehound from \"filehound\";\nimport * as portfinder from \"portfinder\";\n\nimport { Publication } from \"@models/publication\";\nimport { Server } from \"../http/server\";\nimport { initGlobals } from \"../init-globals\";\n\n// import * as mime from \"mime-types\";\n\ninitGlobals();\n\nconst debug = debug_(\"r2:electron:main\");\n\nlet _publicationsServer: Server;\nlet _publicationsServerPort: number;\nlet _publicationsRootUrl: string;\nlet _publicationsFilePaths: string[];\nlet _publicationsUrls: string[];\n\nlet _electronBrowserWindows: Electron.BrowserWindow[];\n\nconst defaultBookPath = fs.realpathSync(path.resolve(\"./misc/epubs/\"));\nlet lastBookPath: string | undefined;\n\n// protocol.registerStandardSchemes([\"epub\", \"file\"], { secure: true });\n\nipcMain.on(\"devtools\", (_event: any, _arg: any) => {\n    // event.sender.send('devTooools', 'pong');\n\n    for (const wc of webContents.getAllWebContents()) {\n        // if (wc.hostWebContents &&\n        //     wc.hostWebContents.id === electronBrowserWindow.webContents.id) {\n        // }\n        wc.openDevTools();\n    }\n});\n\nipcMain.on(\"tryLcpPass\", (event: any, publicationFilePath: string, lcpPass: string) => {\n    debug(publicationFilePath);\n    debug(lcpPass);\n    const okay = tryLcpPass(publicationFilePath, lcpPass);\n    if (!okay) {\n        event.sender.send(\"tryLcpPass\", false, \"LCP problem! (\" + lcpPass + \")\");\n    } else {\n        event.sender.send(\"tryLcpPass\", true, \"LCP okay. (\" + lcpPass + \")\");\n    }\n});\n\nfunction tryLcpPass(publicationFilePath: string, lcpPass: string): boolean {\n    const publication = _publicationsServer.cachedPublication(publicationFilePath);\n    if (!publication) {\n        return false;\n    }\n    // TODO: ask user for plain text passphrase, convert to SHA256 hex format,\n    // or fetch from persistent storage\n    // const lcpPass64 =\n    //     \"ZWM0ZjJkYmIzYjE0MDA5NTU1MGM5YWZiYmI2OWI1ZDZmZDllODE0YjlkYTgyZmFkMGIzNGU5ZmNiZTU2ZjFjYg\";\n    // (this is \"dan\")\n    const checkSum = crypto.createHash(\"sha256\");\n    checkSum.update(lcpPass);\n    const lcpPassHex = checkSum.digest(\"hex\");\n    // const lcpPass64 = new Buffer(hash).toString(\"base64\");\n    // const lcpPassHex = new Buffer(lcpPass64, \"base64\").toString(\"utf8\");\n    const okay = publication.LCP.setUserPassphrase(lcpPassHex); // hex\n    if (!okay) {\n        debug(\"FAIL publication.LCP.setUserPassphrase()\");\n    }\n    return okay;\n}\n\nasync function createElectronBrowserWindow(publicationFilePath: string, publicationUrl: string) {\n\n    debug(\"createElectronBrowserWindow() \" + publicationFilePath + \" : \" + publicationUrl);\n\n    // const fileName = path.basename(publicationFilePath);\n    // const ext = path.extname(fileName).toLowerCase();\n\n    let publication: Publication | undefined;\n    try {\n        publication = await _publicationsServer.loadOrGetCachedPublication(publicationFilePath);\n    } catch (err) {\n        debug(err);\n    }\n\n    let lcpHint: string | undefined;\n    if (publication && publication.LCP) {\n        if (publication.LCP.Encryption &&\n            publication.LCP.Encryption.UserKey &&\n            publication.LCP.Encryption.UserKey.TextHint) {\n            lcpHint = publication.LCP.Encryption.UserKey.TextHint;\n        }\n        if (!lcpHint) {\n            lcpHint = \"LCP passphrase\";\n        }\n        // TODO: passphrase from cache (persistent storage, user settings)\n        // const testLcpPass = \"danzzz\";\n        // const okay = tryLcpPass(publicationFilePath, testLcpPass);\n        // if (okay) {\n        //     lcpHint = undefined;\n        // }\n    }\n\n    const electronBrowserWindow = new BrowserWindow({\n        height: 600,\n        webPreferences: {\n            allowRunningInsecureContent: false,\n            contextIsolation: false,\n            devTools: true,\n            nodeIntegration: true,\n            nodeIntegrationInWorker: false,\n            sandbox: false,\n            webSecurity: true,\n            webviewTag: true,\n            // preload: __dirname + \"/\" + \"preload.js\",\n        },\n        width: 800,\n    });\n    if (!_electronBrowserWindows) {\n        _electronBrowserWindows = [];\n    }\n    _electronBrowserWindows.push(electronBrowserWindow);\n\n    // electronBrowserWindow.on(\"resize\", () => {\n    //     const [width, height] = electronBrowserWindow.getContentSize();\n\n    //     for (const wc of webContents.getAllWebContents()) {\n    //         if (wc.hostWebContents &&\n    //             wc.hostWebContents.id === electronBrowserWindow.webContents.id) {\n    //             wc.setSize({\n    //                 normal: {\n    //                     height: 400,\n    //                     width,\n    //                 },\n    //             });\n    //         }\n    //     }\n    // });\n\n    electronBrowserWindow.webContents.on(\"dom-ready\", () => {\n        debug(\"electronBrowserWindow dom-ready \" + publicationFilePath + \" : \" + publicationUrl);\n        // electronBrowserWindow.webContents.openDevTools();\n    });\n\n    electronBrowserWindow.on(\"closed\", () => {\n        debug(\"electronBrowserWindow closed \" + publicationFilePath + \" : \" + publicationUrl);\n        const i = _electronBrowserWindows.indexOf(electronBrowserWindow);\n        if (i < 0) {\n            debug(\"electronBrowserWindow NOT FOUND?!\");\n            return;\n        }\n        _electronBrowserWindows.splice(i, 1);\n    });\n\n    const urlEncoded = encodeURIComponent_RFC3986(publicationUrl);\n    let fullUrl = `file://${__dirname}/renderer/index.html?pub=${urlEncoded}`;\n    if (lcpHint) {\n        fullUrl = fullUrl + \"&lcpHint=\" + lcpHint;\n    }\n    // `file://${process.cwd()}/src/electron/renderer/index.html`;\n    // `file://${__dirname}/../../../../src/electron/renderer/index.html`\n    debug(fullUrl);\n    electronBrowserWindow.webContents.loadURL(fullUrl, { extraHeaders: \"pragma: no-cache\\n\" });\n}\n\napp.on(\"window-all-closed\", () => {\n    debug(\"app window-all-closed\");\n    if (process.platform !== \"darwin\") {\n        app.quit();\n    }\n});\n\nfunction clearSession(sess: Electron.Session, str: string) {\n\n    sess.clearCache(() => {\n        debug(\"ELECTRON CACHE CLEARED - \" + str);\n    });\n    sess.clearStorageData({\n        origin: \"*\",\n        quotas: [\n            \"temporary\",\n            \"persistent\",\n            \"syncable\"],\n        storages: [\n            \"appcache\",\n            \"cookies\",\n            \"filesystem\",\n            \"indexdb\",\n            \"localstorage\",\n            \"shadercache\",\n            \"websql\",\n            \"serviceworkers\"],\n    }, () => {\n        debug(\"ELECTRON STORAGE CLEARED - \" + str);\n    });\n}\n\napp.on(\"ready\", () => {\n    debug(\"app ready\");\n\n    // protocol.registerServiceWorkerSchemes([\"epub\"]);\n\n    // registerFileProtocol\n    // protocol.registerBufferProtocol(\"epub\",\n    //     (request, callback) => {\n    //         debug(request.url);\n    //         const data = fs.readFileSync(request.url);\n    //         const mimeType = mime.lookup(request.url);\n    //         callback({ data, mimeType });\n    //     }, (error) => {\n    //         debug(error);\n    //     });\n\n    if (session.defaultSession) {\n        // const proto = session.defaultSession.protocol;\n        clearSession(session.defaultSession, \"DEFAULT SESSION\");\n    }\n\n    const sess = session.fromPartition(\"persist:publicationwebview\", { cache: false });\n    if (sess) {\n        clearSession(sess, \"SESSION [persist:publicationwebview]\");\n    }\n\n    sess.setPermissionRequestHandler((wc, permission, callback) => {\n        console.log(\"setPermissionRequestHandler\");\n        console.log(wc.getURL());\n        console.log(permission);\n        callback(true);\n    });\n\n    // tslint:disable-next-line:no-floating-promises\n    (async () => {\n        _publicationsFilePaths = await filehound.create()\n            .paths(defaultBookPath)\n            .ext([\".epub\", \".epub3\", \".cbz\"])\n            .find();\n        debug(_publicationsFilePaths);\n\n        _publicationsServer = new Server({\n            disableDecryption: false,\n            disableReaders: false,\n        });\n\n        // https://expressjs.com/en/4x/api.html#express.static\n        const staticOptions = {\n            etag: false,\n        };\n        _publicationsServer.expressUse(\"/readium-css\", express.static(\"misc/ReadiumCSS\", staticOptions));\n\n        // _publicationsServer.expressGet([\"/sw.js\"],\n        //     (req: express.Request, res: express.Response) => {\n\n        //         const swPth = \"./renderer/sw/service-worker.js\";\n        //         const swFullPath = path.resolve(path.join(__dirname, swPth));\n        //         if (!fs.existsSync(swFullPath)) {\n\n        //             const err = \"Missing Service Worker JS! \";\n        //             debug(err + swFullPath);\n        //             res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n        //                 + err + \"</p></body></html>\");\n        //             return;\n        //         }\n\n        //         const swJS = fs.readFileSync(swFullPath, { encoding: \"utf8\" });\n        //         // debug(swJS);\n\n        //         // this.setResponseCORS(res);\n        //         res.set(\"Content-Type\", \"text/javascript; charset=utf-8\");\n\n        //         const checkSum = crypto.createHash(\"sha256\");\n        //         checkSum.update(swJS);\n        //         const hash = checkSum.digest(\"hex\");\n\n        //         const match = req.header(\"If-None-Match\");\n        //         if (match === hash) {\n        //             debug(\"service-worker.js cache\");\n        //             res.status(304); // StatusNotModified\n        //             res.end();\n        //             return;\n        //         }\n\n        //         res.setHeader(\"ETag\", hash);\n\n        //         // res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\n\n        //         res.status(200).send(swJS);\n        //     });\n\n        const pubPaths = _publicationsServer.addPublications(_publicationsFilePaths);\n\n        _publicationsServerPort = await portfinder.getPortPromise();\n        _publicationsRootUrl = _publicationsServer.start(_publicationsServerPort);\n\n        _publicationsUrls = pubPaths.map((pubPath) => {\n            return `${_publicationsRootUrl}${pubPath}`;\n        });\n        debug(_publicationsUrls);\n\n        resetMenu();\n\n        process.nextTick(() => {\n            const choice = dialog.showMessageBox({\n                buttons: [\"&OK\"],\n                cancelId: 0,\n                defaultId: 0,\n                detail: \"Note that this is only a developer application (\" +\n                \"test framework) for the Readium2 NodeJS 'streamer' and Electron-based 'navigator'.\",\n                message: \"Use the 'Electron' menu to load publications.\",\n                noLink: true,\n                normalizeAccessKeys: true,\n                title: \"Readium2 Electron streamer / navigator\",\n                type: \"info\",\n            });\n            if (choice === 0) {\n                debug(\"ok\");\n            }\n        });\n    })();\n});\n\nfunction resetMenu() {\n\n    const menuTemplate = [\n        {\n            label: \"Electron R2\",\n            submenu: [\n                {\n                    accelerator: \"Command+Q\",\n                    click: () => { app.quit(); },\n                    label: \"Quit\",\n                },\n            ],\n        },\n    ];\n\n    menuTemplate[0].submenu.push({\n        click: async () => {\n            const choice = dialog.showOpenDialog({\n                defaultPath: lastBookPath || defaultBookPath,\n                filters: [\n                    { name: \"EPUB publication\", extensions: [\"epub\", \"epub3\"] },\n                    { name: \"Comic book\", extensions: [\"cbz\"] },\n                    // {name: \"Zip archive\", extensions: [\"zip\"]},\n                    // {name: \"Any file\", extensions: [\"*\"]},\n                ],\n                message: \"Choose a file\",\n                properties: [\"openFile\"],\n                title: \"Load a publication\",\n            });\n            if (!choice || !choice.length) {\n                return;\n            }\n            debug(choice[0]);\n\n            lastBookPath = path.dirname(choice[0]);\n            debug(lastBookPath);\n\n            let n = _publicationsFilePaths.indexOf(choice[0]);\n            if (n < 0) {\n                const publicationPaths = _publicationsServer.addPublications(choice);\n                debug(publicationPaths);\n\n                _publicationsFilePaths.push(choice[0]);\n                debug(_publicationsFilePaths);\n\n                _publicationsUrls.push(`${_publicationsRootUrl}${publicationPaths[0]}`);\n                debug(_publicationsUrls);\n\n                n = _publicationsFilePaths.length - 1; // === _publicationsUrls.length - 1\n\n                process.nextTick(() => {\n                    resetMenu();\n                });\n            }\n\n            const file = _publicationsFilePaths[n];\n            const pubManifestUrl = _publicationsUrls[n];\n\n            await createElectronBrowserWindow(file, pubManifestUrl);\n        },\n        label: \"Open file...\",\n    } as any);\n\n    _publicationsUrls.forEach((pubManifestUrl, n) => {\n        const file = _publicationsFilePaths[n];\n        debug(\"MENU ITEM: \" + file + \" : \" + pubManifestUrl);\n\n        menuTemplate[0].submenu.push({\n            click: async () => {\n                await createElectronBrowserWindow(file, pubManifestUrl);\n            },\n            label: file, // + \" : \" + pubManifestUrl,\n        } as any);\n    });\n    const menu = Menu.buildFromTemplate(menuTemplate);\n    Menu.setApplicationMenu(menu);\n}\n\napp.on(\"activate\", () => {\n    debug(\"app activate\");\n});\n\napp.on(\"quit\", () => {\n    debug(\"app quit\");\n\n    _publicationsServer.stop();\n});\n"]}