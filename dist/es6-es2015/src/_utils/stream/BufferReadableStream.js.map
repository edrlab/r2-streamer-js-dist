{"version":3,"file":"BufferReadableStream.js","sourceRoot":"","sources":["../../../../../src/_utils/stream/BufferReadableStream.ts"],"names":[],"mappings":";;AAAA,mCAAkC;AAKlC,0BAAkC,SAAQ,iBAAQ;IAI9C,YAAY,MAAc;QACtB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACzB,CAAC;IAEM,KAAK,CAAC,IAAY;QAGrB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChB,MAAM,CAAC;QACX,CAAC;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,MAAM,CAAC;QAEhB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACP,IAAI,CAAC,GAAG,IAAI,CAAC;YACb,EAAE,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBACtB,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;YACrB,CAAC;YAED,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC;QAED,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;CACJ;AAlCD,oDAkCC","sourcesContent":["import { Readable } from \"stream\";\r\n\r\n// import * as debug_ from \"debug\";\r\n// const debug = debug_(\"r2:BufferReadableStream\");\r\n\r\nexport class BufferReadableStream extends Readable {\r\n    public readonly buffer: Buffer;\r\n    private alreadyRead: number;\r\n\r\n    constructor(buffer: Buffer) {\r\n        super();\r\n        this.buffer = buffer;\r\n        this.alreadyRead = 0;\r\n    }\r\n\r\n    public _read(size: number): void {\r\n        // debug(\"_read(size): \" + size);\r\n\r\n        if (this.alreadyRead >= this.buffer.length) {\r\n            this.push(null);\r\n            return;\r\n        }\r\n\r\n        let chunk = this.alreadyRead ?\r\n            this.buffer.slice(this.alreadyRead) :\r\n            this.buffer;\r\n\r\n        if (size) {\r\n            let l = size;\r\n            if (size > chunk.length) {\r\n                l = chunk.length;\r\n            }\r\n\r\n            chunk = chunk.slice(0, l);\r\n        }\r\n\r\n        this.alreadyRead += chunk.length;\r\n        this.push(chunk);\r\n    }\r\n}\r\n"]}