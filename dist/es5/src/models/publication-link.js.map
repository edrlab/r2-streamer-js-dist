{"version":3,"file":"publication-link.js","sourceRoot":"","sources":["../../../../src/models/publication-link.ts"],"names":[],"mappings":";;;AAAA,4EAAsE;AAEtE,mCAMiB;AAGjB,6DAAmD;AAGnD;IAAA;IAqEA,CAAC;aArEY,IAAI;IAwCN,sBAAO,GAAd,UAAe,IAAc;QAA7B,iBAIC;QAHG,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG;YACb,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,qBAAM,GAAb,UAAc,GAAW;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC;IACL,CAAC;IAEM,qBAAM,GAAb,UAAc,GAAW;QACrB,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAKO,8BAAe,GAAvB;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACzC,CAAC;IACL,CAAC;IAjED;QADC,sBAAY,CAAC,MAAM,CAAC;;sCACD;IAGpB;QADC,sBAAY,CAAC,MAAM,CAAC;;0CACG;IAGxB;QADC,sBAAY,CAAC,QAAQ,CAAC;;wCACD;IAGtB;QADC,sBAAY,CAAC,OAAO,CAAC;;uCACD;IAGrB;QADC,sBAAY,CAAC,OAAO,CAAC;;uCACD;IAGrB;QADC,sBAAY,CAAC,YAAY,CAAC;0CACR,gCAAU;4CAAC;IAG9B;QADC,sBAAY,CAAC,UAAU,CAAC;;0CACD;IAGxB;QADC,sBAAY,CAAC,SAAS,CAAC;;yCACD;IAGvB;QADC,sBAAY,CAAC,WAAW,CAAC;;2CACA;IAI1B;QAFC,sBAAY,CAAC,UAAU,CAAC;QACxB,yBAAe,CAAC,MAAI,CAAC;;0CACE;IAOxB;QAHC,sBAAY,CAAC,KAAK,CAAC;QACnB,uBAAa,CAAC,8CAAmB,CAAC;QAClC,yBAAe,CAAC,MAAM,CAAC;;qCACH;IA0BrB;QAHC,wBAAc,EAAE;;;;+CAOhB;IApEQ,IAAI;QADhB,oBAAU,EAAE;OACA,IAAI,CAqEhB;IAAD,WAAC;;CAAA,AArED,IAqEC;AArEY,oBAAI","sourcesContent":["import { JsonStringConverter } from \"@utils/ta-json-string-converter\";\r\n// https://github.com/edcarroll/ta-json\r\nimport {\r\n    JsonConverter,\r\n    JsonElementType,\r\n    JsonObject,\r\n    JsonProperty,\r\n    OnDeserialized,\r\n} from \"ta-json\";\r\n\r\nimport { MediaOverlayNode } from \"./media-overlay\";\r\nimport { Properties } from \"./metadata-properties\";\r\n\r\n@JsonObject()\r\nexport class Link {\r\n\r\n    @JsonProperty(\"href\")\r\n    public Href: string;\r\n\r\n    @JsonProperty(\"type\")\r\n    public TypeLink: string;\r\n\r\n    @JsonProperty(\"height\")\r\n    public Height: number;\r\n\r\n    @JsonProperty(\"width\")\r\n    public Width: number;\r\n\r\n    @JsonProperty(\"title\")\r\n    public Title: string;\r\n\r\n    @JsonProperty(\"properties\")\r\n    public Properties: Properties;\r\n\r\n    @JsonProperty(\"duration\")\r\n    public Duration: number;\r\n\r\n    @JsonProperty(\"bitrate\")\r\n    public Bitrate: number;\r\n\r\n    @JsonProperty(\"templated\")\r\n    public Templated: boolean;\r\n\r\n    @JsonProperty(\"children\")\r\n    @JsonElementType(Link)\r\n    public Children: Link[];\r\n\r\n    public MediaOverlays: MediaOverlayNode[];\r\n\r\n    @JsonProperty(\"rel\")\r\n    @JsonConverter(JsonStringConverter)\r\n    @JsonElementType(String)\r\n    public Rel: string[];\r\n\r\n    public AddRels(rels: string[]) {\r\n        rels.forEach((rel) => {\r\n            this.AddRel(rel);\r\n        });\r\n    }\r\n\r\n    public AddRel(rel: string) {\r\n        if (this.HasRel(rel)) {\r\n            return;\r\n        }\r\n        if (!this.Rel) {\r\n            this.Rel = [rel];\r\n        } else {\r\n            this.Rel.push(rel);\r\n        }\r\n    }\r\n\r\n    public HasRel(rel: string): boolean {\r\n        return this.Rel && this.Rel.indexOf(rel) >= 0;\r\n    }\r\n\r\n    @OnDeserialized()\r\n    // tslint:disable-next-line:no-unused-variable\r\n    // @ts-ignore: TS6133 (is declared but its value is never read.)\r\n    private _OnDeserialized() {\r\n        if (!this.Href) {\r\n            console.log(\"Link.Href is not set!\");\r\n        }\r\n    }\r\n}\r\n"]}