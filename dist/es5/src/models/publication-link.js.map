{"version":3,"file":"publication-link.js","sourceRoot":"","sources":["../../../../src/models/publication-link.ts"],"names":[],"mappings":";;;AAAA,4EAAsE;AAEtE,mCAMiB;AAGjB,6DAAmD;AAGnD;IAAA;IAoEA,CAAC;aApEY,IAAI;IAwCN,sBAAO,GAAd,UAAe,IAAc;QAA7B,iBAIC;QAHG,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG;YACb,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,qBAAM,GAAb,UAAc,GAAW;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC;IACL,CAAC;IAEM,qBAAM,GAAb,UAAc,GAAW;QACrB,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAIO,8BAAe,GAAvB;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACb,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACzC,CAAC;IACL,CAAC;IAhED;QADC,sBAAY,CAAC,MAAM,CAAC;;sCACD;IAGpB;QADC,sBAAY,CAAC,MAAM,CAAC;;0CACG;IAGxB;QADC,sBAAY,CAAC,QAAQ,CAAC;;wCACD;IAGtB;QADC,sBAAY,CAAC,OAAO,CAAC;;uCACD;IAGrB;QADC,sBAAY,CAAC,OAAO,CAAC;;uCACD;IAGrB;QADC,sBAAY,CAAC,YAAY,CAAC;0CACR,gCAAU;4CAAC;IAG9B;QADC,sBAAY,CAAC,UAAU,CAAC;;0CACD;IAGxB;QADC,sBAAY,CAAC,SAAS,CAAC;;yCACD;IAGvB;QADC,sBAAY,CAAC,WAAW,CAAC;;2CACA;IAI1B;QAFC,sBAAY,CAAC,UAAU,CAAC;QACxB,yBAAe,CAAC,MAAI,CAAC;;0CACE;IAOxB;QAHC,sBAAY,CAAC,KAAK,CAAC;QACnB,uBAAa,CAAC,8CAAmB,CAAC;QAClC,yBAAe,CAAC,MAAM,CAAC;;qCACH;IAyBrB;QAFC,wBAAc,EAAE;;;;+CAMhB;IAnEQ,IAAI;QADhB,oBAAU,EAAE;OACA,IAAI,CAoEhB;IAAD,WAAC;;CAAA,AApED,IAoEC;AApEY,oBAAI","sourcesContent":["import { JsonStringConverter } from \"@utils/ta-json-string-converter\";\n// https://github.com/edcarroll/ta-json\nimport {\n    JsonConverter,\n    JsonElementType,\n    JsonObject,\n    JsonProperty,\n    OnDeserialized,\n} from \"ta-json\";\n\nimport { MediaOverlayNode } from \"./media-overlay\";\nimport { Properties } from \"./metadata-properties\";\n\n@JsonObject()\nexport class Link {\n\n    @JsonProperty(\"href\")\n    public Href: string;\n\n    @JsonProperty(\"type\")\n    public TypeLink: string;\n\n    @JsonProperty(\"height\")\n    public Height: number;\n\n    @JsonProperty(\"width\")\n    public Width: number;\n\n    @JsonProperty(\"title\")\n    public Title: string;\n\n    @JsonProperty(\"properties\")\n    public Properties: Properties;\n\n    @JsonProperty(\"duration\")\n    public Duration: number;\n\n    @JsonProperty(\"bitrate\")\n    public Bitrate: number;\n\n    @JsonProperty(\"templated\")\n    public Templated: boolean;\n\n    @JsonProperty(\"children\")\n    @JsonElementType(Link)\n    public Children: Link[];\n\n    public MediaOverlays: MediaOverlayNode[];\n\n    @JsonProperty(\"rel\")\n    @JsonConverter(JsonStringConverter)\n    @JsonElementType(String)\n    public Rel: string[];\n\n    public AddRels(rels: string[]) {\n        rels.forEach((rel) => {\n            this.AddRel(rel);\n        });\n    }\n\n    public AddRel(rel: string) {\n        if (this.HasRel(rel)) {\n            return;\n        }\n        if (!this.Rel) {\n            this.Rel = [rel];\n        } else {\n            this.Rel.push(rel);\n        }\n    }\n\n    public HasRel(rel: string): boolean {\n        return this.Rel && this.Rel.indexOf(rel) >= 0;\n    }\n\n    @OnDeserialized()\n    // tslint:disable-next-line:no-unused-variable\n    private _OnDeserialized() {\n        if (!this.Href) {\n            console.log(\"Link.Href is not set!\");\n        }\n    }\n}\n"]}