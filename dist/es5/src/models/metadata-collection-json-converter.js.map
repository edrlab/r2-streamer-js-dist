{"version":3,"file":"metadata-collection-json-converter.js","sourceRoot":"","sources":["../../../../src/models/metadata-collection-json-converter.ts"],"names":[],"mappings":";;AAAA,mCAIiB;AAEjB,6DAAmD;AAEnD;IAAA;IA2BA,CAAC;IA1BU,2CAAS,GAAhB,UAAiB,QAAoB;QAGjC,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAEM,6CAAW,GAAlB,UAAmB,KAAgB;QAQ/B,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC5B,IAAM,CAAC,GAAG,IAAI,gCAAU,EAAE,CAAC;YAC3B,CAAC,CAAC,IAAI,GAAG,KAAe,CAAC;YACzB,MAAM,CAAC,CAAC,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,cAAM,CAAC,WAAW,CAAa,KAAK,EAAE,gCAAU,CAAC,CAAC;QAC7D,CAAC;IACL,CAAC;IAEM,6DAA2B,GAAlC;QACI,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL,8BAAC;AAAD,CAAC,AA3BD,IA2BC;AA3BY,0DAAuB","sourcesContent":["import {\r\n    IPropertyConverter,\r\n    JSON as TAJSON,\r\n    JsonValue,\r\n} from \"ta-json\";\r\n\r\nimport { Collection } from \"./metadata-collection\";\r\n\r\nexport class JsonCollectionConverter implements IPropertyConverter {\r\n    public serialize(property: Collection): JsonValue {\r\n        // console.log(\"JsonCollectionConverter.serialize()\");\r\n\r\n        return TAJSON.serialize(property);\r\n    }\r\n\r\n    public deserialize(value: JsonValue): Collection {\r\n        // console.log(\"JsonCollectionConverter.deserialize()\");\r\n\r\n        // if (value instanceof Array) {\r\n        //     return value.map((v) => {\r\n        //         return this.deserialize(v);\r\n        //     }) as Collection[];\r\n        // } else\r\n        if (typeof value === \"string\") {\r\n            const c = new Collection();\r\n            c.Name = value as string;\r\n            return c;\r\n        } else {\r\n            return TAJSON.deserialize<Collection>(value, Collection);\r\n        }\r\n    }\r\n\r\n    public collapseArrayWithSingleItem(): boolean {\r\n        return true;\r\n    }\r\n}\r\n"]}