{"version":3,"file":"media-overlay.js","sourceRoot":"","sources":["../../../../src/models/media-overlay.ts"],"names":[],"mappings":"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","sourcesContent":["// https://github.com/edcarroll/ta-json\r\nimport {\r\n    JsonElementType,\r\n    JsonObject,\r\n    JsonProperty,\r\n} from \"ta-json\";\r\n\r\n// http://www.idpf.org/epub/31/spec/epub-mediaoverlays.html#app-clock-examples\r\n// https://www.w3.org/TR/2008/REC-SMIL3-20081201/smil-timing.html#q22\r\nexport function timeStrToSeconds(timeStr: string): number {\r\n    if (!timeStr) {\r\n        return 0;\r\n    }\r\n\r\n    let hours = 0;\r\n    let minutes = 0;\r\n    let seconds = 0;\r\n\r\n    try {\r\n        const iMin = timeStr.indexOf(\"min\");\r\n        if (iMin > 0) {\r\n            // time.fraction(min)\r\n            const minsStr = timeStr.substr(0, iMin);\r\n            minutes = parseFloat(minsStr);\r\n        } else {\r\n            const iMs = timeStr.indexOf(\"ms\");\r\n            if (iMs > 0) {\r\n                // time.fraction(ms)\r\n                const msStr = timeStr.substr(0, iMs);\r\n                const ms = parseFloat(msStr);\r\n                seconds = ms / 1000;\r\n            } else {\r\n                const iS = timeStr.indexOf(\"s\");\r\n                if (iS > 0) {\r\n                    // time.fraction(s)\r\n                    const sStr = timeStr.substr(0, iS);\r\n                    seconds = parseFloat(sStr);\r\n                } else {\r\n                    const iH = timeStr.indexOf(\"h\");\r\n                    if (iH > 0) {\r\n                        // time.fraction(h)\r\n                        const hStr = timeStr.substr(0, iH);\r\n                        hours = parseFloat(hStr);\r\n                    } else {\r\n                        const arr = timeStr.split(\":\");\r\n                        if (arr.length === 1) {\r\n                            // ss.fraction\r\n                            seconds = parseFloat(arr[0]);\r\n\r\n                        } else if (arr.length === 2) {\r\n                            // mm:ss.fraction\r\n                            minutes = parseFloat(arr[0]);\r\n                            seconds = parseFloat(arr[1]);\r\n\r\n                        } else if (arr.length === 3) {\r\n                            // hh:mm:ss.fraction\r\n                            hours = parseFloat(arr[0]);\r\n                            minutes = parseFloat(arr[1]);\r\n                            seconds = parseFloat(arr[2]);\r\n\r\n                        } else {\r\n                            console.log(\"SMIL TIME CLOCK SYNTAX PARSING ERROR ??\");\r\n                            console.log(timeStr);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        console.log(\"SMIL TIME CLOCK SYNTAX PARSING ERROR!\");\r\n        console.log(timeStr);\r\n        return 0;\r\n    }\r\n\r\n    return (hours * 3600) + (minutes * 60) + seconds; // total in seconds\r\n}\r\n\r\n@JsonObject()\r\nexport class MediaOverlayNode {\r\n    @JsonProperty(\"text\")\r\n    public Text: string;\r\n\r\n    @JsonProperty(\"audio\")\r\n    public Audio: string;\r\n\r\n    @JsonProperty(\"role\")\r\n    @JsonElementType(String)\r\n    public Role: string[];\r\n\r\n    @JsonProperty(\"children\")\r\n    @JsonElementType(MediaOverlayNode)\r\n    public Children: MediaOverlayNode[];\r\n\r\n    public SmilPathInZip: string;\r\n\r\n    public initialized: boolean;\r\n\r\n    // public inspect(depth: number, opts: any): string | null | undefined {\r\n    //     return \"MediaOverlay: \" + this.SmilPathInZip;\r\n    // }\r\n\r\n    // constructor(text: string = \"T3\") {\r\n    //     this._JsonConstructor(text);\r\n    // }\r\n\r\n    // @JsonConstructor()\r\n    // private _JsonConstructor(text: string = \"T2\") {\r\n    //     console.log(\"_JsonConstructor\");\r\n    //     console.log(\"!!!! \" + text);\r\n\r\n    //     this.Text = text;\r\n    // }\r\n\r\n    // @BeforeDeserialized()\r\n    // private _BeforeDeserialized() {\r\n    //     console.log(\"_BeforeDeserialized\");\r\n\r\n    //     this.Text = \"T1\";\r\n    //     // this.Audio = \"\";\r\n    // }\r\n\r\n    // @OnDeserialized()\r\n    //// tslint:disable-next-line:no-unused-variable\r\n    // private _OnDeserialized() {\r\n    //     console.log(\"_OnDeserialized\");\r\n    //     console.log(\"==> \" + this.info);\r\n    // }\r\n\r\n    // public get info(): string {\r\n    //     return `${this.Text} + ${this.Audio} - ` + (this.Children ? this.Children.length : \"0\");\r\n    // }\r\n}\r\n"]}