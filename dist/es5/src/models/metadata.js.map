{"version":3,"file":"metadata.js","sourceRoot":"","sources":["../../../../src/models/metadata.ts"],"names":[],"mappings":";;;AACA,mCAKiB;AAEjB,2DAAiD;AACjD,+DAAqD;AACrD,mEAAwD;AAExD,6DAAmD;AACnD,uDAA6C;AAS7C;IAAA;IAwHA,CAAC;IARW,kCAAe,GAAvB;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACd,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QAC9C,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;QACnD,CAAC;IACL,CAAC;IArHD;QADC,sBAAY,CAAC,OAAO,CAAC;;6CACC;IAMvB;QAJC,sBAAY,CAAC,OAAO,CAAC;;2CAIY;IAGlC;QADC,sBAAY,CAAC,YAAY,CAAC;;gDACD;IAI1B;QAFC,sBAAY,CAAC,QAAQ,CAAC;QACtB,yBAAe,CAAC,kCAAW,CAAC;;4CACA;IAI7B;QAFC,sBAAY,CAAC,YAAY,CAAC;QAC1B,yBAAe,CAAC,kCAAW,CAAC;;gDACI;IAIjC;QAFC,sBAAY,CAAC,QAAQ,CAAC;QACtB,yBAAe,CAAC,kCAAW,CAAC;;4CACA;IAI7B;QAFC,sBAAY,CAAC,QAAQ,CAAC;QACtB,yBAAe,CAAC,kCAAW,CAAC;;4CACA;IAI7B;QAFC,sBAAY,CAAC,aAAa,CAAC;QAC3B,yBAAe,CAAC,kCAAW,CAAC;;iDACK;IAIlC;QAFC,sBAAY,CAAC,UAAU,CAAC;QACxB,yBAAe,CAAC,kCAAW,CAAC;;8CACE;IAI/B;QAFC,sBAAY,CAAC,UAAU,CAAC;QACxB,yBAAe,CAAC,kCAAW,CAAC;;8CACE;IAI/B;QAFC,sBAAY,CAAC,UAAU,CAAC;QACxB,yBAAe,CAAC,kCAAW,CAAC;;8CACE;IAI/B;QAFC,sBAAY,CAAC,OAAO,CAAC;QACrB,yBAAe,CAAC,kCAAW,CAAC;;2CACD;IAI5B;QAFC,sBAAY,CAAC,UAAU,CAAC;QACxB,yBAAe,CAAC,kCAAW,CAAC;;8CACE;IAI/B;QAFC,sBAAY,CAAC,aAAa,CAAC;QAC3B,yBAAe,CAAC,kCAAW,CAAC;;iDACK;IAIlC;QAFC,sBAAY,CAAC,WAAW,CAAC;QACzB,yBAAe,CAAC,kCAAW,CAAC;;+CACG;IAIhC;QAFC,sBAAY,CAAC,SAAS,CAAC;QACvB,yBAAe,CAAC,kCAAW,CAAC;;6CACC;IAI9B;QAFC,sBAAY,CAAC,UAAU,CAAC;QACxB,yBAAe,CAAC,MAAM,CAAC;;8CACE;IAG1B;QADC,sBAAY,CAAC,UAAU,CAAC;0CACR,IAAI;8CAAC;IAGtB;QADC,sBAAY,CAAC,WAAW,CAAC;0CACF,IAAI;qDAAC;IAG7B;QADC,sBAAY,CAAC,aAAa,CAAC;;iDACD;IAG3B;QADC,sBAAY,CAAC,WAAW,CAAC;;+CACD;IAGzB;QADC,sBAAY,CAAC,WAAW,CAAC;0CACR,gCAAU;+CAAC;IAG7B;QADC,sBAAY,CAAC,QAAQ,CAAC;;4CACD;IAItB;QAFC,sBAAY,CAAC,WAAW,CAAC;QACzB,yBAAe,CAAC,MAAM,CAAC;;8CACE;IAG1B;QADC,sBAAY,CAAC,QAAQ,CAAC;;4CACD;IAItB;QAFC,sBAAY,CAAC,SAAS,CAAC;QACvB,yBAAe,CAAC,0BAAO,CAAC;;6CACC;IAG1B;QADC,sBAAY,CAAC,YAAY,CAAC;0CACT,8BAAS;+CAAC;IAG5B;QADC,sBAAY,CAAC,UAAU,CAAC;;8CACD;IAGxB;QADC,sBAAY,CAAC,eAAe,CAAC;0CACT,qCAAY;kDAAC;IAOlC;QAHC,wBAAc,EAAE;;;;mDAUhB;IAvHQ,QAAQ;QADpB,oBAAU,EAAE;OACA,QAAQ,CAwHpB;IAAD,eAAC;CAAA,AAxHD,IAwHC;AAxHY,4BAAQ","sourcesContent":["// https://github.com/edcarroll/ta-json\r\nimport {\r\n    JsonElementType,\r\n    JsonObject,\r\n    JsonProperty,\r\n    OnDeserialized,\r\n} from \"ta-json\";\r\n\r\nimport { BelongsTo } from \"./metadata-belongsto\";\r\nimport { Contributor } from \"./metadata-contributor\";\r\nimport { MediaOverlay } from \"./metadata-media-overlay\";\r\nimport { IStringMap } from \"./metadata-multilang\";\r\nimport { Properties } from \"./metadata-properties\";\r\nimport { Subject } from \"./metadata-subject\";\r\n\r\n// export interface IMeta {\r\n//     property: string;\r\n//     value: string;\r\n//     children: IMeta[];\r\n// }\r\n\r\n@JsonObject()\r\nexport class Metadata {\r\n    @JsonProperty(\"@type\")\r\n    public RDFType: string;\r\n\r\n    @JsonProperty(\"title\")\r\n    // @JsonType(String)\r\n    // not needed because primitive string union with\r\n    // simple object type (string keys, string values)\r\n    public Title: string | IStringMap; // | string[] | IStringMap[]\r\n\r\n    @JsonProperty(\"identifier\")\r\n    public Identifier: string;\r\n\r\n    @JsonProperty(\"author\")\r\n    @JsonElementType(Contributor)\r\n    public Author: Contributor[];\r\n\r\n    @JsonProperty(\"translator\")\r\n    @JsonElementType(Contributor)\r\n    public Translator: Contributor[];\r\n\r\n    @JsonProperty(\"editor\")\r\n    @JsonElementType(Contributor)\r\n    public Editor: Contributor[];\r\n\r\n    @JsonProperty(\"artist\")\r\n    @JsonElementType(Contributor)\r\n    public Artist: Contributor[];\r\n\r\n    @JsonProperty(\"illustrator\")\r\n    @JsonElementType(Contributor)\r\n    public Illustrator: Contributor[];\r\n\r\n    @JsonProperty(\"letterer\")\r\n    @JsonElementType(Contributor)\r\n    public Letterer: Contributor[];\r\n\r\n    @JsonProperty(\"penciler\")\r\n    @JsonElementType(Contributor)\r\n    public Penciler: Contributor[];\r\n\r\n    @JsonProperty(\"colorist\")\r\n    @JsonElementType(Contributor)\r\n    public Colorist: Contributor[];\r\n\r\n    @JsonProperty(\"inker\")\r\n    @JsonElementType(Contributor)\r\n    public Inker: Contributor[];\r\n\r\n    @JsonProperty(\"narrator\")\r\n    @JsonElementType(Contributor)\r\n    public Narrator: Contributor[];\r\n\r\n    @JsonProperty(\"contributor\")\r\n    @JsonElementType(Contributor)\r\n    public Contributor: Contributor[];\r\n\r\n    @JsonProperty(\"publisher\")\r\n    @JsonElementType(Contributor)\r\n    public Publisher: Contributor[];\r\n\r\n    @JsonProperty(\"imprint\")\r\n    @JsonElementType(Contributor)\r\n    public Imprint: Contributor[];\r\n\r\n    @JsonProperty(\"language\")\r\n    @JsonElementType(String)\r\n    public Language: string[];\r\n\r\n    @JsonProperty(\"modified\")\r\n    public Modified: Date;\r\n\r\n    @JsonProperty(\"published\")\r\n    public PublicationDate: Date;\r\n\r\n    @JsonProperty(\"description\")\r\n    public Description: string;\r\n\r\n    @JsonProperty(\"direction\")\r\n    public Direction: string;\r\n\r\n    @JsonProperty(\"rendition\")\r\n    public Rendition: Properties;\r\n\r\n    @JsonProperty(\"source\")\r\n    public Source: string;\r\n\r\n    @JsonProperty(\"epub-type\")\r\n    @JsonElementType(String)\r\n    public EpubType: string[];\r\n\r\n    @JsonProperty(\"rights\")\r\n    public Rights: string;\r\n\r\n    @JsonProperty(\"subject\")\r\n    @JsonElementType(Subject)\r\n    public Subject: Subject[];\r\n\r\n    @JsonProperty(\"belongs_to\")\r\n    public BelongsTo: BelongsTo;\r\n\r\n    @JsonProperty(\"duration\")\r\n    public Duration: number;\r\n\r\n    @JsonProperty(\"media-overlay\")\r\n    public MediaOverlay: MediaOverlay;\r\n\r\n    // public OtherMetadata: IMeta[];\r\n\r\n    @OnDeserialized()\r\n    // tslint:disable-next-line:no-unused-variable\r\n    // @ts-ignore: TS6133 (is declared but its value is never read.)\r\n    private _OnDeserialized() {\r\n        if (!this.Title) {\r\n            console.log(\"Metadata.Title is not set!\");\r\n        }\r\n        if (!this.Identifier) {\r\n            console.log(\"Metadata.Identifier is not set!\");\r\n        }\r\n    }\r\n}\r\n"]}