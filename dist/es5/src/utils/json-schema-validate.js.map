{"version":3,"file":"json-schema-validate.js","sourceRoot":"","sources":["../../../../src/utils/json-schema-validate.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as fs from \"fs\";\nimport * as path from \"path\";\n\nimport * as Ajv from \"ajv\";\nimport * as debug_ from \"debug\";\n\nconst debug = debug_(\"r2:streamer#utils/json-schema-validate\");\n\nlet _jsonSchemas: any[] | undefined;\n\nexport function webPubManifestJsonValidate(jsonSchemasRootpath: string, jsonToValidate: any): string | undefined {\n    try {\n        // tslint:disable-next-line:max-line-length\n        // \"^((?<grandfathered>(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((?<language>([A-Za-z]{2,3}(-(?<extlang>[A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-(?<script>[A-Za-z]{4}))?(-(?<region>[A-Za-z]{2}|[0-9]{3}))?(-(?<variant>[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-(?<extension>[0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(?<privateUse>x(-[A-Za-z0-9]{1,8})+))?)|(?<privateUse2>x(-[A-Za-z0-9]{1,8})+))$\"\n        // https://github.com/sebinsua/ietf-language-tag-regex\n        // tslint:disable-next-line:max-line-length\n        // https://stackoverflow.com/questions/7035825/regular-expression-for-a-language-tag-as-defined-by-bcp47/7036171#7036171\n        //\n        // https://regex101.com\n        // PCRE PHP okay, but fail with others (JAVASCRIPT, PYTHON, GO)\n        // because of named capturing groups (e.g. ?<grandfathered>)\n        // => simply remove for Javascript RegExp,\n        // or optionally call ajv.addFormat() with https://github.com/slevithan/xregexp \"regexp\" replacement?\n        //\n        // const regular = \"(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)\";\n        // tslint:disable-next-line:max-line-length\n        // const irregular = \"(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)\";\n        // const grandfathered = \"(?<grandfathered>\" + irregular + \"|\" + regular + \")\";\n        // const privateUse = \"(?<privateUse>x(-[A-Za-z0-9]{1,8})+)\";\n        // const privateUse2 = \"(?<privateUse2>x(-[A-Za-z0-9]{1,8})+)\";\n        // const singleton = \"[0-9A-WY-Za-wy-z]\";\n        // const extension = \"(?<extension>\" + singleton + \"(-[A-Za-z0-9]{2,8})+)\";\n        // const variant = \"(?<variant>[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3})\";\n        // const region = \"(?<region>[A-Za-z]{2}|[0-9]{3})\";\n        // const script = \"(?<script>[A-Za-z]{4})\";\n        // const extlang = \"(?<extlang>[A-Za-z]{3}(-[A-Za-z]{3}){0,2})\";\n        // const language = \"(?<language>([A-Za-z]{2,3}(-\" + extlang + \")?)|[A-Za-z]{4}|[A-Za-z]{5,8})\";\n        // tslint:disable-next-line:max-line-length\n        // const langtag = \"(\" + language + \"(-\" + script + \")?\" + \"(-\" + region + \")?\" + \"(-\" + variant + \")*\" + \"(-\" + extension + \")*\" + \"(-\" + privateUse + \")?\" + \")\";\n        // const languageTag = \"(\" + grandfathered + \"|\" + langtag + \"|\" + privateUse2 + \")\";\n        // // const bcp47RegEx = languageTag + \"g\";\n        // const bcp47RegEx = \"^\" + languageTag + \"$\";\n        // debug(bcp47RegEx);\n\n        debug(\"WebPub Manifest JSON Schema validation ...\");\n\n        if (!_jsonSchemas) { // lazy loading\n\n            const jsonSchemasNames = [\n                \"publication\", // must be first!\n                \"contributor-object\",\n                \"contributor\",\n                \"link\",\n                \"metadata\",\n                \"subcollection\",\n            ];\n\n            for (const jsonSchemaName of jsonSchemasNames) {\n                const jsonSchemaPath = path.join(jsonSchemasRootpath, jsonSchemaName + \".schema.json\");\n                debug(jsonSchemaPath);\n                if (!fs.existsSync(jsonSchemaPath)) {\n                    debug(\"Skipping JSON SCHEMAS (not found): \" + jsonSchemaPath);\n                    // _jsonSchemas = []; // to skip future attempts?\n                    return undefined;\n                }\n                let jsonSchemaStr = fs.readFileSync(jsonSchemaPath, { encoding: \"utf8\" });\n                if (!jsonSchemaStr) {\n                    debug(\"File load fail: \" + jsonSchemaPath);\n                    return undefined;\n                }\n                // Javascript named capturing groups (syntax works in PCRE PHP regular expressions)\n                jsonSchemaStr = jsonSchemaStr.replace(/\\?<grandfathered>/g, \"\");\n                jsonSchemaStr = jsonSchemaStr.replace(/\\?<privateUse>/g, \"\");\n                jsonSchemaStr = jsonSchemaStr.replace(/\\?<privateUse2>/g, \"\");\n                jsonSchemaStr = jsonSchemaStr.replace(/\\?<extension>/g, \"\");\n                jsonSchemaStr = jsonSchemaStr.replace(/\\?<variant>/g, \"\");\n                jsonSchemaStr = jsonSchemaStr.replace(/\\?<script>/g, \"\");\n                jsonSchemaStr = jsonSchemaStr.replace(/\\?<extlang>/g, \"\");\n                jsonSchemaStr = jsonSchemaStr.replace(/\\?<language>/g, \"\");\n                jsonSchemaStr = jsonSchemaStr.replace(/\\?<region>/g, \"\");\n                // debug(jsonSchemaStr);\n                if (jsonSchemaStr.indexOf(\"?<\") >= 0) {\n                    debug(\"REGEX WARNING!!\");\n                    // process.exit(-1);\n                    return undefined;\n                }\n                const jsonSchema = global.JSON.parse(jsonSchemaStr);\n                if (!_jsonSchemas) {\n                    _jsonSchemas = [];\n                }\n                _jsonSchemas.push(jsonSchema);\n                // debug(jsonSchema);\n            }\n        }\n        if (!_jsonSchemas) {\n            return undefined;\n        }\n\n        const ajv = new Ajv({ allErrors: true, coerceTypes: false, verbose: true });\n\n        // const ajvValidate = ajv.compile({});\n        // const ajvValid = ajvValidate(jsonObj);\n        // if (!ajvValid) {\n        //     debug(ajvValidate.errors);\n        // }\n\n        _jsonSchemas.forEach((jsonSchema) => {\n            // tslint:disable-next-line:no-string-literal\n            debug(\"JSON Schema ADD: \" + jsonSchema[\"$id\"]);\n            // tslint:disable-next-line:no-string-literal\n            ajv.addSchema(jsonSchema, jsonSchema[\"$id\"]); // returns 'ajv' for chaining\n        });\n\n        // debug(jsonToValidate);\n        debug(\"JSON Schema VALIDATE ...\");\n\n        // tslint:disable-next-line:no-string-literal\n        const ajvValid = ajv.validate(_jsonSchemas[0][\"$id\"], jsonToValidate);\n        if (!ajvValid) {\n            debug(\"WebPub Manifest JSON Schema validation FAIL.\");\n            const errorsText = ajv.errorsText();\n            debug(errorsText);\n            return errorsText;\n        } else {\n            debug(\"WebPub Manifest JSON Schema validation OK.\");\n        }\n    } catch (err) {\n        debug(\"JSON Schema VALIDATION PROBLEM.\");\n        debug(err);\n        return err;\n    }\n\n    return undefined;\n}\n"]}