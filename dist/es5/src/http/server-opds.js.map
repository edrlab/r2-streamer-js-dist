{"version":3,"file":"server-opds.js","sourceRoot":"","sources":["../../../../src/http/server-opds.ts"],"names":[],"mappings":"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","sourcesContent":["import { OPDS } from \"@opds/opds1/opds\";\r\nimport { Entry } from \"@opds/opds1/opds-entry\";\r\nimport { encodeURIComponent_RFC3986, ensureAbsolute } from \"@utils/http/UrlUtils\";\r\nimport { streamToBufferPromise } from \"@utils/stream/BufferUtils\";\r\nimport { XML } from \"@utils/xml-js-mapper\";\r\nimport * as debug_ from \"debug\";\r\nimport * as express from \"express\";\r\nimport * as morgan from \"morgan\";\r\nimport * as request from \"request\";\r\nimport * as requestPromise from \"request-promise-native\";\r\nimport * as xmldom from \"xmldom\";\r\n\r\nimport { Server } from \"./server\";\r\nimport { trailingSlashRedirect } from \"./server-trailing-slash-redirect\";\r\n\r\nconst debug = debug_(\"r2:server:opds\");\r\n\r\nexport function serverOPDS(_server: Server, topRouter: express.Application) {\r\n\r\n    const routerOPDS = express.Router({ strict: false });\r\n    routerOPDS.use(morgan(\"combined\"));\r\n\r\n    routerOPDS.use(trailingSlashRedirect);\r\n\r\n    routerOPDS.get(\"/\", (_req: express.Request, res: express.Response) => {\r\n\r\n        let html = \"<html><head>\";\r\n        html += `<script type=\"text/javascript\">function encodeURIComponent_RFC3986(str) { ` +\r\n            `return encodeURIComponent(str).replace(/[!'()*]/g, (c) => { ` +\r\n            `return \"%\" + c.charCodeAt(0).toString(16); }); }` +\r\n            `function go(evt) {` +\r\n            `if (evt) { evt.preventDefault(); } var url = ` +\r\n            `location.origin +` +\r\n            // `location.protocol + '//' + location.hostname + ` +\r\n            // `(location.port ? (':' + location.port) : '') + ` +\r\n            ` '/opds/' +` +\r\n            ` encodeURIComponent_RFC3986(document.getElementById(\"url\").value);` +\r\n            `location.href = url;}</script>`;\r\n        html += \"</head>\";\r\n\r\n        html += \"<body><h1>OPDS feed browser</h1>\";\r\n\r\n        html += `<form onsubmit=\"go();return false;\">` +\r\n            `<input type=\"text\" name=\"url\" id=\"url\" size=\"80\">` +\r\n            `<input type=\"submit\" value=\"Go!\"></form>`;\r\n\r\n        html += \"</body></html>\";\r\n\r\n        res.status(200).send(html);\r\n    });\r\n\r\n    routerOPDS.param(\"urlEncoded\", (req, _res, next, value, _name) => {\r\n        (req as any).urlEncoded = value;\r\n        next();\r\n    });\r\n\r\n    routerOPDS.get(\"/:urlEncoded(*)\", async (req: express.Request, res: express.Response) => {\r\n\r\n        if (!req.params.urlEncoded) {\r\n            req.params.urlEncoded = (req as any).urlEncoded;\r\n        }\r\n\r\n        const urlDecoded = req.params.urlEncoded;\r\n        // if (urlDecoded.substr(-1) === \"/\") {\r\n        //     urlDecoded = urlDecoded.substr(0, urlDecoded.length - 1);\r\n        // }\r\n        debug(urlDecoded);\r\n\r\n        const failure = (err: any) => {\r\n            debug(err);\r\n            res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                + err + \"</p></body></html>\");\r\n        };\r\n\r\n        const success = async (response: request.RequestResponse) => {\r\n\r\n            // Object.keys(response.headers).forEach((header: string) => {\r\n            //     debug(header + \" => \" + response.headers[header]);\r\n            // });\r\n\r\n            if (response.statusCode && (response.statusCode < 200 || response.statusCode >= 300)) {\r\n                failure(\"HTTP CODE \" + response.statusCode);\r\n                return;\r\n            }\r\n\r\n            let responseData: Buffer;\r\n            try {\r\n                responseData = await streamToBufferPromise(response);\r\n            } catch (err) {\r\n                debug(err);\r\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                    + err + \"</p></body></html>\");\r\n                return;\r\n            }\r\n            const responseStr = responseData.toString(\"utf8\");\r\n            const responseXml = new xmldom.DOMParser().parseFromString(responseStr);\r\n            // debug(responseXml);\r\n            const isEntry = responseXml.documentElement.localName === \"entry\";\r\n            let opds: OPDS | undefined;\r\n            let opdsEntry: Entry | undefined;\r\n            if (isEntry) {\r\n                opdsEntry = XML.deserialize<Entry>(responseXml, Entry);\r\n            } else {\r\n                opds = XML.deserialize<OPDS>(responseXml, OPDS);\r\n            }\r\n\r\n            // // breakLength: 100  maxArrayLength: undefined\r\n            // console.log(util.inspect(opds,\r\n            //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\r\n\r\n            let html = \"<html><head>\";\r\n            html += \"</head>\";\r\n            html += \"<body><h1>\" + urlDecoded + \"</h1>\";\r\n            if (opds && opds.Title) {\r\n                html += \"<h2>\" + opds.Title + \"</h2>\";\r\n            }\r\n            if (opdsEntry && opdsEntry.Title) {\r\n                html += \"<h2>\" + opdsEntry.Title + \"</h2>\";\r\n            }\r\n            if (opds && opds.Icon) {\r\n                const iconUrl = ensureAbsolute(urlDecoded, opds.Icon);\r\n                html += \"<img src='\" + iconUrl + \"' alt='' />\";\r\n            }\r\n            // if (opds.Updated) {\r\n            //     html += \"<h3>\" + opds.Updated.toUTCString() + \"</h3>\";\r\n            //     html += \"<h3>\" + opds.Updated.toDateString() + \"</h3>\";\r\n            //     html += \"<h3>\" + opds.Updated.toISOString() + \"</h3>\";\r\n            //     html += \"<h3>\" + opds.Updated.toTimeString() + \"</h3>\";\r\n            // }\r\n            const links = opds ? opds.Links : (opdsEntry ? opdsEntry.Links : undefined);\r\n            if (links && links.length) {\r\n                html += \"<p>\";\r\n                links.forEach((link) => {\r\n                    if (link.Type &&\r\n                        (link.Type.indexOf(\"opds-catalog\") >= 0 || link.Type === \"application/atom+xml\")) {\r\n                        const linkUrl = ensureAbsolute(urlDecoded, link.Href);\r\n                        const opdsUrl = req.originalUrl.substr(0, req.originalUrl.indexOf(\"/opds/\"))\r\n                            + \"/opds/\" + encodeURIComponent_RFC3986(linkUrl);\r\n\r\n                        html += \"<a href='\" + opdsUrl\r\n                            + \"'>\" + link.Href + \"</a> (TITLE: \" + link.Title\r\n                            + \") [REL: \" + link.Rel + \"]<br/>\";\r\n                    }\r\n                });\r\n                html += \"</p>\";\r\n            }\r\n\r\n            function processEntry(entry: Entry) {\r\n\r\n                html += \"<hr/>\";\r\n                html += \"<div>\";\r\n                if (opds) {\r\n                    html += \"<h3>\" + entry.Title + \"</h3>\";\r\n                }\r\n                if (entry.Summary) {\r\n                    if (!entry.SummaryType || entry.SummaryType === \"text\") {\r\n                        html += \"<strong>\" + entry.Summary + \"</strong>\";\r\n                    } else if (entry.SummaryType === \"html\") {\r\n                        html += \"<div>\" + entry.Summary + \"</div>\";\r\n                    }\r\n                    html += \"<br/>\";\r\n                }\r\n                if (entry.Content) {\r\n                    if (!entry.ContentType || entry.ContentType === \"text\") {\r\n                        html += \"<strong>\" + entry.Content + \"</strong>\";\r\n                    } else if (entry.ContentType === \"html\") {\r\n                        html += \"<div>\" + entry.Content + \"</div>\";\r\n                    }\r\n                    html += \"<br/>\";\r\n                }\r\n                if (entry.Links && entry.Links.length) {\r\n                    let image: string | undefined;\r\n                    let imageThumbnail: string | undefined;\r\n                    let epub: string | undefined;\r\n                    entry.Links.forEach((link) => {\r\n                        if (link.Type === \"application/epub+zip\") {\r\n                            epub = link.Href;\r\n                        }\r\n                        if (link.HasRel(\"http://opds-spec.org/image\")\r\n                            || link.HasRel(\"x-stanza-cover-image\")) {\r\n                            image = link.Href;\r\n                        }\r\n                        if (link.HasRel(\"http://opds-spec.org/image/thumbnail\")\r\n                            || link.HasRel(\"http://opds-spec.org/thumbnail\")\r\n                            || link.HasRel(\"x-stanza-cover-image-thumbnail\")) {\r\n                            imageThumbnail = link.Href;\r\n                        }\r\n\r\n                        if (opds && link.Type &&\r\n                            (link.Type.indexOf(\"opds-catalog\") >= 0 || link.Type === \"application/atom+xml\")) {\r\n                            const linkUrl = ensureAbsolute(urlDecoded, link.Href);\r\n                            const opdsUrl = req.originalUrl.substr(0, req.originalUrl.indexOf(\"/opds/\"))\r\n                                + \"/opds/\" + encodeURIComponent_RFC3986(linkUrl);\r\n\r\n                            html += \"<a href='\" + opdsUrl\r\n                                + \"'>\" + link.Href + \"</a> (TITLE: \" + link.Title\r\n                                + \") [REL: \" + link.Rel + \"]<br/>\";\r\n                        }\r\n                    });\r\n                    if (imageThumbnail) {\r\n                        const imageThumbnailUrl = ensureAbsolute(urlDecoded, imageThumbnail);\r\n                        if (image) {\r\n                            const imageUrl = ensureAbsolute(urlDecoded, image);\r\n                            html += \"<a href='\" + imageUrl + \"'><img src='\"\r\n                                + imageThumbnailUrl + \"' alt='' /></a><br/>\";\r\n                        } else {\r\n                            html += \"<img src='\" + imageThumbnailUrl + \"' alt='' /><br/>\";\r\n                        }\r\n                    } else if (image) {\r\n                        const imageUrl = ensureAbsolute(urlDecoded, image);\r\n                        html += \"<img src='\" + imageUrl + \"' alt='' /><br/>\";\r\n                    }\r\n                    if (epub) {\r\n                        const epub_ = ensureAbsolute(urlDecoded, epub);\r\n                        const epubUrl = req.originalUrl.substr(0, req.originalUrl.indexOf(\"/opds/\"))\r\n                            + \"/url/\" + encodeURIComponent_RFC3986(epub_);\r\n\r\n                        html += \"<strong><a href='\" + epubUrl + \"'>\" + epub + \"</a></strong>\";\r\n                    }\r\n                }\r\n                html += \"</div>\";\r\n            }\r\n\r\n            if (opds && opds.Entries && opds.Entries.length) {\r\n                opds.Entries.forEach((entry) => {\r\n                    processEntry(entry);\r\n                });\r\n            }\r\n            if (opdsEntry) {\r\n                processEntry(opdsEntry);\r\n            }\r\n\r\n            html += \"</body></html>\";\r\n\r\n            res.status(200).send(html);\r\n        };\r\n\r\n        // No response streaming! :(\r\n        // https://github.com/request/request-promise/issues/90\r\n        const needsStreamingResponse = true;\r\n        if (needsStreamingResponse) {\r\n            request.get({\r\n                headers: {},\r\n                method: \"GET\",\r\n                uri: urlDecoded,\r\n            })\r\n                .on(\"response\", success)\r\n                .on(\"error\", failure);\r\n        } else {\r\n            let response: requestPromise.FullResponse;\r\n            try {\r\n                // tslint:disable-next-line:await-promise no-floating-promises\r\n                response = await requestPromise({\r\n                    headers: {},\r\n                    method: \"GET\",\r\n                    resolveWithFullResponse: true,\r\n                    uri: urlDecoded,\r\n                });\r\n            } catch (err) {\r\n                failure(err);\r\n                return;\r\n            }\r\n\r\n            await success(response);\r\n        }\r\n    });\r\n\r\n    topRouter.use(\"/opds\", routerOPDS);\r\n}\r\n"]}