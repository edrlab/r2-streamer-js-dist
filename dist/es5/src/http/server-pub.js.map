{"version":3,"file":"server-pub.js","sourceRoot":"","sources":["../../../../src/http/server-pub.ts"],"names":[],"mappings":";;AAAA,2BAA6B;AAC7B,yCAA2C;AAE3C,8BAAgC;AAChC,iCAAmC;AACnC,+BAAiC;AAEjC,iDAA0E;AAE1E,mFAAyE;AAEzE,IAAM,KAAK,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAEtC,mBAA0B,MAAc,EAAE,SAA8B;IAEpE,IAAM,OAAO,GAAG,gCAAgC,CAAC;IACjD,IAAM,cAAc,GAAG,0BAA0B,CAAC;IAElD,IAAM,aAAa,GAAG,yBAAyB,GAAG,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9E,IAAM,gBAAgB,GAAG,2CAA2C;UAC9D,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAElC,IAAM,eAAe,GACjB,6EAA6E;UAC3E,OAAO,CAAC;IAEd,IAAM,qBAAqB,GACvB,6FAA6F;UAC3F,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAElC,IAAM,iBAAiB,GACnB,wCAAwC;UACtC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAElC,IAAM,WAAW,GAAG,4CAA4C;QAC5D,cAAc,GAAG,IAAI,GAAG,cAAc,GAAG,WAAW;QACpD,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAC1B,8BAA8B;YAC9B,aAAa,GAAG,IAAI,GAAG,aAAa,GAAG,yCAAyC;YAChF,gBAAgB,GAAG,IAAI,GAAG,gBAAgB,GAAG,yCAAyC;YACtF,eAAe,GAAG,IAAI,GAAG,eAAe,GAAG,+CAA+C;YAC1F,qBAAqB,GAAG,IAAI,GAAG,qBAAqB,GAAG,2CAA2C;YAClG,iBAAiB,GAAG,IAAI,GAAG,iBAAiB,GAAG,UAAU,CAAC,CAAC;QAC/D,gBAAgB,CAAC;IAErB,IAAM,gBAAgB,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IAC3D,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IAEzC,gBAAgB,CAAC,GAAG,CAAC,sDAAqB,CAAC,CAAC;IAE5C,gBAAgB,CAAC,KAAK,CAAC,YAAY,EAAE,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK;QAE9D,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACrF,IAAM,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YAC5C,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAEzF,GAAW,CAAC,SAAS,GAAG,MAAM,CAAC;YAEhC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACpD,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;YAC9B,KAAK,CAAC,KAAK,CAAC,CAAC;QACjB,CAAC;QAED,IAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9D,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChB,EAAE,CAAC,CAAC,iBAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAGlB,GAAW,CAAC,UAAU,GAAG,KAAK,CAAC;YAChC,IAAI,EAAE,CAAC;YACP,MAAM,CAAC;QACX,CAAC;QAED,IAAM,KAAK,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ;YACjD,IAAM,cAAc,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC/D,MAAM,CAAC,KAAK,KAAK,cAAc,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACP,GAAW,CAAC,UAAU,GAAG,KAAK,CAAC;YAChC,IAAI,EAAE,CAAC;QACX,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,0DAA0D;kBACzE,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,2BAA2B,CAAC,CAAC;QAE/D,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,gBAAgB,CAAC,GAAG,CAAC,cAAc,EAAE,UAAC,GAAoB,EAAE,GAAqB;QAE7E,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,MAAM,CAAC,UAAU,GAAI,GAAW,CAAC,UAAU,CAAC;QACpD,CAAC;QAED,IAAM,aAAa,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACnF,KAAK,CAAC,kBAAgB,aAAe,CAAC,CAAC;QAEvC,IAAM,YAAY,GAAG,GAAG,CAAC,MAAM;YAC3B,GAAG,CAAC,QAAQ,KAAK,OAAO;YACxB,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,OAAO,CAGvC;QAQL,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW;aAE3B,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;aAClD,OAAO,CAAC,cAAc,EAAE,qCAA0B,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;aAC1E,OAAO,CAAC,SAAS,EAClB,CAAC,YAAY,CAAC,CAAC;YACX,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;cACjE,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,EACrC,CAAC,YAAY,CAAC,CAAC;YACX,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;cACzB,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;IAExC,MAAM,CAAC,gBAAgB,CAAC;AAC5B,CAAC;AAjHD,8BAiHC","sourcesContent":["import * as path from \"path\";\r\nimport * as querystring from \"querystring\";\r\n\r\nimport * as debug_ from \"debug\";\r\nimport * as express from \"express\";\r\nimport * as morgan from \"morgan\";\r\n\r\nimport { encodeURIComponent_RFC3986, isHTTP } from \"@utils/http/UrlUtils\";\r\nimport { Server } from \"./server\";\r\nimport { trailingSlashRedirect } from \"./server-trailing-slash-redirect\";\r\n\r\nconst debug = debug_(\"r2:server:pub\");\r\n\r\nexport function serverPub(server: Server, topRouter: express.Application): express.Router {\r\n\r\n    const urlBook = \"/pub/PATH_BASE64/manifest.json\";\r\n    const urlBookShowAll = \"./manifest.json/show/all\";\r\n\r\n    const urlReaderNYPL = \"/readerNYPL/?url=PREFIX\" + querystring.escape(urlBook);\r\n    const urlReaderHADRIEN = \"/readerHADRIEN/?manifest=true&href=PREFIX\"\r\n        + querystring.escape(urlBook);\r\n\r\n    const urlReaderEPUBJS =\r\n        \"https://s3.amazonaws.com/epubjs-manifest/examples/manifest.html?href=PREFIZ\"\r\n        + urlBook;\r\n\r\n    const urlReaderHADRIENbasic =\r\n        \"https://hadriengardeur.github.io/webpub-manifest/examples/viewer/?manifest=true&href=PREFIX\"\r\n        + querystring.escape(urlBook);\r\n\r\n    const urlReaderREADIUM1 =\r\n        \"http://readium-2.surge.sh/?epub=PREFIX\"\r\n        + querystring.escape(urlBook);\r\n\r\n    const htmlLanding = \"<html><body><h1>PATH_STR</h1><h2><a href='\" +\r\n        urlBookShowAll + \"'>\" + urlBookShowAll + \"</a></h2>\" +\r\n        (server.disableReaders ? \"\" : (\r\n            \"<p>Reader NYPL:<br><a href='\" +\r\n            urlReaderNYPL + \"'>\" + urlReaderNYPL + \"</a></p><p>Reader HADRIEN:<br><a href='\" +\r\n            urlReaderHADRIEN + \"'>\" + urlReaderHADRIEN + \"</a></p><p>Reader EPUB.js:<br><a href='\" +\r\n            urlReaderEPUBJS + \"'>\" + urlReaderEPUBJS + \"</a></p><p>Reader HADRIEN BASIC:<br><a href='\" +\r\n            urlReaderHADRIENbasic + \"'>\" + urlReaderHADRIENbasic + \"</a></p><p>Reader READIUM-1:<br><a href='\" +\r\n            urlReaderREADIUM1 + \"'>\" + urlReaderREADIUM1 + \"</a></p>\")) +\r\n        \"</body></html>\";\r\n\r\n    const routerPathBase64 = express.Router({ strict: false });\r\n    routerPathBase64.use(morgan(\"combined\"));\r\n\r\n    routerPathBase64.use(trailingSlashRedirect);\r\n\r\n    routerPathBase64.param(\"pathBase64\", (req, res, next, value, _name) => {\r\n\r\n        if (value.indexOf(server.lcpBeginToken) === 0 && value.indexOf(server.lcpEndToken) > 0) {\r\n            const i = value.indexOf(server.lcpEndToken);\r\n            const pass64 = value.substr(server.lcpBeginToken.length, i - server.lcpBeginToken.length);\r\n            // const pass = new Buffer(pass64, \"base64\").toString(\"utf8\");\r\n            (req as any).lcpPass64 = pass64;\r\n\r\n            value = value.substr(i + server.lcpEndToken.length);\r\n            req.params.pathBase64 = value;\r\n            debug(value);\r\n        }\r\n\r\n        const valueStr = new Buffer(value, \"base64\").toString(\"utf8\");\r\n        debug(valueStr);\r\n        if (isHTTP(valueStr)) {\r\n            // debug(`Publication URL: ${valueStr}`);\r\n\r\n            (req as any).pathBase64 = value;\r\n            next();\r\n            return;\r\n        }\r\n\r\n        const found = server.getPublications().find((filePath) => {\r\n            const filePathBase64 = new Buffer(filePath).toString(\"base64\");\r\n            return value === filePathBase64;\r\n        });\r\n\r\n        if (found) {\r\n            (req as any).pathBase64 = value;\r\n            next();\r\n        } else {\r\n            res.status(403).send(\"<html><body><p>Forbidden</p><p>INVALID parameter: <code>\"\r\n                + req.params.pathBase64 + \"</code></p></body></html>\");\r\n            // next(new Error(\"INVALID file param\"));\r\n        }\r\n    });\r\n\r\n    routerPathBase64.get(\"/:pathBase64\", (req: express.Request, res: express.Response) => {\r\n\r\n        if (!req.params.pathBase64) {\r\n            req.params.pathBase64 = (req as any).pathBase64;\r\n        }\r\n\r\n        const pathBase64Str = new Buffer(req.params.pathBase64, \"base64\").toString(\"utf8\");\r\n        debug(`Publication: ${pathBase64Str}`);\r\n\r\n        const isSecureHttp = req.secure ||\r\n            req.protocol === \"https\" ||\r\n            req.get(\"X-Forwarded-Proto\") === \"https\"\r\n            // (req.headers.host && req.headers.host.indexOf(\"now.sh\") >= 0) ||\r\n            // (req.hostname && req.hostname.indexOf(\"now.sh\") >= 0)\r\n            ;\r\n\r\n        // const debug = req.hostname + \" -- \"\r\n        //     + req.headers.host + \" == \"\r\n        //     + req.protocol + \" // \"\r\n        //     + req.secure + \" .. \"\r\n        //     + req.get(\"X-Forwarded-Proto\");\r\n\r\n        res.status(200).send(htmlLanding\r\n            // .replace(\"<body>\", \"<body><p>\" + debug + \"</p>\")\r\n            .replace(/PATH_STR/g, path.basename(pathBase64Str))\r\n            .replace(/PATH_BASE64/g, encodeURIComponent_RFC3986(req.params.pathBase64))\r\n            .replace(/PREFIX/g,\r\n            (isSecureHttp ?\r\n                querystring.escape(\"https://\") : querystring.escape(\"http://\"))\r\n            + req.headers.host).replace(/PREFIZ/g,\r\n            (isSecureHttp ?\r\n                \"https://\" : \"http://\")\r\n            + req.headers.host));\r\n    });\r\n\r\n    topRouter.use(\"/pub\", routerPathBase64);\r\n\r\n    return routerPathBase64;\r\n}\r\n"]}