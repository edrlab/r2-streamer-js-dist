{"version":3,"file":"opds2-create-cli.js","sourceRoot":"","sources":["../../../../src/http/opds2-create-cli.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as fs from \"fs\";\n\nimport { OPDSFeed } from \"@r2-opds-js/opds/opds2/opds2\";\nimport { OPDSLink } from \"@r2-opds-js/opds/opds2/opds2-link\";\nimport { OPDSMetadata } from \"@r2-opds-js/opds/opds2/opds2-metadata\";\nimport { OPDSPublication } from \"@r2-opds-js/opds/opds2/opds2-publication\";\nimport { OPDSPublicationMetadata } from \"@r2-opds-js/opds/opds2/opds2-publicationMetadata\";\nimport { Publication } from \"@r2-shared-js/models/publication\";\nimport { PublicationParsePromise } from \"@r2-shared-js/parser/publication-parser\";\nimport { isHTTP } from \"@r2-utils-js/_utils/http/UrlUtils\";\nimport * as debug_ from \"debug\";\nimport * as moment from \"moment\";\nimport { JSON as TAJSON } from \"ta-json-x\";\n\nconst debug = debug_(\"r2:streamer#http/opds2-create-cli\");\n\ndebug(`process.cwd(): ${process.cwd()}`);\ndebug(`__dirname: ${__dirname}`);\n\nlet args = process.argv.slice(2);\n// debug(\"process.argv.slice(2): %o\", args);\n\nif (!args.length) {\n    debug(\"FILEPATH ARGUMENTS ARE MISSING.\");\n    process.exit(1);\n}\nconst opdsJsonFilePath = args[0];\nargs = args.slice(1);\nif (fs.existsSync(opdsJsonFilePath)) {\n    debug(\"OPDS2 JSON file already exists.\");\n    process.exit(1);\n}\n\n// tslint:disable-next-line:no-floating-promises\n(async () => {\n    const feed = new OPDSFeed();\n\n    // TODO: what is the JSON-LD context URL?\n    // https://drafts.opds.io/opds-2.0\n    // https://github.com/opds-community/test-catalog/tree/master/2.0\n    feed.Context = [\"http://opds-spec.org/opds.jsonld\"];\n\n    feed.Metadata = new OPDSMetadata();\n    feed.Metadata.RDFType = \"http://schema.org/DataFeed\";\n    feed.Metadata.Title = \"Readium 2 OPDS 2.0 Feed\";\n    feed.Metadata.Modified = moment(Date.now()).toDate();\n\n    feed.Publications = [];\n\n    let nPubs = 0;\n    for (const pathBase64 of args) {\n        const pathBase64Str = new Buffer(decodeURIComponent(pathBase64), \"base64\").toString(\"utf8\");\n\n        if (isHTTP(pathBase64Str)) {\n            continue;\n        }\n\n        // const fileName = path.basename(pathBase64Str);\n        // const ext = path.extname(fileName).toLowerCase();\n\n        debug(`OPDS parsing: ${pathBase64Str}`);\n        let publication: Publication;\n        try {\n            publication = await PublicationParsePromise(pathBase64Str);\n        } catch (err) {\n            debug(err);\n            continue;\n        }\n\n        nPubs++;\n\n        const publi = new OPDSPublication();\n\n        publi.Links = [];\n        const linkSelf = new OPDSLink();\n        linkSelf.Href = pathBase64 + \"/manifest.json\";\n        linkSelf.TypeLink = \"application/webpub+json\";\n        linkSelf.AddRel(\"http://opds-spec.org/acquisition\");\n        publi.Links.push(linkSelf);\n\n        feed.Publications.push(publi);\n\n        publi.Images = [];\n        const coverLink = publication.GetCover();\n        if (coverLink) {\n            const linkCover = new OPDSLink();\n            linkCover.Href = pathBase64 + \"/\" + coverLink.Href;\n            linkCover.TypeLink = coverLink.TypeLink;\n            // linkCover.Rel = [];\n            // linkCover.Rel.push(\"cover\");\n\n            if (coverLink.Width && coverLink.Height) {\n                linkCover.Width = coverLink.Width;\n                linkCover.Height = coverLink.Height;\n\n            }\n            publi.Images.push(linkCover);\n        }\n\n        if (publication.Metadata) {\n            try {\n                const publicationMetadataJson = TAJSON.serialize(publication.Metadata);\n                publi.Metadata = TAJSON.deserialize<OPDSPublicationMetadata>(\n                    publicationMetadataJson, OPDSPublicationMetadata);\n            } catch (err) {\n                debug(err);\n                continue;\n            }\n        }\n    }\n\n    feed.Metadata.NumberOfItems = nPubs;\n\n    const jsonObj = TAJSON.serialize(feed);\n    const jsonStr = global.JSON.stringify(jsonObj, null, \"\");\n    fs.writeFileSync(opdsJsonFilePath, jsonStr, { encoding: \"utf8\" });\n\n    debug(\"DONE! :)\");\n    debug(opdsJsonFilePath);\n})();\n"]}