{"version":3,"file":"server-assets.js","sourceRoot":"","sources":["../../../../src/http/server-assets.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as path from \"path\";\n\nimport { Publication } from \"@r2-shared-js/models/publication\";\nimport { Link } from \"@r2-shared-js/models/publication-link\";\nimport { Transformers } from \"@r2-shared-js/transform/transformer\";\nimport { parseRangeHeader } from \"@r2-utils-js/_utils/http/RangeUtils\";\nimport { streamToBufferPromise } from \"@r2-utils-js/_utils/stream/BufferUtils\";\nimport { IStreamAndLength, IZip } from \"@r2-utils-js/_utils/zip/zip\";\nimport * as debug_ from \"debug\";\nimport * as express from \"express\";\nimport * as mime from \"mime-types\";\n\nimport { IRequestPayloadExtension, IRequestQueryParams, _asset, _pathBase64 } from \"./request-ext\";\nimport { Server } from \"./server\";\n\n// import { CounterPassThroughStream } from \"@r2-utils-js/_utils/stream/CounterPassThroughStream\";\n\nconst debug = debug_(\"r2:streamer#http/server-assets\");\n\nexport function serverAssets(server: Server, routerPathBase64: express.Router) {\n\n    // let streamCounter = 0;\n\n    const routerAssets = express.Router({ strict: false });\n    // routerAssets.use(morgan(\"combined\"), { stream: { write: (msg: any) => debug(msg) } }));\n\n    routerAssets.get(\"/\",\n        async (req: express.Request, res: express.Response) => {\n\n            const reqparams = req.params as IRequestPayloadExtension;\n\n            if (!reqparams.pathBase64) {\n                reqparams.pathBase64 = (req as IRequestPayloadExtension).pathBase64;\n            }\n            if (!reqparams.asset) {\n                reqparams.asset = (req as IRequestPayloadExtension).asset;\n            }\n            if (!reqparams.lcpPass64) {\n                reqparams.lcpPass64 = (req as IRequestPayloadExtension).lcpPass64;\n            }\n\n            const isShow = (req.query as IRequestQueryParams).show;\n\n            // debug(req.method);\n            const isHead = req.method.toLowerCase() === \"head\";\n            if (isHead) {\n                debug(\"HEAD !!!!!!!!!!!!!!!!!!!\");\n            }\n\n            const pathBase64Str = new Buffer(reqparams.pathBase64, \"base64\").toString(\"utf8\");\n\n            // const fileName = path.basename(pathBase64Str);\n            // const ext = path.extname(fileName).toLowerCase();\n\n            let publication: Publication;\n            try {\n                publication = await server.loadOrGetCachedPublication(pathBase64Str);\n            } catch (err) {\n                debug(err);\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                    + err + \"</p></body></html>\");\n                return;\n            }\n\n            // dumpPublication(publication);\n\n            const zipInternal = publication.findFromInternal(\"zip\");\n            if (!zipInternal) {\n                const err = \"No publication zip!\";\n                debug(err);\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                    + err + \"</p></body></html>\");\n                return;\n            }\n            const zip = zipInternal.Value as IZip;\n\n            const pathInZip = reqparams.asset;\n\n            if (!zip.hasEntry(pathInZip)) {\n                const err = \"Asset not in zip! \" + pathInZip;\n                debug(err);\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                    + err + \"</p></body></html>\");\n                return;\n            }\n\n            let link: Link | undefined;\n\n            if ((publication.Resources || publication.Spine)\n                && pathInZip.indexOf(\"META-INF/\") !== 0\n                && !pathInZip.endsWith(\".opf\")) {\n\n                const relativePath = pathInZip;\n\n                if (publication.Resources) {\n                    link = publication.Resources.find((l) => {\n                        if (l.Href === relativePath) {\n                            return true;\n                        }\n                        return false;\n                    });\n                }\n                if (!link) {\n                    if (publication.Spine) {\n                        link = publication.Spine.find((l) => {\n                            if (l.Href === relativePath) {\n                                return true;\n                            }\n                            return false;\n                        });\n                    }\n                }\n                if (!link) {\n                    const err = \"Asset not declared in publication spine/resources!\" + relativePath;\n                    debug(err);\n                    res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                        + err + \"</p></body></html>\");\n                    return;\n                }\n            }\n\n            if (server.isSecured() && !link &&\n                (pathInZip.indexOf(\"META-INF/\") === 0 || pathInZip.endsWith(\".opf\"))\n            ) {\n                res.status(200).send(\"<html><body></body></html>\");\n                return;\n            }\n\n            let mediaType = mime.lookup(pathInZip);\n            if (link && link.TypeLink) {\n                mediaType = link.TypeLink;\n            }\n\n            const isText = (typeof mediaType === \"string\") && (\n                mediaType.indexOf(\"text/\") === 0 ||\n                mediaType.indexOf(\"application/xhtml\") === 0 ||\n                mediaType.indexOf(\"application/xml\") === 0 ||\n                mediaType.indexOf(\"application/json\") === 0 ||\n                mediaType.indexOf(\"application/svg\") === 0 ||\n                mediaType.indexOf(\"application/smil\") === 0 ||\n                mediaType.indexOf(\"+json\") > 0 ||\n                mediaType.indexOf(\"+smil\") > 0 ||\n                mediaType.indexOf(\"+svg\") > 0 ||\n                mediaType.indexOf(\"+xhtml\") > 0 ||\n                mediaType.indexOf(\"+xml\") > 0);\n\n            // const isVideoAudio = mediaType && (\n            //     mediaType.indexOf(\"audio/\") === 0 ||\n            //     mediaType.indexOf(\"video/\") === 0);\n            // if (isVideoAudio) {\n            //     debug(req.headers);\n            // }\n\n            const isEncrypted = link && link.Properties && link.Properties.Encrypted;\n            const isObfuscatedFont = isEncrypted && link &&\n                (link.Properties.Encrypted.Algorithm === \"http://ns.adobe.com/pdf/enc#RC\"\n                    || link.Properties.Encrypted.Algorithm === \"http://www.idpf.org/2008/embedding\");\n\n            const isPartialByteRangeRequest = ((req.headers && req.headers.range) ? true : false);\n\n            // if (isEncrypted && isPartialByteRangeRequest) {\n            //     const err = \"Encrypted video/audio not supported (HTTP 206 partial request byte range)\";\n            //     debug(err);\n            //     res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n            //         + err + \"</p></body></html>\");\n            //     return;\n            // }\n\n            let partialByteBegin = 0; // inclusive boundaries\n            let partialByteEnd = -1;\n            let partialByteLength = 0;\n            if (isPartialByteRangeRequest) {\n                debug(req.headers.range);\n                const ranges = parseRangeHeader(req.headers.range);\n                // debug(ranges);\n\n                if (ranges && ranges.length) {\n                    if (ranges.length > 1) {\n                        const err = \"Too many HTTP ranges: \" + req.headers.range;\n                        debug(err);\n                        res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                            + err + \"</p></body></html>\");\n                        return;\n                    }\n                    partialByteBegin = ranges[0].begin;\n                    partialByteEnd = ranges[0].end;\n\n                    if (partialByteBegin < 0) {\n                        partialByteBegin = 0;\n                    }\n                }\n            }\n\n            // debug(`${pathInZip} >> ${partialByteBegin}-${partialByteEnd}`);\n            let zipStream_: IStreamAndLength;\n            try {\n                zipStream_ = isPartialByteRangeRequest && !isEncrypted ?\n                    await zip.entryStreamRangePromise(pathInZip, partialByteBegin, partialByteEnd) :\n                    await zip.entryStreamPromise(pathInZip);\n            } catch (err) {\n                debug(err);\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                    + err + \"</p></body></html>\");\n                return;\n            }\n\n            const doTransform = !isEncrypted || (isObfuscatedFont || !server.disableDecryption);\n\n            if (doTransform && link) {\n\n                let transformFail = false;\n                let transformedStream: IStreamAndLength;\n                try {\n                    transformedStream = await Transformers.tryStream(\n                        publication, link,\n                        zipStream_,\n                        isPartialByteRangeRequest, partialByteBegin, partialByteEnd);\n                } catch (err) {\n                    debug(err);\n                    res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                        + err + \"</p></body></html>\");\n                    return;\n                }\n                if (transformedStream) {\n                    if (transformedStream !== zipStream_) {\n                        debug(\"Asset transformed ok: \" + link.Href);\n                    }\n                    zipStream_ = transformedStream; // can be unchanged\n                } else {\n                    transformFail = true;\n                }\n\n                if (transformFail) {\n                    const err = \"Transform fail (encryption scheme not supported?)\";\n                    debug(err);\n                    res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                        + err + \"</p></body></html>\");\n                    return;\n                }\n            }\n\n            if (partialByteEnd < 0) {\n                partialByteEnd = zipStream_.length - 1;\n            }\n\n            partialByteLength = isPartialByteRangeRequest ?\n                partialByteEnd - partialByteBegin + 1 :\n                zipStream_.length;\n\n            if (isShow) {\n                let zipData: Buffer;\n                try {\n                    zipData = await streamToBufferPromise(zipStream_.stream);\n                } catch (err) {\n                    debug(err);\n                    res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                        + err + \"</p></body></html>\");\n                    return;\n                }\n                if (zipData) {\n                    debug(\"CHECK: \" + zipStream_.length + \" ==> \" + zipData.length);\n                }\n                res.status(200).send(\"<html><body>\" +\n                    \"<h1>\" + path.basename(pathBase64Str) + \"</h1>\" +\n                    \"<h2>\" + mediaType + \"</h2>\" +\n                    ((isText && zipData) ?\n                        (\"<p><pre>\" +\n                            zipData.toString(\"utf8\").replace(/&/g, \"&amp;\")\n                                .replace(/</g, \"&lt;\")\n                                .replace(/>/g, \"&gt;\")\n                                .replace(/\"/g, \"&quot;\")\n                                .replace(/'/g, \"&apos;\") +\n                            \"</pre></p>\")\n                        : \"<p>BINARY</p>\"\n                    ) + \"</body></html>\");\n\n                return;\n            }\n\n            server.setResponseCORS(res);\n            res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\n\n            if (mediaType) {\n                res.set(\"Content-Type\", mediaType);\n                // res.type(mediaType);\n            }\n\n            res.setHeader(\"Accept-Ranges\", \"bytes\");\n\n            if (isPartialByteRangeRequest) {\n                // res.setHeader(\"Connection\", \"close\");\n                // res.setHeader(\"Transfer-Encoding\", \"chunked\");\n                res.setHeader(\"Content-Length\", `${partialByteLength}`);\n                const rangeHeader = `bytes ${partialByteBegin}-${partialByteEnd}/${zipStream_.length}`;\n                // debug(\"+++> \" + rangeHeader + \" (( \" + partialByteLength);\n                res.setHeader(\"Content-Range\", rangeHeader);\n                res.status(206);\n            } else {\n                res.setHeader(\"Content-Length\", `${zipStream_.length}`);\n                // debug(\"---> \" + zipStream_.length);\n                res.status(200);\n            }\n\n            if (isHead) {\n                res.end();\n                // } else if (zipStream_.length === 2) {\n                //     debug(\"===> BUFFER SEND (short stream)\");\n                //     let zipData: Buffer;\n                //     try {\n                //         zipData = await streamToBufferPromise(zipStream_.stream);\n                //     } catch (err) {\n                //         debug(err);\n                //         res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                //             + err + \"</p></body></html>\");\n                //         return;\n                //     }\n                //     if (zipData) {\n                //         debug(\"CHECK: \" + zipStream_.length + \" ==> \" + zipData.length);\n                //     }\n                //     res.send(zipStream_.stream);\n            } else {\n                // debug(\"===> STREAM PIPE\");\n\n                // const counterStream = new CounterPassThroughStream(++streamCounter);\n\n                zipStream_.stream\n                    // .on(\"finish\", () => {\n                    //     debug(\"ZIP FINISH \" + counterStream.id);\n                    // })\n                    // .on(\"end\", () => {\n                    //     debug(\"ZIP END \" + counterStream.id);\n                    // })\n                    // .on(\"close\", () => {\n                    //     debug(\"ZIP CLOSE \" + counterStream.id);\n                    // })\n                    // .on(\"error\", () => {\n                    //     debug(\"ZIP ERROR \" + counterStream.id);\n                    // })\n                    // .on(\"pipe\", () => {\n                    //     debug(\"ZIP PIPE \" + counterStream.id);\n                    // })\n                    // .on(\"unpipe\", () => {\n                    //     debug(\"ZIP UNPIPE \" + counterStream.id);\n                    // })\n                    // .on(\"drain\", () => {\n                    //     debug(\"ZIP DRAIN \" + counterStream.id);\n                    // })\n                    // .pipe(counterStream)\n                    // .on(\"progress\", function f() {\n                    //     debug(\"CounterPassThroughStream PROGRESS: \" +\n                    //         (this as CounterPassThroughStream).id +\n                    //         \" -- \" + (this as CounterPassThroughStream).bytesReceived);\n                    // })\n                    // .on(\"end\", function f() {\n                    //     debug(\"CounterPassThroughStream END: \" +\n                    //         (this as CounterPassThroughStream).id);\n                    // })\n                    // .on(\"close\", function f() {\n                    //     debug(\"CounterPassThroughStream CLOSE: \" +\n                    //         (this as CounterPassThroughStream).id);\n                    // })\n                    // .once(\"finish\", function f() {\n                    //     debug(\"CounterPassThroughStream FINISH: \" +\n                    //         (this as CounterPassThroughStream).id +\n                    //         \" -- \" + (this as CounterPassThroughStream).bytesReceived);\n                    // })\n                    // .on(\"error\", function f() {\n                    //     debug(\"CounterPassThroughStream ERROR: \" +\n                    //         (this as CounterPassThroughStream).id);\n                    // })\n                    // .on(\"pipe\", function f() {\n                    //     debug(\"CounterPassThroughStream PIPE: \" +\n                    //         (this as CounterPassThroughStream).id);\n                    // })\n                    // .on(\"unpipe\", function f() {\n                    //     debug(\"CounterPassThroughStream UNPIPE: \" +\n                    //         (this as CounterPassThroughStream).id);\n                    // })\n                    // // .on(\"drain\", function f() {\n                    // //     debug(\"CounterPassThroughStream DRAIN: \" +\n                    // //         (this as CounterPassThroughStream).id);\n                    // // })\n                    .pipe(res)\n                    // .on(\"finish\", () => {\n                    //     debug(\"RES FINISH \" + counterStream.id);\n                    // })\n                    // .on(\"end\", () => {\n                    //     debug(\"RES END \" + counterStream.id);\n                    // })\n                    .on(\"close\", () => {\n                        // debug(\"RES CLOSE \" + counterStream.id);\n\n                        res.end();\n\n                        // counterStream.unpipe(res);\n                        // counterStream.end();\n                        // if (zipStream_) {\n                        //     zipStream_.stream.unpipe(counterStream);\n                        // }\n\n                        // zipStream.close();\n                    })\n                    // .on(\"error\", () => {\n                    //     debug(\"RES ERROR \" + counterStream.id);\n                    // })\n                    // .on(\"pipe\", () => {\n                    //     debug(\"RES PIPE \" + counterStream.id);\n                    // })\n                    // .on(\"unpipe\", () => {\n                    //     debug(\"RES UNPIPE \" + counterStream.id);\n                    // })\n                    // .on(\"drain\", () => {\n                    //     debug(\"RES DRAIN \" + counterStream.id);\n                    // })\n                    ;\n            }\n        });\n\n    routerPathBase64.param(\"asset\", (req, _res, next, value, _name) => {\n        (req as IRequestPayloadExtension).asset = value;\n        next();\n    });\n\n    routerPathBase64.use(\"/:\" + _pathBase64 + \"/:\" + _asset + \"(*)\", routerAssets);\n}\n"]}