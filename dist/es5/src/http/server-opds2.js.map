{"version":3,"file":"server-opds2.js","sourceRoot":"","sources":["../../../../src/http/server-opds2.ts"],"names":[],"mappings":"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","sourcesContent":["import * as crypto from \"crypto\";\r\n\r\nimport { OPDSLink } from \"@opds/opds2/opds2-link\";\r\nimport { isHTTP } from \"@utils/http/UrlUtils\";\r\nimport { sortObject, traverseJsonObjects } from \"@utils/JsonUtils\";\r\nimport * as css2json from \"css2json\";\r\nimport * as debug_ from \"debug\";\r\nimport * as express from \"express\";\r\nimport * as jsonMarkup from \"json-markup\";\r\nimport { JSON as TAJSON } from \"ta-json\";\r\n\r\nimport { Server } from \"./server\";\r\nimport { trailingSlashRedirect } from \"./server-trailing-slash-redirect\";\r\n\r\nconst debug = debug_(\"r2:server:opds2\");\r\n\r\nexport function serverOPDS2(server: Server, topRouter: express.Application) {\r\n\r\n    // https://github.com/mafintosh/json-markup/blob/master/style.css\r\n    const jsonStyle = `\r\n.json-markup {\r\n    line-height: 17px;\r\n    font-size: 13px;\r\n    font-family: monospace;\r\n    white-space: pre;\r\n}\r\n.json-markup-key {\r\n    font-weight: bold;\r\n}\r\n.json-markup-bool {\r\n    color: firebrick;\r\n}\r\n.json-markup-string {\r\n    color: green;\r\n}\r\n.json-markup-null {\r\n    color: gray;\r\n}\r\n.json-markup-number {\r\n    color: blue;\r\n}\r\n`;\r\n\r\n    const routerOPDS2 = express.Router({ strict: false });\r\n    // routerOPDS2.use(morgan(\"combined\"));\r\n\r\n    routerOPDS2.get([\"/\", \"/show/:jsonPath?\"],\r\n        (req: express.Request, res: express.Response) => {\r\n\r\n            const isShow = req.url.indexOf(\"/show\") >= 0 || req.query.show;\r\n            if (!req.params.jsonPath && req.query.show) {\r\n                req.params.jsonPath = req.query.show;\r\n            }\r\n\r\n            const isCanonical = req.query.canonical && req.query.canonical === \"true\";\r\n\r\n            const isSecureHttp = req.secure ||\r\n                req.protocol === \"https\" ||\r\n                req.get(\"X-Forwarded-Proto\") === \"https\"\r\n                // (req.headers.host && req.headers.host.indexOf(\"now.sh\") >= 0) ||\r\n                // (req.hostname && req.hostname.indexOf(\"now.sh\") >= 0)\r\n                ;\r\n\r\n            const rootUrl = (isSecureHttp ? \"https://\" : \"http://\")\r\n                + req.headers.host;\r\n            const selfURL = rootUrl + \"/opds2/publications.json\";\r\n\r\n            const feed = server.publicationsOPDS();\r\n            if (!feed) {\r\n                const err = \"Publications OPDS2 feed not available yet, try again later.\";\r\n                debug(err);\r\n                res.status(503).send(\"<html><body><p>Resource temporarily unavailable</p><p>\"\r\n                    + err + \"</p></body></html>\");\r\n                return;\r\n            }\r\n\r\n            if (!feed.findFirstLinkByRel(\"self\")) {\r\n                feed.Links = [];\r\n                const selfLink = new OPDSLink();\r\n                selfLink.Href = selfURL;\r\n                selfLink.TypeLink = \"application/opds+json\";\r\n                selfLink.AddRel(\"self\");\r\n                feed.Links.push(selfLink);\r\n            }\r\n\r\n            function absoluteURL(href: string): string {\r\n                return rootUrl + \"/pub/\" + href;\r\n            }\r\n\r\n            function absolutizeURLs(jsonObj: any) {\r\n                traverseJsonObjects(jsonObj,\r\n                    (obj) => {\r\n                        if (obj.href && typeof obj.href === \"string\"\r\n                            && !isHTTP(obj.href)) {\r\n                            // obj.href_ = obj.href;\r\n                            obj.href = absoluteURL(obj.href);\r\n                        }\r\n                    });\r\n            }\r\n\r\n            if (isShow) {\r\n                let objToSerialize: any = null;\r\n\r\n                if (req.params.jsonPath) {\r\n                    switch (req.params.jsonPath) {\r\n\r\n                        case \"all\": {\r\n                            objToSerialize = feed;\r\n                            break;\r\n                        }\r\n                        case \"metadata\": {\r\n                            objToSerialize = feed.Metadata;\r\n                            break;\r\n                        }\r\n                        case \"links\": {\r\n                            objToSerialize = feed.Links;\r\n                            break;\r\n                        }\r\n                        case \"publications\": {\r\n                            objToSerialize = feed.Publications;\r\n                            break;\r\n                        }\r\n                        default: {\r\n                            objToSerialize = null;\r\n                        }\r\n                    }\r\n                } else {\r\n                    objToSerialize = feed;\r\n                }\r\n\r\n                if (!objToSerialize) {\r\n                    objToSerialize = {};\r\n                }\r\n\r\n                const jsonObj = TAJSON.serialize(objToSerialize);\r\n\r\n                absolutizeURLs(jsonObj);\r\n\r\n                // const jsonStr = global.JSON.stringify(jsonObj, null, \"    \");\r\n\r\n                // // breakLength: 100  maxArrayLength: undefined\r\n                // const dumpStr = util.inspect(objToSerialize,\r\n                //     { showHidden: false, depth: 1000, colors: false, customInspect: true });\r\n\r\n                const jsonPretty = jsonMarkup(jsonObj, css2json(jsonStyle));\r\n\r\n                res.status(200).send(\"<html><body>\" +\r\n                    \"<h1>OPDS2 JSON feed</h1>\" +\r\n                    \"<hr><p><pre>\" + jsonPretty + \"</pre></p>\" +\r\n                    // \"<hr><p><pre>\" + jsonStr + \"</pre></p>\" +\r\n                    // \"<p><pre>\" + dumpStr + \"</pre></p>\" +\r\n                    \"</body></html>\");\r\n            } else {\r\n                server.setResponseCORS(res);\r\n                res.set(\"Content-Type\", \"application/opds+json; charset=utf-8\");\r\n\r\n                const publicationsJsonObj = TAJSON.serialize(feed);\r\n\r\n                absolutizeURLs(publicationsJsonObj);\r\n\r\n                const publicationsJsonStr = isCanonical ?\r\n                    global.JSON.stringify(sortObject(publicationsJsonObj), null, \"\") :\r\n                    global.JSON.stringify(publicationsJsonObj, null, \"  \");\r\n\r\n                const checkSum = crypto.createHash(\"sha256\");\r\n                checkSum.update(publicationsJsonStr);\r\n                const hash = checkSum.digest(\"hex\");\r\n\r\n                const match = req.header(\"If-None-Match\");\r\n                if (match === hash) {\r\n                    debug(\"publications.json cache\");\r\n                    res.status(304); // StatusNotModified\r\n                    res.end();\r\n                    return;\r\n                }\r\n\r\n                res.setHeader(\"ETag\", hash);\r\n                // res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\r\n\r\n                res.status(200).send(publicationsJsonStr);\r\n            }\r\n        });\r\n\r\n    const routerOPDS2_ = express.Router({ strict: false });\r\n    // routerOPDS2_.use(morgan(\"combined\"));\r\n\r\n    routerOPDS2_.use(trailingSlashRedirect);\r\n\r\n    routerOPDS2_.get(\"/\", (req: express.Request, res: express.Response) => {\r\n\r\n        const i = req.originalUrl.indexOf(\"?\");\r\n\r\n        let pathWithoutQuery = req.originalUrl;\r\n        if (i >= 0) {\r\n            pathWithoutQuery = pathWithoutQuery.substr(0, i);\r\n        }\r\n\r\n        let redirect = pathWithoutQuery +\r\n            (pathWithoutQuery.substr(-1) === \"/\" ? \"\" : \"/\") +\r\n            \"publications.json/show\";\r\n        if (i >= 0) {\r\n            redirect += req.originalUrl.substr(i);\r\n        }\r\n\r\n        // No need for CORS with \"show\" URL redirect\r\n        // server.setResponseCORS(res);\r\n\r\n        debug(`REDIRECT: ${req.originalUrl} ==> ${redirect}`);\r\n        res.redirect(301, redirect);\r\n    });\r\n\r\n    routerOPDS2_.use(\"/publications.json\", routerOPDS2);\r\n\r\n    topRouter.use(\"/opds2\", routerOPDS2_);\r\n}\r\n"]}