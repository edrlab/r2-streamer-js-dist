{"version":3,"file":"server-cli.js","sourceRoot":"","sources":["../../../../src/http/server-cli.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as debug_ from \"debug\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport * as watcher from \"@parcel/watcher\";\n\nimport { setLcpNativePluginPath } from \"@r2-lcp-js/parser/epub/lcp\";\nimport { initGlobalConverters_OPDS } from \"@r2-opds-js/opds/init-globals\";\nimport {\n    initGlobalConverters_GENERIC, initGlobalConverters_SHARED,\n} from \"@r2-shared-js/init-globals\";\nimport { EPUBis, isEPUBlication } from \"@r2-shared-js/parser/epub\";\n\nimport { MAX_PREFETCH_LINKS, Server } from \"./server\";\n\n// import * as filehound from \"filehound\";\n\ninitGlobalConverters_OPDS();\ninitGlobalConverters_SHARED();\ninitGlobalConverters_GENERIC();\n\nsetLcpNativePluginPath(path.join(process.cwd(), \"LCP\", \"lcp.node\"));\n\nconst debug = debug_(\"r2:streamer#http/server-cli\");\n\ndebug(`process.cwd(): ${process.cwd()}`);\ndebug(`__dirname: ${__dirname}`);\n\nconst args = process.argv.slice(2);\ndebug(\"process.argv.slice(2): %o\", args);\n\nif (!args[0]) {\n    debug(\"FILEPATH ARGUMENT IS MISSING.\");\n    process.exit(1);\n}\n\nconst argPath = args[0].trim();\nlet filePath = argPath;\ndebug(`path: ${filePath}`);\n\nif (!fs.existsSync(filePath)) {\n    filePath = path.join(__dirname, argPath);\n    debug(`path: ${filePath}`);\n\n    if (!fs.existsSync(filePath)) {\n        filePath = path.join(process.cwd(), argPath);\n        debug(`path: ${filePath}`);\n\n        if (!fs.existsSync(filePath)) {\n            debug(\"FILEPATH DOES NOT EXIST.\");\n            process.exit(1);\n        }\n    }\n}\n\nfilePath = fs.realpathSync(filePath);\ndebug(`path (normalized): ${filePath}`);\n\nconst stats = fs.lstatSync(filePath);\n\nif (!stats.isFile() && !stats.isDirectory()) {\n    debug(\"FILEPATH MUST BE FILE OR DIRECTORY.\");\n    process.exit(1);\n}\n\nlet maxPrefetchLinks = MAX_PREFETCH_LINKS;\nif (args[1]) {\n    args[1] = args[1].trim();\n    if (args[1].length && args[1][0] === \"-\") {\n        maxPrefetchLinks = -1;\n    } else {\n        try {\n            maxPrefetchLinks = parseInt(args[1], 10);\n        } catch (err) {\n            debug(err);\n        }\n        if (isNaN(maxPrefetchLinks)) {\n            maxPrefetchLinks = MAX_PREFETCH_LINKS;\n        }\n    }\n}\ndebug(`maxPrefetchLinks: ${maxPrefetchLinks}`);\n\nconst doWatch = process.env.STREAMER_WATCH === \"1\";\n\nconst isAnEPUB = isEPUBlication(filePath);\n\nif (stats.isDirectory() && (isAnEPUB !== EPUBis.LocalExploded)) {\n    debug(\"Analysing directory...\");\n\n    const isFileAccepted = (pubPath: string) => {\n        return /((\\.epub3?)|(\\.cbz)|(\\.audiobook)|(\\.lcpaudiobook)|(\\.lcpa)|(\\.divina)|(\\.lcpdivina))$/i.test(pubPath)\n            ||\n            (\n            /_manifest\\.json$/.test(pubPath)\n            &&\n            fs.existsSync(pubPath.replace(/_manifest\\.json$/, \"\"))\n            );\n    };\n\n    // tslint:disable-next-line:no-floating-promises\n    (async () => {\n        // const files: string[] = await filehound.create()\n        //     .discard(\"node_modules\")\n        //     .depth(5)\n        //     .paths(filePath)\n        //     .ext([\".epub\", \".epub3\", \".cbz\", \".audiobook\", \".lcpaudiobook\", \".lcpa\", \".divina\", \".lcpdivina\"])\n        //     .find();\n        const files = fs.readdirSync(filePath, { withFileTypes: true })\n            .filter((f) => f.isFile())\n            .map((f) => path.join(filePath, f.name))\n            .filter((pubPath) => {\n                return isFileAccepted(pubPath);\n            });\n\n        const server = new Server({\n            maxPrefetchLinks,\n            enableSignedExpiry: true,\n        });\n        server.preventRobots();\n        server.addPublications(files);\n        const url = await server.start(0, false);\n        debug(url);\n\n        if (!doWatch) {\n            return;\n        }\n        debug(\"WATCHER: \", filePath);\n\n        // const watcherSubscription =\n        await watcher.subscribe(filePath, (err, events) => {\n\n            if (err) {\n                debug(\"WATCHER: \", filePath, err);\n                return;\n            }\n\n            // Can be used for temporarily pausing the watch action\n            const doWatchLive = process.env.STREAMER_WATCH === \"1\";\n            if (!doWatchLive) {\n                return;\n            }\n\n            const filesToAdd: string[] = [];\n            const filesToRemove: string[] = [];\n\n            for (const event of events) {\n                const fPath = event.path;\n                debug(`WATCHER: ${fPath} => ${event.type}`);\n\n                const fsStat = event.type === \"delete\" ? undefined : fs.lstatSync(fPath);\n                if (fsStat && (!fsStat.isFile() || !isFileAccepted(fPath))) {\n                    continue;\n                }\n\n                if (event.type === \"create\") {\n                    filesToAdd.push(fPath);\n\n                    if (!/_manifest\\.json$/.test(fPath)) {\n                        const s = `${fPath}_manifest.json`;\n                        if (fs.existsSync(s)) {\n                            if (!server.getPublications().includes(s) && !filesToAdd.includes(s)) {\n                                filesToAdd.push(s);\n                            }\n                        }\n                    }\n                } else if (event.type === \"update\") {\n                    if (!filesToRemove.includes(fPath)) {\n                        filesToRemove.push(fPath);\n                    }\n                    if (!filesToAdd.includes(fPath)) {\n                        filesToAdd.push(fPath);\n                    }\n                } else if (event.type === \"delete\") {\n                    filesToRemove.push(fPath);\n\n                    if (!/_manifest\\.json$/.test(fPath)) {\n                        const s = `${fPath}_manifest.json`;\n                        // fs.existsSync(s)\n                        if (server.getPublications().includes(s) && !filesToRemove.includes(s)) {\n                            filesToRemove.push(s);\n                        }\n                    }\n                }\n            }\n\n            try {\n\n                debug(\"WATCHER: REMOVE => \", filesToRemove);\n                server.removePublications(filesToRemove);\n\n                debug(\"WATCHER: ADD => \", filesToAdd);\n                server.addPublications(filesToAdd);\n\n            } catch (ex) {\n                debug(\"WATCHER: \", ex);\n            }\n        });\n        // await watcherSubscription.unsubscribe();\n    })();\n\n    // filePaths = fs.readdirSync(filePath);\n\n    // filePaths = filePaths.filter((filep) => {\n    //     const fileName = path.basename(filep);\n    //     const ext = path.extname(fileName);\n    //     return (/((\\.epub3?)|(\\.cbz))$/i.test(ext)) &&\n    //         fs.lstatSync(path.join(filePath, filep)).isFile();\n    // });\n\n    // filePaths = filePaths.map((filep) => {\n    //     return path.join(filePath, filep);\n    // });\n\n    // debug(\"Publications:\");\n    // filePaths.forEach((filep) => {\n    //     debug(filep);\n    // });\n} else {\n    // tslint:disable-next-line:no-floating-promises\n    (async () => {\n        const server = new Server({\n            maxPrefetchLinks,\n            enableSignedExpiry: true,\n        });\n        server.preventRobots();\n        server.addPublications([filePath]);\n        const url = await server.start(0, false);\n        debug(url);\n    })();\n}\n"]}