{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../../src/http/server.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as child_process from \"child_process\";\nimport * as debug_ from \"debug\";\nimport * as express from \"express\";\nimport * as fs from \"fs\";\nimport * as http from \"http\";\nimport * as https from \"https\";\nimport * as path from \"path\";\nimport { tmpNameSync } from \"tmp\";\n\nimport { TaJsonDeserialize } from \"@r2-lcp-js/serializable\";\nimport { OPDSFeed } from \"@r2-opds-js/opds/opds2/opds2\";\nimport { Publication } from \"@r2-shared-js/models/publication\";\nimport { PublicationParsePromise } from \"@r2-shared-js/parser/publication-parser\";\nimport { encodeURIComponent_RFC3986 } from \"@r2-utils-js/_utils/http/UrlUtils\";\nimport { zipLoadPromise } from \"@r2-utils-js/_utils/zip/zipFactory\";\n\nimport { CertificateData, generateSelfSignedData } from \"../utils/self-signed\";\nimport { serverAssets } from \"./server-assets\";\nimport { serverLCPLSD_show } from \"./server-lcp-lsd-show\";\nimport { serverManifestJson } from \"./server-manifestjson\";\nimport { serverMediaOverlays } from \"./server-mediaoverlays\";\nimport { serverOPDS_browse_v1 } from \"./server-opds-browse-v1\";\nimport { serverOPDS_browse_v2 } from \"./server-opds-browse-v2\";\nimport { serverOPDS_convert_v1_to_v2 } from \"./server-opds-convert-v1-to-v2\";\nimport { serverOPDS_local_feed } from \"./server-opds-local-feed\";\nimport { serverPub } from \"./server-pub\";\nimport { serverRoot } from \"./server-root\";\nimport { IHTTPHeaderNameValue, serverSecure, serverSecureHTTPHeader } from \"./server-secure\";\nimport { serverRemotePub } from \"./server-url\";\nimport { serverVersion } from \"./server-version\";\n\nconst debug = debug_(\"r2:streamer#http/server\");\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninterface IPathPublicationMap { [key: string]: any; }\n\nexport interface ServerData extends CertificateData {\n    urlScheme: string;\n    urlHost: string;\n    urlPort: number;\n}\n\nexport interface IServerOptions {\n    disableReaders?: boolean;\n    disableDecryption?: boolean; /* excludes obfuscated fonts */\n    disableRemotePubUrl?: boolean;\n    disableOPDS?: boolean;\n    enableSignedExpiry?: boolean;\n    maxPrefetchLinks?: number;\n}\n\n// this ceiling value seems very arbitrary ... what would be a reasonable default value?\n// ... based on what metric, any particular HTTP server or client implementation?\nexport const MAX_PREFETCH_LINKS = 10;\n\nexport class Server {\n    public readonly disableReaders: boolean;\n    public readonly disableDecryption: boolean;\n    public readonly disableRemotePubUrl: boolean;\n    public readonly disableOPDS: boolean;\n    public readonly enableSignedExpiry: boolean;\n    public readonly maxPrefetchLinks: number;\n\n    public readonly lcpBeginToken = \"*-\";\n    public readonly lcpEndToken = \"-*\";\n\n    private readonly publications: string[];\n    private publicationsOPDSfeed: OPDSFeed | undefined;\n    private publicationsOPDSfeedNeedsUpdate: boolean;\n    private readonly pathPublicationMap: IPathPublicationMap;\n    private creatingPublicationsOPDS: boolean;\n    private readonly opdsJsonFilePath: string;\n\n    private readonly expressApp: express.Application;\n\n    private httpServer: http.Server | undefined;\n    private httpsServer: https.Server | undefined;\n\n    private serverData: ServerData | undefined;\n\n    constructor(options?: IServerOptions) {\n\n        this.disableReaders = !!(options?.disableReaders);\n        this.disableDecryption = !!(options?.disableDecryption);\n        this.disableRemotePubUrl = !!(options?.disableRemotePubUrl);\n        this.disableOPDS = !!(options?.disableOPDS);\n        this.enableSignedExpiry = !!(options?.enableSignedExpiry);\n\n        // note: zero not allowed (fallback to default MAX_PREFETCH_LINKS). use -1 to disable ceiling value.\n        this.maxPrefetchLinks = options?.maxPrefetchLinks ? options.maxPrefetchLinks : MAX_PREFETCH_LINKS;\n\n        this.publications = [];\n        this.pathPublicationMap = {};\n        this.publicationsOPDSfeed = undefined;\n        this.publicationsOPDSfeedNeedsUpdate = true;\n        this.creatingPublicationsOPDS = false;\n\n        this.opdsJsonFilePath = tmpNameSync({ prefix: \"readium2-OPDS2-\", postfix: \".json\" });\n\n        this.expressApp = express();\n        // this.expressApp.enable('strict routing');\n\n        serverSecure(this, this.expressApp);\n\n        // https://expressjs.com/en/4x/api.html#express.static\n        const staticOptions = {\n            etag: false,\n        };\n        if (!this.disableReaders) {\n            this.expressApp.use(\"/readerNYPL\", express.static(\"misc/readers/reader-NYPL\", staticOptions));\n            this.expressApp.use(\"/readerHADRIEN\", express.static(\"misc/readers/reader-HADRIEN\", staticOptions));\n        }\n\n        serverRoot(this, this.expressApp);\n        serverVersion(this, this.expressApp);\n\n        if (!this.disableRemotePubUrl) {\n            serverRemotePub(this, this.expressApp);\n            serverLCPLSD_show(this, this.expressApp);\n        }\n        if (!this.disableOPDS) {\n            serverOPDS_browse_v1(this, this.expressApp);\n            serverOPDS_browse_v2(this, this.expressApp);\n            serverOPDS_local_feed(this, this.expressApp);\n            serverOPDS_convert_v1_to_v2(this, this.expressApp);\n        }\n\n        const routerPathBase64: express.Router = serverPub(this, this.expressApp);\n        serverManifestJson(this, routerPathBase64);\n        serverMediaOverlays(this, routerPathBase64);\n        serverAssets(this, routerPathBase64);\n    }\n\n    // TODO: HTTP header `X-Robots-Tag` === `none`?\n    public preventRobots() {\n        this.expressApp.get(\"/robots.txt\", (_req: express.Request, res: express.Response) => {\n\n            const robotsTxt = `User-agent: *\nDisallow: /\n`;\n            res.header(\"Content-Type\", \"text/plain\");\n            res.status(200).send(robotsTxt);\n        });\n    }\n\n    public expressUse(pathf: string, func: express.Handler) {\n        this.expressApp.use(pathf, func);\n    }\n\n    public expressGet(paths: string[], func: express.Handler) {\n        this.expressApp.get(paths, func);\n    }\n\n    public isStarted(): boolean {\n        return (typeof this.serverInfo() !== \"undefined\") &&\n            (typeof this.httpServer !== \"undefined\") ||\n            (typeof this.httpsServer !== \"undefined\");\n    }\n\n    public isSecured(): boolean {\n        return (typeof this.serverInfo() !== \"undefined\") &&\n            (typeof this.httpsServer !== \"undefined\");\n    }\n\n    public getSecureHTTPHeader(url: string): IHTTPHeaderNameValue | undefined {\n        return serverSecureHTTPHeader(this, url);\n    }\n\n    public async start(port: number, secure: boolean): Promise<ServerData> {\n\n        if (this.isStarted()) {\n            return Promise.resolve(this.serverInfo() as ServerData);\n        }\n\n        let envPort = 0;\n        try {\n            envPort = process.env.PORT ? parseInt(process.env.PORT as string, 10) : 0;\n        } catch (err) {\n            debug(err);\n            envPort = 0;\n        }\n        const p = port || envPort || 3000;\n        debug(`PORT: ${port} || ${envPort} || 3000 => ${p}`);\n\n        if (secure) {\n            this.httpServer = undefined;\n\n            return new Promise<ServerData>(async (resolve, reject) => {\n                let certData: CertificateData | undefined;\n                try {\n                    certData = await generateSelfSignedData();\n                } catch (err) {\n                    debug(err);\n                    reject(\"err\");\n                    return;\n                }\n\n                this.httpsServer = https.createServer({ key: certData.private, cert: certData.cert },\n                    this.expressApp).listen(p, () => {\n\n                        this.serverData = {\n                            ...certData,\n                            urlHost: \"127.0.0.1\",\n                            urlPort: p, // this.httpsServer.address().port\n                            urlScheme: \"https\",\n                        } as ServerData;\n                        resolve(this.serverData);\n                    });\n            });\n        } else {\n            this.httpsServer = undefined;\n\n            return new Promise<ServerData>((resolve, _reject) => {\n                this.httpServer = http.createServer(this.expressApp).listen(p, () => {\n\n                    this.serverData = {\n                        urlHost: \"127.0.0.1\",\n                        urlPort: p, // this.httpsServer.address().port\n                        urlScheme: \"http\",\n                    } as ServerData;\n                    resolve(this.serverData);\n                });\n                // this.httpServer = this.expressApp.listen(p, () => {\n                //     debug(`http://localhost:${p}`);\n                // });\n            });\n        }\n    }\n\n    public stop() {\n        if (this.isStarted()) {\n            if (this.httpServer) {\n                this.httpServer.close();\n                this.httpServer = undefined;\n            }\n            if (this.httpsServer) {\n                this.httpsServer.close();\n                this.httpsServer = undefined;\n            }\n            this.serverData = undefined;\n            this.uncachePublications();\n        }\n    }\n\n    public serverInfo(): ServerData | undefined {\n        return this.serverData;\n    }\n\n    public serverUrl(): string | undefined {\n        if (!this.isStarted()) {\n            return undefined;\n        }\n        const info = this.serverInfo();\n        if (!info) {\n            return undefined;\n        }\n\n        // This is important, because browsers collapse the standard HTTP and HTTPS ports,\n        // and we don't normalise this elsewhere in consumer code!\n        // (which means critical URL prefix matching / syntax comparisons would fail otherwise :(\n        if (info.urlPort === 443 || info.urlPort === 80) {\n            return `${info.urlScheme}://${info.urlHost}`;\n        }\n        return `${info.urlScheme}://${info.urlHost}:${info.urlPort}`;\n\n        // const port = this.httpServer ? this.httpServer.address().port :\n        //     (this.httpsServer ? this.httpsServer.address().port : 0);\n        // return this.isStarted() ?\n        //     `${this.httpsServer ? \"https:\" : \"http:\"}//127.0.0.1:${port}` :\n        //     undefined;\n    }\n\n    public setResponseCacheHeaders(res: express.Response, enableCaching: boolean) {\n\n        if (enableCaching) {\n            res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\n        } else {\n            res.setHeader(\"Cache-Control\", \"no-cache, no-store, must-revalidate\");\n            res.setHeader(\"Pragma\", \"no-cache\");\n            res.setHeader(\"Expires\", \"0\");\n        }\n    }\n\n    public setResponseCORS(res: express.Response) {\n        res.setHeader(\"Access-Control-Allow-Origin\",\n            \"*\");\n\n        res.setHeader(\"Access-Control-Allow-Methods\",\n            \"GET, HEAD, OPTIONS\"); // POST, DELETE, PUT, PATCH\n\n        res.setHeader(\"Access-Control-Allow-Headers\",\n            // tslint:disable-next-line:max-line-length\n            \"Content-Type, Content-Length, Accept-Ranges, Content-Range, Range, Link, Transfer-Encoding, X-Requested-With, Authorization, Accept, Origin, User-Agent, DNT, Cache-Control, Keep-Alive, If-Modified-Since\");\n\n        res.setHeader(\"Access-Control-Expose-Headers\",\n            // tslint:disable-next-line:max-line-length\n            \"Content-Type, Content-Length, Accept-Ranges, Content-Range, Range, Link, Transfer-Encoding, X-Requested-With, Authorization, Accept, Origin, User-Agent, DNT, Cache-Control, Keep-Alive, If-Modified-Since\");\n    }\n\n    public addPublications(pubs: string[]): string[] {\n        pubs.forEach((pub) => {\n            if (this.publications.indexOf(pub) < 0) {\n                this.publicationsOPDSfeedNeedsUpdate = true;\n                this.publications.push(pub);\n            }\n        });\n\n        return pubs.map((pub) => {\n            const pubid = encodeURIComponent_RFC3986(Buffer.from(pub).toString(\"base64\"));\n            return `/pub/${pubid}/manifest.json`;\n        });\n    }\n\n    public removePublications(pubs: string[]): string[] {\n        pubs.forEach((pub) => {\n            this.uncachePublication(pub);\n            const i = this.publications.indexOf(pub);\n            if (i >= 0) {\n                this.publicationsOPDSfeedNeedsUpdate = true;\n                this.publications.splice(i, 1);\n            }\n        });\n\n        return pubs.map((pub) => {\n            const pubid = encodeURIComponent_RFC3986(Buffer.from(pub).toString(\"base64\"));\n            return `/pub/${pubid}/manifest.json`;\n        });\n    }\n\n    public getPublications(): string[] {\n        return this.publications;\n    }\n\n    public async loadOrGetCachedPublication(filePath: string): Promise<Publication> {\n\n        let publication = this.cachedPublication(filePath);\n        if (!publication) {\n\n            // const fileName = path.basename(pathBase64Str);\n            // const ext = path.extname(fileName);\n\n            if (filePath.endsWith(\"_manifest.json\")) {\n                try {\n                    const zip = await zipLoadPromise(filePath.replace(/_manifest\\.json$/, \"\"));\n                    const publicationJsonStr = fs.readFileSync(filePath, { encoding: \"utf8\" });\n                    const publicationJsonObj = global.JSON.parse(publicationJsonStr);\n\n                    publication = TaJsonDeserialize(publicationJsonObj, Publication);\n\n                    publication.AddToInternal(\"filename\", path.basename(filePath));\n\n                    publication.AddToInternal(\"type\", \"daisy\");\n                    publication.AddToInternal(\"zip\", zip);\n                } catch (err) {\n                    debug(err);\n                    return Promise.reject(err);\n                }\n            } else {\n                try {\n                    publication = await PublicationParsePromise(filePath);\n                } catch (err) {\n                    debug(err);\n                    return Promise.reject(err);\n                }\n            }\n\n            if (!publication) {\n                return Promise.reject(\"!PUBLICATION??\");\n            }\n\n            this.cachePublication(filePath, publication);\n        }\n        // return Promise.resolve(publication);\n        return publication;\n    }\n\n    public isPublicationCached(filePath: string): boolean {\n        return typeof this.cachedPublication(filePath) !== \"undefined\";\n    }\n\n    public cachedPublication(filePath: string): Publication | undefined {\n        return this.pathPublicationMap[filePath];\n    }\n\n    public cachePublication(filePath: string, pub: Publication) {\n        // TODO: implement LRU caching algorithm? Anything smarter than this will do!\n        if (!this.isPublicationCached(filePath)) {\n            this.pathPublicationMap[filePath] = pub;\n        }\n    }\n\n    public uncachePublication(filePath: string) {\n        if (this.isPublicationCached(filePath)) {\n            const pub = this.cachedPublication(filePath);\n            if (pub) {\n                try {\n                    pub.freeDestroy();\n                } catch (ex) {\n                    debug(ex);\n                }\n            }\n            this.pathPublicationMap[filePath] = undefined;\n            delete this.pathPublicationMap[filePath];\n        }\n    }\n\n    public uncachePublications() {\n        Object.keys(this.pathPublicationMap).forEach((filePath) => {\n            this.uncachePublication(filePath);\n        });\n    }\n\n    public publicationsOPDS(): OPDSFeed | undefined {\n\n        if (this.publicationsOPDSfeedNeedsUpdate) {\n            this.publicationsOPDSfeed = undefined;\n            if (fs.existsSync(this.opdsJsonFilePath)) {\n                fs.unlinkSync(this.opdsJsonFilePath);\n            }\n        }\n\n        if (this.publicationsOPDSfeed) {\n            return this.publicationsOPDSfeed;\n        }\n\n        debug(`OPDS2.json => ${this.opdsJsonFilePath}`);\n        if (!fs.existsSync(this.opdsJsonFilePath)) {\n            if (!this.creatingPublicationsOPDS) {\n                this.creatingPublicationsOPDS = true;\n\n                this.publicationsOPDSfeedNeedsUpdate = false;\n\n                const jsFile = path.join(__dirname, \"opds2-create-cli.js\");\n                const args = [jsFile, this.opdsJsonFilePath];\n                this.publications.forEach((pub) => {\n                    const filePathBase64 = encodeURIComponent_RFC3986(Buffer.from(pub).toString(\"base64\"));\n                    args.push(filePathBase64);\n                });\n                // debug(\"SPAWN OPDS2 create: %o\", args);\n                debug(`SPAWN OPDS2-create: ${args[0]}`);\n\n                const child = child_process.spawn(\"node\", args, {\n                    cwd: process.cwd(),\n                    // detached: true,\n                    env: process.env,\n                    // stdio: [\"ignore\"],\n                })\n                    // .unref()\n                    ;\n                child.stdout.on(\"data\", (data) => {\n                    debug(data.toString());\n                });\n                child.stderr.on(\"data\", (data) => {\n                    debug(data.toString());\n                });\n            }\n            return undefined;\n        }\n        this.creatingPublicationsOPDS = false;\n        const jsonStr = fs.readFileSync(this.opdsJsonFilePath, { encoding: \"utf8\" });\n        if (!jsonStr) {\n            return undefined;\n        }\n        const json = global.JSON.parse(jsonStr);\n\n        this.publicationsOPDSfeed = TaJsonDeserialize<OPDSFeed>(json, OPDSFeed);\n        return this.publicationsOPDSfeed;\n    }\n}\n"]}