{"version":3,"file":"server-opds-convert-v1-to-v2.js","sourceRoot":"","sources":["../../../../src/http/server-opds-convert-v1-to-v2.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as path from \"path\";\n\nimport { convertOpds1ToOpds2 } from \"@opds/converter\";\nimport { OPDS } from \"@opds/opds1/opds\";\nimport { OPDSFeed } from \"@opds/opds2/opds2\";\nimport { encodeURIComponent_RFC3986, ensureAbsolute, isHTTP } from \"@utils/http/UrlUtils\";\nimport { traverseJsonObjects } from \"@utils/JsonUtils\";\nimport { streamToBufferPromise } from \"@utils/stream/BufferUtils\";\nimport { XML } from \"@utils/xml-js-mapper\";\nimport * as css2json from \"css2json\";\nimport * as debug_ from \"debug\";\nimport * as express from \"express\";\nimport * as jsonMarkup from \"json-markup\";\nimport * as morgan from \"morgan\";\nimport * as request from \"request\";\nimport * as requestPromise from \"request-promise-native\";\nimport { JSON as TAJSON } from \"ta-json\";\nimport * as xmldom from \"xmldom\";\n\nimport { jsonSchemaValidate } from \"../utils/json-schema-validate\";\nimport { IRequestPayloadExtension, _urlEncoded } from \"./request-ext\";\nimport { Server } from \"./server\";\nimport { trailingSlashRedirect } from \"./server-trailing-slash-redirect\";\n\nconst debug = debug_(\"r2:streamer#http/server-opds-convert-v1-to-v2\");\n\n// tslint:disable-next-line:variable-name\nexport const serverOPDS_convert_v1_to_v2_PATH = \"/opds-v1-v2-convert\";\nexport function serverOPDS_convert_v1_to_v2(_server: Server, topRouter: express.Application) {\n\n    // https://github.com/mafintosh/json-markup/blob/master/style.css\n    const jsonStyle = `\n.json-markup {\n    line-height: 17px;\n    font-size: 13px;\n    font-family: monospace;\n    white-space: pre;\n}\n.json-markup-key {\n    font-weight: bold;\n}\n.json-markup-bool {\n    color: firebrick;\n}\n.json-markup-string {\n    color: green;\n}\n.json-markup-null {\n    color: gray;\n}\n.json-markup-number {\n    color: blue;\n}\n`;\n\n    // tslint:disable-next-line:variable-name\n    const routerOPDS_convert_v1_to_v2 = express.Router({ strict: false });\n    routerOPDS_convert_v1_to_v2.use(morgan(\"combined\", { stream: { write: (msg: any) => debug(msg) } }));\n\n    routerOPDS_convert_v1_to_v2.use(trailingSlashRedirect);\n\n    routerOPDS_convert_v1_to_v2.get(\"/\", (_req: express.Request, res: express.Response) => {\n\n        let html = \"<html><head>\";\n        html += `<script type=\"text/javascript\">function encodeURIComponent_RFC3986(str) { ` +\n            `return encodeURIComponent(str).replace(/[!'()*]/g, (c) => { ` +\n            `return \"%\" + c.charCodeAt(0).toString(16); }); }` +\n            `function go(evt) {` +\n            `if (evt) { evt.preventDefault(); } var url = ` +\n            `location.origin +` +\n            // `location.protocol + '//' + location.hostname + ` +\n            // `(location.port ? (':' + location.port) : '') + ` +\n            ` '${serverOPDS_convert_v1_to_v2_PATH}/' +` +\n            ` encodeURIComponent_RFC3986(document.getElementById(\"url\").value);` +\n            `location.href = url;}</script>`;\n        html += \"</head>\";\n\n        html += \"<body><h1>OPDS 1 -> 2 converter</h1>\";\n\n        html += `<form onsubmit=\"go();return false;\">` +\n            `<input type=\"text\" name=\"url\" id=\"url\" size=\"80\">` +\n            `<input type=\"submit\" value=\"Go!\"></form>`;\n\n        html += \"</body></html>\";\n\n        res.status(200).send(html);\n    });\n\n    routerOPDS_convert_v1_to_v2.param(\"urlEncoded\", (req, _res, next, value, _name) => {\n        (req as IRequestPayloadExtension).urlEncoded = value;\n        next();\n    });\n\n    routerOPDS_convert_v1_to_v2.get(\"/:\" + _urlEncoded + \"(*)\",\n        async (req: express.Request, res: express.Response) => {\n\n        const reqparams = req.params as IRequestPayloadExtension;\n\n        if (!reqparams.urlEncoded) {\n            reqparams.urlEncoded = (req as IRequestPayloadExtension).urlEncoded;\n        }\n\n        const urlDecoded = reqparams.urlEncoded;\n        // if (urlDecoded.substr(-1) === \"/\") {\n        //     urlDecoded = urlDecoded.substr(0, urlDecoded.length - 1);\n        // }\n        debug(urlDecoded);\n\n        const isSecureHttp = req.secure ||\n            req.protocol === \"https\" ||\n            req.get(\"X-Forwarded-Proto\") === \"https\"\n            // (req.headers.host && req.headers.host.indexOf(\"now.sh\") >= 0) ||\n            // (req.hostname && req.hostname.indexOf(\"now.sh\") >= 0)\n            ;\n        const rootUrl = (isSecureHttp ? \"https://\" : \"http://\")\n            + req.headers.host;\n\n        const failure = (err: any) => {\n            debug(err);\n            res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                + err + \"</p></body></html>\");\n        };\n\n        const success = async (response: request.RequestResponse) => {\n\n            // Object.keys(response.headers).forEach((header: string) => {\n            //     debug(header + \" => \" + response.headers[header]);\n            // });\n\n            if (response.statusCode && (response.statusCode < 200 || response.statusCode >= 300)) {\n                failure(\"HTTP CODE \" + response.statusCode);\n                return;\n            }\n\n            let responseData: Buffer;\n            try {\n                responseData = await streamToBufferPromise(response);\n            } catch (err) {\n                debug(err);\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                    + err + \"</p></body></html>\");\n                return;\n            }\n            const responseStr = responseData.toString(\"utf8\");\n            const responseXml = new xmldom.DOMParser().parseFromString(responseStr);\n            // debug(responseXml);\n            const isEntry = responseXml.documentElement.localName === \"entry\";\n            let opds1: OPDS | undefined;\n            // let opdsEntry: Entry | undefined;\n            let opds2: OPDSFeed | undefined;\n            if (isEntry) {\n                // opdsEntry = XML.deserialize<Entry>(responseXml, Entry);\n\n                const err = \"OPDS Entry as top-level feed, not supported.\";\n                debug(err);\n\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                    + err + \"</p></body></html>\");\n                return;\n            } else {\n                opds1 = XML.deserialize<OPDS>(responseXml, OPDS);\n\n                try {\n                    opds2 = convertOpds1ToOpds2(opds1);\n                    // debug(opds2);\n\n                    // // breakLength: 100  maxArrayLength: undefined\n                    // console.log(util.inspect(opds2,\n                    //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n                } catch (err) {\n                    debug(\"OPDS 1 -> 2 conversion FAILED\");\n                    debug(err);\n\n                    res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                        + err + \"</p></body></html>\");\n                    return;\n                }\n            }\n\n            const funk = (obj: any) => {\n                if ((obj.href && typeof obj.href === \"string\") ||\n                    (obj.Href && typeof obj.Href === \"string\")) {\n\n                    let fullHref = obj.href ? obj.href as string : obj.Href as string;\n\n                    const notFull = !isHTTP(fullHref);\n                    if (notFull) {\n                        fullHref = ensureAbsolute(urlDecoded, fullHref);\n                    }\n\n                    if ((obj.type && obj.type.indexOf(\"application/atom+xml\") >= 0) ||\n                        (obj.Type && obj.Type.indexOf(\"application/atom+xml\") >= 0)) {\n                        obj.__href__ = rootUrl + req.originalUrl.substr(0,\n                            req.originalUrl.indexOf(serverOPDS_convert_v1_to_v2_PATH + \"/\")) +\n                            serverOPDS_convert_v1_to_v2_PATH + \"/\" + encodeURIComponent_RFC3986(fullHref);\n                    } else if (notFull) {\n                        obj.__href__ = fullHref;\n                    }\n                }\n            };\n\n            const jsonObjOPDS1 = TAJSON.serialize(opds1);\n            traverseJsonObjects(jsonObjOPDS1, funk);\n\n            const jsonObjOPDS2 = TAJSON.serialize(opds2);\n\n            let validationStr: string | undefined;\n            const doValidate = !reqparams.jsonPath || reqparams.jsonPath === \"all\";\n            if (doValidate) {\n\n                // // tslint:disable-next-line:no-string-literal\n                // if (jsonObj[\"@context\"] && typeof jsonObj[\"@context\"] === \"string\") {\n                //     jsonObj[\"@context\"] = [ jsonObj[\"@context\"] ];\n                // }\n\n                // // tslint:disable-next-line:no-string-literal\n                // jsonObj[\"@context\"] = jsonObj[\"@context\"][0];\n\n                const jsonSchemasRootpath = path.join(process.cwd(), \"misc/json-schema/opds\");\n                const jsonSchemasNames = [\n                    \"feed\", // must be first!\n                    \"acquisition-object\",\n                    \"feed-metadata\",\n                    \"link\",\n                    \"properties\",\n                    \"publication\",\n                    \"../webpub-manifest/subcollection\",\n                    \"../webpub-manifest/metadata\",\n                    \"../webpub-manifest/link\",\n                    \"../webpub-manifest/contributor\",\n                    \"../webpub-manifest/contributor-object\",\n                ];\n\n                validationStr = jsonSchemaValidate(jsonSchemasRootpath, \"opds\", jsonSchemasNames, jsonObjOPDS2);\n            }\n\n            traverseJsonObjects(jsonObjOPDS2, funk);\n\n            const css = css2json(jsonStyle);\n            const jsonPrettyOPDS1 = jsonMarkup(jsonObjOPDS1, css);\n            const jsonPrettyOPDS2 = jsonMarkup(jsonObjOPDS2, css);\n\n            res.status(200).send(\"<html><body>\" +\n                \"<h1>OPDS2 JSON feed (converted from OPDS1 XML/ATOM)</h1>\" +\n                \"<h2><a href=\\\"\" + urlDecoded + \"\\\">\" + urlDecoded + \"</a></h2>\" +\n                \"<hr>\" +\n                \"<table border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"90%\\\" \" +\n                \"style=\\\"table-layout:fixed;width:90%\\\">\" +\n                \"<thead><tr><th>OPDS1</th><th>OPDS2</th></tr></thead>\" +\n                \"<tbody><tr>\" +\n                \"<td valign=\\\"top\\\" width=\\\"50%\\\">\" +\n                \"<div style=\\\"overflow-x: auto;margin:0;padding:0;width:100%;height:auto;\\\">\" +\n                jsonPrettyOPDS1 + \"</div></td>\" +\n                \"<td valign=\\\"top\\\" width=\\\"50%\\\">\" +\n                \"<div style=\\\"overflow-x: auto;margin:0;padding:0;width:100%;height:auto;\\\">\" +\n                jsonPrettyOPDS2 + \"</div></td>\" +\n                \"</tbody></tr>\" +\n                \"</table>\" +\n                // tslint:disable-next-line:max-line-length\n                (doValidate ? (validationStr ? (\"<hr><p><pre>\" + validationStr + \"</pre></p>\") : (\"<hr><p>JSON SCHEMA OK.</p>\")) : \"\") +\n                // \"<p><pre>\" + jsonPretty + \"</pre></p>\" +\n                // \"<hr><p><pre>\" + jsonStr + \"</pre></p>\" +\n                // \"<p><pre>\" + dumpStr + \"</pre></p>\" +\n                \"</body></html>\");\n        };\n\n        // No response streaming! :(\n        // https://github.com/request/request-promise/issues/90\n        const needsStreamingResponse = true;\n        if (needsStreamingResponse) {\n            request.get({\n                headers: {},\n                method: \"GET\",\n                uri: urlDecoded,\n            })\n                .on(\"response\", success)\n                .on(\"error\", failure);\n        } else {\n            let response: requestPromise.FullResponse;\n            try {\n                // tslint:disable-next-line:await-promise no-floating-promises\n                response = await requestPromise({\n                    headers: {},\n                    method: \"GET\",\n                    resolveWithFullResponse: true,\n                    uri: urlDecoded,\n                });\n            } catch (err) {\n                failure(err);\n                return;\n            }\n\n            await success(response);\n        }\n    });\n\n    topRouter.use(serverOPDS_convert_v1_to_v2_PATH, routerOPDS_convert_v1_to_v2);\n}\n"]}