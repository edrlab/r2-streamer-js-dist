{"version":3,"file":"main.js","sourceRoot":"","sources":["../../../../src/electron/main.ts"],"names":[],"mappings":"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","sourcesContent":["// https://github.com/electron/electron/blob/master/docs/api/sandbox-option.md\n// https://github.com/electron/electron/blob/master/docs/api/process.md\n// https://github.com/electron/electron/blob/master/docs/api/browser-window.md\n// https://github.com/electron/electron/blob/master/docs/api/protocol.md\n// https://github.com/electron/electron/blob/master/docs/api/web-frame.md\n// https://github.com/electron/electron/blob/master/docs/api/web-contents.md\n// https://github.com/electron/electron/blob/master/docs/api/web-request.md\n// https://github.com/electron/electron/blob/master/docs/api/session.md\n// https://github.com/electron/electron/blob/master/docs/api/webview-tag.md\n// https://github.com/electron/electron/blob/master/docs/api/browser-view.md\n// https://github.com/electron/electron/blob/master/docs/api/client-request.md\n// https://github.com/electron/electron/blob/master/docs/api/sandbox-option.md\n// https://github.com/electron/electron/blob/master/docs/api/dialog.md\n// https://github.com/electron/electron/blob/master/docs/api/ipc-renderer.md\n\nimport * as crypto from \"crypto\";\nimport * as express from \"express\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\n\nimport { encodeURIComponent_RFC3986 } from \"@utils/http/UrlUtils\";\nimport * as debug_ from \"debug\";\nimport { BrowserWindow, Menu, app, dialog, ipcMain, session, webContents } from \"electron\";\nimport * as filehound from \"filehound\";\nimport * as portfinder from \"portfinder\";\n\nimport { Publication } from \"@models/publication\";\nimport { Server } from \"../http/server\";\nimport { initGlobals } from \"../init-globals\";\nimport { R2_EVENT_DEVTOOLS, R2_EVENT_LINK, R2_EVENT_TRY_LCP_PASS, R2_EVENT_TRY_LCP_PASS_RES } from \"./common/events\";\nimport { R2_SESSION_WEBVIEW } from \"./common/sessions\";\n\n// import * as mime from \"mime-types\";\n\ninitGlobals();\n\nconst debug = debug_(\"r2:electron:main\");\n\nlet _publicationsServer: Server;\nlet _publicationsServerPort: number;\nlet _publicationsRootUrl: string;\nlet _publicationsFilePaths: string[];\nlet _publicationsUrls: string[];\n\nlet _electronBrowserWindows: Electron.BrowserWindow[];\n\nconst defaultBookPath = fs.realpathSync(path.resolve(\"./misc/epubs/\"));\nlet lastBookPath: string | undefined;\n\n// protocol.registerStandardSchemes([\"epub\", \"file\"], { secure: true });\n\napp.on(\"web-contents-created\", (_evt, wc) => {\n    if (!_electronBrowserWindows || !_electronBrowserWindows.length) {\n        return;\n    }\n    _electronBrowserWindows.forEach((win) => {\n        if (wc.hostWebContents &&\n            wc.hostWebContents.id === win.webContents.id) {\n            debug(\"WEBVIEW web-contents-created\");\n\n            wc.on(\"will-navigate\", (event, url) => {\n                debug(\"webview.getWebContents().on('will-navigate'\");\n\n                // debug(event.sender);\n                debug(url);\n                const wcUrl = event.sender.getURL();\n                debug(wcUrl);\n                event.preventDefault();\n\n                // ipcMain.emit\n                win.webContents.send(R2_EVENT_LINK, url);\n            });\n        }\n    });\n});\n\nfunction openAllDevTools() {\n    for (const wc of webContents.getAllWebContents()) {\n        // if (wc.hostWebContents &&\n        //     wc.hostWebContents.id === electronBrowserWindow.webContents.id) {\n        // }\n        wc.openDevTools();\n    }\n}\n\n// function openTopLevelDevTools() {\n//     const bw = BrowserWindow.getFocusedWindow();\n//     if (bw) {\n//         bw.webContents.openDevTools();\n//     } else {\n//         const arr = BrowserWindow.getAllWindows();\n//         arr.forEach((bww) => {\n//             bww.webContents.openDevTools();\n//         });\n//     }\n// }\n\nipcMain.on(R2_EVENT_DEVTOOLS, (_event: any, _arg: any) => {\n    openAllDevTools();\n});\n\nipcMain.on(R2_EVENT_TRY_LCP_PASS, async (event: any, publicationFilePath: string, lcpPass: string) => {\n    debug(publicationFilePath);\n    debug(lcpPass);\n    let okay = false;\n    try {\n        okay = await tryLcpPass(publicationFilePath, lcpPass);\n    } catch (err) {\n        debug(err);\n        okay = false;\n    }\n    event.sender.send(R2_EVENT_TRY_LCP_PASS_RES,\n        okay,\n        (okay ? \"LCP okay. (\" + lcpPass + \")\" : \"LCP problem!? (\" + lcpPass + \")\"));\n});\n\nasync function tryLcpPass(publicationFilePath: string, lcpPass: string): Promise<boolean> {\n    const publication = _publicationsServer.cachedPublication(publicationFilePath);\n    if (!publication) {\n        return false;\n    }\n    // TODO: ask user for plain text passphrase, convert to SHA256 hex format,\n    // or fetch from persistent storage\n    // const lcpPass64 =\n    //     \"ZWM0ZjJkYmIzYjE0MDA5NTU1MGM5YWZiYmI2OWI1ZDZmZDllODE0YjlkYTgyZmFkMGIzNGU5ZmNiZTU2ZjFjYg\";\n    // (this is \"dan\")\n    const checkSum = crypto.createHash(\"sha256\");\n    checkSum.update(lcpPass);\n    const lcpPassHex = checkSum.digest(\"hex\");\n    // const lcpPass64 = new Buffer(hash).toString(\"base64\");\n    // const lcpPassHex = new Buffer(lcpPass64, \"base64\").toString(\"utf8\");\n    const okay = await publication.LCP.setUserPassphrase(lcpPassHex); // hex\n    if (!okay) {\n        debug(\"FAIL publication.LCP.setUserPassphrase()\");\n    }\n    return okay;\n}\n\nasync function createElectronBrowserWindow(publicationFilePath: string, publicationUrl: string) {\n\n    debug(\"createElectronBrowserWindow() \" + publicationFilePath + \" : \" + publicationUrl);\n\n    // const fileName = path.basename(publicationFilePath);\n    // const ext = path.extname(fileName).toLowerCase();\n\n    let publication: Publication | undefined;\n    try {\n        publication = await _publicationsServer.loadOrGetCachedPublication(publicationFilePath);\n    } catch (err) {\n        debug(err);\n    }\n\n    let lcpHint: string | undefined;\n    if (publication && publication.LCP) {\n        if (publication.LCP.Encryption &&\n            publication.LCP.Encryption.UserKey &&\n            publication.LCP.Encryption.UserKey.TextHint) {\n            lcpHint = publication.LCP.Encryption.UserKey.TextHint;\n        }\n        if (!lcpHint) {\n            lcpHint = \"LCP passphrase\";\n        }\n        // TODO: passphrase from cache (persistent storage, user settings)\n        // const testLcpPass = \"danzzz\";\n        // const okay = await tryLcpPass(publicationFilePath, testLcpPass);\n        // if (okay) {\n        //     lcpHint = undefined;\n        // }\n    }\n\n    const electronBrowserWindow = new BrowserWindow({\n        height: 600,\n        webPreferences: {\n            allowRunningInsecureContent: false,\n            contextIsolation: false,\n            devTools: true,\n            nodeIntegration: true,\n            nodeIntegrationInWorker: false,\n            sandbox: false,\n            webSecurity: true,\n            webviewTag: true,\n            // preload: __dirname + \"/\" + \"preload.js\",\n        },\n        width: 800,\n    });\n    if (!_electronBrowserWindows) {\n        _electronBrowserWindows = [];\n    }\n    _electronBrowserWindows.push(electronBrowserWindow);\n\n    // electronBrowserWindow.on(\"resize\", () => {\n    //     const [width, height] = electronBrowserWindow.getContentSize();\n\n    //     for (const wc of webContents.getAllWebContents()) {\n    //         if (wc.hostWebContents &&\n    //             wc.hostWebContents.id === electronBrowserWindow.webContents.id) {\n    //             wc.setSize({\n    //                 normal: {\n    //                     height: 400,\n    //                     width,\n    //                 },\n    //             });\n    //         }\n    //     }\n    // });\n\n    electronBrowserWindow.webContents.on(\"dom-ready\", () => {\n        debug(\"electronBrowserWindow dom-ready \" + publicationFilePath + \" : \" + publicationUrl);\n        // electronBrowserWindow.webContents.openDevTools();\n    });\n\n    electronBrowserWindow.on(\"closed\", () => {\n        debug(\"electronBrowserWindow closed \" + publicationFilePath + \" : \" + publicationUrl);\n        const i = _electronBrowserWindows.indexOf(electronBrowserWindow);\n        if (i < 0) {\n            debug(\"electronBrowserWindow NOT FOUND?!\");\n            return;\n        }\n        _electronBrowserWindows.splice(i, 1);\n    });\n\n    const urlEncoded = encodeURIComponent_RFC3986(publicationUrl);\n    let fullUrl = `file://${__dirname}/renderer/index.html?pub=${urlEncoded}`;\n    if (lcpHint) {\n        fullUrl = fullUrl + \"&lcpHint=\" + lcpHint;\n    }\n    // `file://${process.cwd()}/src/electron/renderer/index.html`;\n    // `file://${__dirname}/../../../../src/electron/renderer/index.html`\n    debug(fullUrl);\n    electronBrowserWindow.webContents.loadURL(fullUrl, { extraHeaders: \"pragma: no-cache\\n\" });\n}\n\napp.on(\"ready\", () => {\n    debug(\"app ready\");\n\n    // protocol.registerServiceWorkerSchemes([\"epub\"]);\n\n    // registerFileProtocol\n    // protocol.registerBufferProtocol(\"epub\",\n    //     (request, callback) => {\n    //         debug(request.url);\n    //         const data = fs.readFileSync(request.url);\n    //         const mimeType = mime.lookup(request.url);\n    //         callback({ data, mimeType });\n    //     }, (error) => {\n    //         debug(error);\n    //     });\n\n    clearSessions(undefined, undefined);\n\n    const sess = getWebViewSession();\n    if (sess) {\n        sess.setPermissionRequestHandler((wc, permission, callback) => {\n            console.log(\"setPermissionRequestHandler\");\n            console.log(wc.getURL());\n            console.log(permission);\n            callback(true);\n        });\n    }\n\n    // tslint:disable-next-line:no-floating-promises\n    (async () => {\n        _publicationsFilePaths = await filehound.create()\n            .paths(defaultBookPath)\n            .ext([\".epub\", \".epub3\", \".cbz\"])\n            .find();\n        debug(_publicationsFilePaths);\n\n        _publicationsServer = new Server({\n            disableDecryption: false,\n            disableReaders: false,\n        });\n\n        // https://expressjs.com/en/4x/api.html#express.static\n        const staticOptions = {\n            etag: false,\n        };\n        _publicationsServer.expressUse(\"/readium-css\", express.static(\"misc/ReadiumCSS\", staticOptions));\n\n        // _publicationsServer.expressGet([\"/sw.js\"],\n        //     (req: express.Request, res: express.Response) => {\n\n        //         const swPth = \"./renderer/sw/service-worker.js\";\n        //         const swFullPath = path.resolve(path.join(__dirname, swPth));\n        //         if (!fs.existsSync(swFullPath)) {\n\n        //             const err = \"Missing Service Worker JS! \";\n        //             debug(err + swFullPath);\n        //             res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n        //                 + err + \"</p></body></html>\");\n        //             return;\n        //         }\n\n        //         const swJS = fs.readFileSync(swFullPath, { encoding: \"utf8\" });\n        //         // debug(swJS);\n\n        //         // this.setResponseCORS(res);\n        //         res.set(\"Content-Type\", \"text/javascript; charset=utf-8\");\n\n        //         const checkSum = crypto.createHash(\"sha256\");\n        //         checkSum.update(swJS);\n        //         const hash = checkSum.digest(\"hex\");\n\n        //         const match = req.header(\"If-None-Match\");\n        //         if (match === hash) {\n        //             debug(\"service-worker.js cache\");\n        //             res.status(304); // StatusNotModified\n        //             res.end();\n        //             return;\n        //         }\n\n        //         res.setHeader(\"ETag\", hash);\n\n        //         // res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\n\n        //         res.status(200).send(swJS);\n        //     });\n\n        const pubPaths = _publicationsServer.addPublications(_publicationsFilePaths);\n\n        _publicationsServerPort = await portfinder.getPortPromise();\n        _publicationsRootUrl = _publicationsServer.start(_publicationsServerPort);\n\n        _publicationsUrls = pubPaths.map((pubPath) => {\n            return `${_publicationsRootUrl}${pubPath}`;\n        });\n        debug(_publicationsUrls);\n\n        resetMenu();\n\n        process.nextTick(() => {\n            const detail = \"Note that this is only a developer application (\" +\n                \"test framework) for the Readium2 NodeJS 'streamer' and Electron-based 'navigator'.\";\n            const message = \"Use the 'Electron' menu to load publications.\";\n\n            if (process.platform === \"darwin\") {\n                const choice = dialog.showMessageBox({\n                    buttons: [\"&OK\"],\n                    cancelId: 0,\n                    defaultId: 0,\n                    detail,\n                    message,\n                    noLink: true,\n                    normalizeAccessKeys: true,\n                    title: \"Readium2 Electron streamer / navigator\",\n                    type: \"info\",\n                });\n                if (choice === 0) {\n                    debug(\"ok\");\n                }\n            } else {\n                const html = `<html><h2>${message}<hr>${detail}</h2></html>`;\n                const electronBrowserWindow = new BrowserWindow({\n                    height: 300,\n                    webPreferences: {\n                        allowRunningInsecureContent: false,\n                        contextIsolation: false,\n                        devTools: false,\n                        nodeIntegration: false,\n                        nodeIntegrationInWorker: false,\n                        sandbox: false,\n                        webSecurity: true,\n                        webviewTag: false,\n                        // preload: __dirname + \"/\" + \"preload.js\",\n                    },\n                    width: 400,\n                });\n\n                electronBrowserWindow.webContents.loadURL(\"data:text/html,\" + html);\n            }\n        });\n    })();\n});\n\nfunction resetMenu() {\n\n    const menuTemplate = [\n        {\n            label: \"Readium2 Electron\",\n            submenu: [\n                {\n                    accelerator: \"Command+Q\",\n                    click: () => { app.quit(); },\n                    label: \"Quit\",\n                },\n            ],\n        },\n        {\n            label: \"Open\",\n            submenu: [\n            ],\n        },\n        {\n            label: \"Tools\",\n            submenu: [\n                {\n                    accelerator: \"Command+B\",\n                    click: () => {\n                        // openTopLevelDevTools();\n                        openAllDevTools();\n                    },\n                    label: \"Open Dev Tools\",\n                },\n            ],\n        },\n    ];\n\n    menuTemplate[1].submenu.push({\n        click: async () => {\n            const choice = dialog.showOpenDialog({\n                defaultPath: lastBookPath || defaultBookPath,\n                filters: [\n                    { name: \"EPUB publication\", extensions: [\"epub\", \"epub3\"] },\n                    { name: \"Comic book\", extensions: [\"cbz\"] },\n                    // {name: \"Zip archive\", extensions: [\"zip\"]},\n                    // {name: \"Any file\", extensions: [\"*\"]},\n                ],\n                message: \"Choose a file\",\n                properties: [\"openFile\"],\n                title: \"Load a publication\",\n            });\n            if (!choice || !choice.length) {\n                return;\n            }\n            debug(choice[0]);\n\n            lastBookPath = path.dirname(choice[0]);\n            debug(lastBookPath);\n\n            let n = _publicationsFilePaths.indexOf(choice[0]);\n            if (n < 0) {\n                const publicationPaths = _publicationsServer.addPublications(choice);\n                debug(publicationPaths);\n\n                _publicationsFilePaths.push(choice[0]);\n                debug(_publicationsFilePaths);\n\n                _publicationsUrls.push(`${_publicationsRootUrl}${publicationPaths[0]}`);\n                debug(_publicationsUrls);\n\n                n = _publicationsFilePaths.length - 1; // === _publicationsUrls.length - 1\n\n                process.nextTick(() => {\n                    resetMenu();\n                });\n            }\n\n            const file = _publicationsFilePaths[n];\n            const pubManifestUrl = _publicationsUrls[n];\n\n            await createElectronBrowserWindow(file, pubManifestUrl);\n        },\n        label: \"Load file...\",\n    } as any);\n\n    _publicationsUrls.forEach((pubManifestUrl, n) => {\n        const file = _publicationsFilePaths[n];\n        debug(\"MENU ITEM: \" + file + \" : \" + pubManifestUrl);\n\n        menuTemplate[1].submenu.push({\n            click: async () => {\n                await createElectronBrowserWindow(file, pubManifestUrl);\n            },\n            label: file, // + \" : \" + pubManifestUrl,\n        } as any);\n    });\n    const menu = Menu.buildFromTemplate(menuTemplate);\n    Menu.setApplicationMenu(menu);\n}\n\napp.on(\"activate\", () => {\n    debug(\"app activate\");\n});\n\napp.on(\"before-quit\", () => {\n    debug(\"app before quit\");\n});\n\napp.on(\"window-all-closed\", () => {\n    debug(\"app window-all-closed\");\n    if (process.platform !== \"darwin\") {\n        app.quit();\n    }\n});\n\nfunction willQuitCallback(evt: Electron.Event) {\n    debug(\"app will quit\");\n\n    app.removeListener(\"will-quit\", willQuitCallback);\n\n    _publicationsServer.stop();\n\n    let done = false;\n\n    setTimeout(() => {\n        if (done) {\n            return;\n        }\n        done = true;\n        debug(\"Cache and StorageData clearance waited enough => force quitting...\");\n        app.quit();\n    }, 6000);\n\n    let sessionCleared = 0;\n    const callback = () => {\n        sessionCleared++;\n        if (sessionCleared >= 2) {\n            if (done) {\n                return;\n            }\n            done = true;\n            debug(\"Cache and StorageData cleared, now quitting...\");\n            app.quit();\n        }\n    };\n    clearSessions(callback, callback);\n\n    evt.preventDefault();\n}\n\napp.on(\"will-quit\", willQuitCallback);\n\napp.on(\"quit\", () => {\n    debug(\"app quit\");\n});\n\nfunction clearSession(\n    sess: Electron.Session,\n    str: string,\n    callbackCache: (() => void) | undefined,\n    callbackStorageData: (() => void) | undefined) {\n\n    sess.clearCache(() => {\n        debug(\"SESSION CACHE CLEARED - \" + str);\n        if (callbackCache) {\n            callbackCache();\n        }\n    });\n    sess.clearStorageData({\n        origin: \"*\",\n        quotas: [\n            \"temporary\",\n            \"persistent\",\n            \"syncable\"],\n        storages: [\n            \"appcache\",\n            \"cookies\",\n            \"filesystem\",\n            \"indexdb\",\n            \"localstorage\",\n            \"shadercache\",\n            \"websql\",\n            \"serviceworkers\"],\n    }, () => {\n        debug(\"SESSION STORAGE DATA CLEARED - \" + str);\n        if (callbackStorageData) {\n            callbackStorageData();\n        }\n    });\n}\n\nfunction getWebViewSession() {\n    return session.fromPartition(R2_SESSION_WEBVIEW, { cache: false });\n}\n\nfunction clearWebviewSession(\n    callbackCache: (() => void) | undefined,\n    callbackStorageData: (() => void) | undefined) {\n\n    const sess = getWebViewSession();\n    if (sess) {\n        clearSession(sess, \"[persist:publicationwebview]\", callbackCache, callbackStorageData);\n    } else {\n        if (callbackCache) {\n            callbackCache();\n        }\n        if (callbackStorageData) {\n            callbackStorageData();\n        }\n    }\n}\n\nfunction clearDefaultSession(\n    callbackCache: (() => void) | undefined,\n    callbackStorageData: (() => void) | undefined) {\n\n    if (session.defaultSession) {\n        // const proto = session.defaultSession.protocol;\n        clearSession(session.defaultSession, \"[default]\", callbackCache, callbackStorageData);\n    } else {\n        if (callbackCache) {\n            callbackCache();\n        }\n        if (callbackStorageData) {\n            callbackStorageData();\n        }\n    }\n}\n\nfunction clearSessions(\n    callbackCache: (() => void) | undefined,\n    callbackStorageData: (() => void) | undefined) {\n\n    let done = false;\n\n    setTimeout(() => {\n        if (done) {\n            return;\n        }\n        done = true;\n        debug(\"Cache and StorageData clearance waited enough (default session) => force webview session...\");\n        clearWebviewSession(callbackCache, callbackStorageData);\n    }, 6000);\n\n    let sessionCleared = 0;\n    const callback = () => {\n        sessionCleared++;\n        if (sessionCleared >= 2) {\n            if (done) {\n                return;\n            }\n            done = true;\n            debug(\"Cache and StorageData cleared (default session), now webview session...\");\n            clearWebviewSession(callbackCache, callbackStorageData);\n        }\n    };\n    clearDefaultSession(callback, callback);\n}\n"]}