{"version":3,"file":"index_.js","sourceRoot":"","sources":["../../../../../../../src/electron/renderer/riots/linktree/index_.ts"],"names":[],"mappings":";;AAEA,qCAAyC;AA0B5B,QAAA,iBAAiB,GAAG,UAAC,QAAgB,EAAE,IAAuB;IACvE,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAEvC,MAAM,CAAC,GAAG,CAAC;AACf,CAAC,CAAC;AAGD,MAAc,CAAC,aAAa,GAAG,UAAU,KAAwB;IAI9D,IAAM,IAAI,GAAG,IAAwB,CAAC;IAWtC,IAAI,CAAC,QAAQ,GAAG,UAAU,KAAc;QAMpC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC,CAAC;IAeF,IAAI,CAAC,OAAO,GAAG,UAAC,EAAa;QACzB,EAAE,CAAC,aAAa,GAAG,IAAI,CAAC;QACxB,EAAE,CAAC,cAAc,EAAE,CAAC;QAEpB,IAAM,IAAI,GAAI,EAAE,CAAC,aAA6B,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACpE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACP,kBAAU,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC;IACL,CAAC,CAAC;AASN,CAAC,CAAC","sourcesContent":["// http://riotjs.com/guide/\n// http://riotjs.com/api/\nimport { handleLink } from \"../../index\";\n// import {\n//     RiotMixinWithRecursivePropertySetter,\n//     riot_mixin_RecursivePropertySetter,\n// } from \"../riot_mixin_RecursivePropertySetter\";\n// import { riot_mixin_EventTracer } from \"../riot_mixin_EventTracer\";\n\nexport interface IRiotOptsLinkTreeItem {\n    children: IRiotOptsLinkTreeItem[];\n    href: string;\n    title: string;\n}\nexport interface IRiotOptsLinkTree {\n    basic: boolean;\n    links: IRiotOptsLinkTreeItem[];\n    url: string;\n}\n\nexport interface IRiotTagLinkTree extends\n    // IRiotOptsLinkTree,\n    RiotTag { // RiotMixinWithRecursivePropertySetter\n    setBasic: (basic: boolean) => void;\n    // getBasic: () => boolean;\n    // basic: boolean;\n}\n\nexport const riotMountLinkTree = (selector: string, opts: IRiotOptsLinkTree): RiotTag[] => {\n    const tag = riot.mount(selector, opts);\n    // console.log(tag); // RiotTag[]\n    return tag;\n};\n\n// tslint:disable-next-line:space-before-function-paren\n(window as any).riot_linktree = function (_opts: IRiotOptsLinkTree) {\n    // console.log(opts);\n    // console.log(this);\n\n    const that = this as IRiotTagLinkTree;\n\n    // that.mixin(riot_mixin_RecursivePropertySetter);\n\n    // that.links = opts.links;\n    // that.url = opts.url;\n    // this.basic = opts.basic ? true : false;\n\n    // Object.defineProperty(this, \"basic\", { get: () => that.opts.basic });\n    // that.setBasic = (basic: boolean) => {\n    // tslint:disable-next-line:space-before-function-paren\n    that.setBasic = function (basic: boolean) {\n        // console.log(\"SET: \" + basic);\n        // if (that !== this) {\n        //     console.log(that);\n        //     console.log(this);\n        // }\n        this.opts.basic = basic;\n        // this.basic = basic;\n        this.update();\n    };\n\n    // // that.getBasic = (): boolean => {\n    // that.getBasic = function (): boolean {\n    //     // console.log(\"GET\");\n    //     // if (that !== this) {\n    //     //     console.log(that);\n    //     //     console.log(this);\n    //     // }\n    //     const val = this.opts.basic;\n    //     // const val = this.basic;\n    //     // console.log(\"GET: \" + val);\n    //     return val;\n    // };\n\n    this.onclick = (ev: RiotEvent) => {\n        ev.preventUpdate = true;\n        ev.preventDefault();\n        // console.log((ev.currentTarget as HTMLElement).getAttribute(\"data-href\"));\n        const href = (ev.currentTarget as HTMLElement).getAttribute(\"href\");\n        if (href) {\n            handleLink(href);\n        }\n    };\n\n    // that.shouldUpdate = (data: any, nextOpts: any) => {\n    //     console.log(\"shouldUpdate - linktree\");\n    //     console.log(data);\n    //     console.log(nextOpts);\n    //     // return data && typeof data.basic !== \"undefined\";\n    //     return true;\n    // };\n};\n"]}