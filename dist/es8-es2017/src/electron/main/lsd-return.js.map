{"version":3,"file":"lsd-return.js","sourceRoot":"","sources":["../../../../../src/electron/main/lsd-return.ts"],"names":[],"mappings":"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","sourcesContent":["import { streamToBufferPromise } from \"@r2-streamer-js/_utils/stream/BufferUtils\";\nimport * as debug_ from \"debug\";\nimport * as request from \"request\";\nimport * as requestPromise from \"request-promise-native\";\nimport { IDeviceIDManager } from \"./lsd-deviceid-manager\";\n\nimport URITemplate = require(\"urijs/src/URITemplate\");\n\nconst debug = debug_(\"r2:electron:main:lsd\");\n\nexport async function lsdReturn(\n    lsdJson: any,\n    deviceIDManager: IDeviceIDManager): Promise<any> {\n\n    if (!lsdJson.links) {\n        return Promise.reject(\"No LSD links!\");\n    }\n\n    const licenseReturn = lsdJson.links.find((link: any) => {\n        return link.rel === \"return\";\n    });\n    if (!licenseReturn) {\n        return Promise.reject(\"No LSD return link!\");\n    }\n\n    const deviceID = deviceIDManager.getDeviceID();\n    const deviceNAME = deviceIDManager.getDeviceNAME();\n\n    let returnURL = licenseReturn.href;\n    if (licenseReturn.templated === true || licenseReturn.templated === \"true\") {\n        const urlTemplate = new URITemplate(returnURL);\n        returnURL = (urlTemplate as any).expand({ id: deviceID, name: deviceNAME }, { strict: true });\n\n        // url = url.replace(\"{?end,id,name}\", \"\"); // TODO: smarter regexp?\n        // url = new URI(url).setQuery(\"id\", deviceID).setQuery(\"name\", deviceNAME).toString();\n    }\n    debug(\"RETURN: \" + returnURL);\n\n    return new Promise<any>(async (resolve, reject) => {\n\n        const failure = (err: any) => {\n            reject(err);\n        };\n\n        const success = async (response: request.RequestResponse) => {\n            if (response.statusCode && (response.statusCode < 200 || response.statusCode >= 300)) {\n                failure(\"HTTP CODE \" + response.statusCode);\n                return;\n            }\n\n            let responseData: Buffer;\n            try {\n                responseData = await streamToBufferPromise(response);\n            } catch (err) {\n                reject(err);\n                return;\n            }\n            if (!responseData) {\n                return;\n            }\n            const responseStr = responseData.toString(\"utf8\");\n            debug(responseStr);\n            const responseJson = global.JSON.parse(responseStr);\n            debug(responseJson);\n\n            resolve(responseJson);\n        };\n\n        const headers = {\n            \"Accept-Language\": \"en-UK,en-US;q=0.7,en;q=0.5\",\n        };\n\n        // No response streaming! :(\n        // https://github.com/request/request-promise/issues/90\n        const needsStreamingResponse = true;\n        if (needsStreamingResponse) {\n            request.put({\n                headers,\n                method: \"PUT\",\n                uri: returnURL,\n            })\n                .on(\"response\", success)\n                .on(\"error\", failure);\n        } else {\n            let response: requestPromise.FullResponse;\n            try {\n                // tslint:disable-next-line:await-promise no-floating-promises\n                response = await requestPromise({\n                    headers,\n                    method: \"PUT\",\n                    resolveWithFullResponse: true,\n                    uri: returnURL,\n                });\n            } catch (err) {\n                failure(err);\n                return;\n            }\n\n            await success(response);\n        }\n    });\n}\n"]}