{"version":3,"sources":["../../../../../node_modules/browser-pack/_prelude.js","../../../../../src/electron/renderer/index.ts","../../../../../src/electron/renderer/index_navigator.ts","../../../../../src/electron/renderer/querystring.ts","../../../../../node_modules/debounce/index.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","electron_1","index_navigator_1","querystring_1","console","log","window","location","document","baseURI","URL","queryParams","getURLQueryParams","publicationJsonUrl","lcpHint","onerror","err","ipcRenderer","on","_event","okay","message","lcpPassInput","getElementById","value","setTimeout","lcpPassForm","style","display","addEventListener","pathBase64","replace","pathDecoded","atob","pathFileName","substr","lastIndexOf","h1","querySelector","textContent","evt","preventDefault","lcpPass","send","buttStart","setAttribute","startNavigatorExperiment","buttonDebug","documentElement","classList","contains","remove","add","buttonDevTools","appendToc","json","anchor","webview1","ul","createElement","forEach","tocLinkJson","li","title","href","tocLink","tocLinkHref","event","appendChild","createTextNode","br","tocHeading","children","debounce","body","backgroundColor","color","readerControls","showControlsButton","hideControlsButt","width","clientWidth","height","clientHeight","wc","getWebContents","setSize","normal","channel","args","cssButtonN1","removeAttribute","cssButtonN2","publicationViewport","hideControlsButton","cssButton1","jsonMsg","injectCSS","setCSS","JSON","stringify","cssButton2","response","fetch","ok","headers","arg0","arg1","publicationJson","spine","readerControlsSpine","spineItem","spineItemLink","spineItemLinkHref","toc","readerControlsToc","readerControlsPageList","readerControlsLandmarks","landmarks","lot","loa","loi","lov","params","query","search","substring","split","keyParam","keyVal","decodeURIComponent","func","wait","immediate","later","last","Date","now","timestamp","timeout","result","apply","context","debounced","this","arguments","callNow","clear","clearTimeout"],"mappings":"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","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { ipcRenderer } from \"electron\";\nimport { startNavigatorExperiment } from \"./index_navigator\";\nimport { getURLQueryParams } from \"./querystring\";\n\n// import { startServiceWorkerExperiment } from \"./sw/index_service-worker\";\n\nconsole.log(\"INDEX\");\n\nconsole.log(window.location);\nconsole.log(document.baseURI);\nconsole.log(document.URL);\n\nconst queryParams = getURLQueryParams();\n\n// tslint:disable-next-line:no-string-literal\nconst publicationJsonUrl = queryParams[\"pub\"];\n\nconsole.log(\" (((( publicationJsonUrl )))) \" + publicationJsonUrl);\n\n// tslint:disable-next-line:no-string-literal\nconst lcpHint = queryParams[\"lcpHint\"];\n\nwindow.onerror = (err) => {\n    console.log(\"Error\", err);\n};\n\nipcRenderer.on(\"tryLcpPass\", (_event: any, okay: boolean, message: string) => {\n    console.log(okay);\n    console.log(message);\n\n    const lcpPassInput = document.getElementById(\"lcpPassInput\");\n    if (!lcpPassInput) {\n        return;\n    }\n\n    (lcpPassInput as HTMLInputElement).value = message;\n\n    if (okay) {\n        setTimeout(() => {\n            const lcpPassForm = document.getElementById(\"lcpPassForm\");\n            if (!lcpPassForm) {\n                return;\n            }\n            lcpPassForm.style.display = \"none\";\n        }, 1000);\n    }\n});\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n\n    const pathBase64 = publicationJsonUrl.replace(/.*\\/pub\\/(.*)\\/manifest.json/, \"$1\");\n    console.log(pathBase64);\n    const pathDecoded = window.atob(pathBase64);\n    console.log(pathDecoded);\n    const pathFileName = pathDecoded.substr(pathDecoded.lastIndexOf(\"/\") + 1, pathDecoded.length - 1);\n\n    const h1 = document.querySelector(\"html > body > h1 > span\");\n    if (h1) {\n        (h1 as HTMLElement).textContent = pathFileName;\n    }\n\n    const lcpPassForm = document.getElementById(\"lcpPassForm\");\n    if (!lcpPassForm) {\n        return;\n    }\n    const lcpPassInput = document.getElementById(\"lcpPassInput\");\n    if (!lcpPassInput) {\n        return;\n    }\n    if (lcpHint) {\n        (lcpPassInput as HTMLInputElement).value = lcpHint;\n        lcpPassForm.style.display = \"inline-block\";\n        // lcpPassForm.onsubmit\n        lcpPassForm.addEventListener(\"submit\", (evt) => {\n            if (evt) {\n                evt.preventDefault();\n            }\n            const lcpPass = (lcpPassInput as HTMLInputElement).value;\n            ipcRenderer.send(\"tryLcpPass\", pathDecoded, lcpPass);\n            return false;\n        });\n    }\n\n    const buttStart = document.getElementById(\"buttonStart\");\n    if (!buttStart) {\n        return;\n    }\n    buttStart.addEventListener(\"click\", () => {\n        buttStart.setAttribute(\"disabled\", \"\");\n        buttStart.style.display = \"none\";\n        // startServiceWorkerExperiment(publicationJsonUrl);\n        startNavigatorExperiment(publicationJsonUrl);\n    });\n\n    const buttonDebug = document.getElementById(\"buttonDebug\");\n    if (!buttonDebug) {\n        return;\n    }\n    buttonDebug.addEventListener(\"click\", () => {\n        if (document.documentElement.classList.contains(\"debug\")) {\n            document.documentElement.classList.remove(\"debug\");\n        } else {\n            document.documentElement.classList.add(\"debug\");\n        }\n    });\n\n    const buttonDevTools = document.getElementById(\"buttonDevTools\");\n    if (!buttonDevTools) {\n        return;\n    }\n    buttonDevTools.addEventListener(\"click\", () => {\n        ipcRenderer.send(\"devtools\", \"test\");\n    });\n});\n","import debounce = require(\"debounce\");\n// import * as debounce from \"debounce\";\n// import { debounce } from \"debounce\";\n\nexport function startNavigatorExperiment(publicationJsonUrl: string) {\n\n    document.body.style.backgroundColor = \"silver\";\n\n    const h1 = document.querySelector(\"html > body > h1\");\n    if (h1) {\n        (h1 as HTMLElement).style.color = \"green\";\n    }\n\n    // const readerChrome = document.getElementById(\"reader_chrome\");\n    const readerControls = document.getElementById(\"reader_controls\");\n\n    const showControlsButton = document.getElementById(\"showControlsButton\");\n    if (showControlsButton) {\n        showControlsButton.style.display = \"block\";\n        showControlsButton.addEventListener(\"click\", (_event) => {\n            if (readerControls) {\n                readerControls.style.display = \"block\";\n            }\n            const hideControlsButt = document.getElementById(\"hideControlsButton\");\n            if (hideControlsButt) {\n                hideControlsButt.style.display = \"block \";\n            }\n        });\n    }\n\n    const webview1 = document.createElement(\"webview\");\n    webview1.setAttribute(\"id\", \"webview1\");\n    webview1.setAttribute(\"webpreferences\",\n        \"nodeIntegration=0, nodeIntegrationInWorker=0, sandbox=0, javascript=1, \" +\n        \"contextIsolation=0, webSecurity=1, allowRunningInsecureContent=0\");\n    webview1.setAttribute(\"partition\", \"persist:publicationwebview\");\n    webview1.setAttribute(\"httpreferrer\", publicationJsonUrl);\n    webview1.setAttribute(\"preload\", \"./preload.js\");\n    // webview.setAttribute(\"src\", \"dummy\");\n    // webview1.style.visibility = \"hidden\";\n    webview1.setAttribute(\"disableguestresize\", \"\");\n    window.addEventListener(\"resize\", debounce(() => {\n\n        // webview.offsetWidth == full including borders\n        // webview.scrollWidth == webview.clientWidth == without borders\n\n        // const computedStyle = window.getComputedStyle(webview1);\n        // console.log(parseInt(computedStyle.width as string, 10));\n        // console.log(parseInt(computedStyle.height as string, 10));\n\n        const width = webview1.clientWidth;\n        const height = webview1.clientHeight;\n\n        const wc = webview1.getWebContents();\n        if (wc && width && height) {\n            wc.setSize({\n                normal: {\n                    height,\n                    width,\n                },\n            });\n        }\n    }, 200));\n    webview1.addEventListener(\"ipc-message\", (event) => {\n        console.log(\"webview1 ipc-message\");\n        console.log(event.channel);\n        if (event.channel === \"readium\") {\n            console.log(event.args);\n        }\n    });\n    webview1.addEventListener(\"dom-ready\", () => {\n        // webview1.openDevTools();\n\n        const cssButtonN1 = document.getElementById(\"cssButtonInject\");\n        if (!cssButtonN1) {\n            return;\n        }\n        cssButtonN1.removeAttribute(\"disabled\");\n\n        const cssButtonN2 = document.getElementById(\"cssButtonReset\");\n        if (!cssButtonN2) {\n            return;\n        }\n        cssButtonN2.removeAttribute(\"disabled\");\n\n        // webview1.style.visibility = \"visible\";\n    });\n    const publicationViewport = document.getElementById(\"publication_viewport\");\n    if (publicationViewport) {\n        publicationViewport.appendChild(webview1);\n    }\n\n    const hideControlsButton = document.getElementById(\"hideControlsButton\");\n    if (hideControlsButton) {\n        hideControlsButton.addEventListener(\"click\", (_event) => {\n            if (readerControls) {\n                readerControls.style.display = \"none\";\n            }\n            hideControlsButton.style.display = \"none\";\n        });\n    }\n\n    const cssButton1 = document.getElementById(\"cssButtonInject\");\n    if (cssButton1) {\n        cssButton1.addEventListener(\"click\", (_event) => {\n            const jsonMsg = { injectCSS: \"yes\", setCSS: \"ok\" };\n            webview1.send(\"readium\", JSON.stringify(jsonMsg)); // .getWebContents()\n        });\n    }\n\n    const cssButton2 = document.getElementById(\"cssButtonReset\");\n    if (cssButton2) {\n        cssButton2.addEventListener(\"click\", (_event) => {\n            const jsonMsg = { injectCSS: \"rollback\", setCSS: \"rollback\" };\n            webview1.send(\"readium\", JSON.stringify(jsonMsg)); // .getWebContents()\n        });\n    }\n\n    // tslint:disable-next-line:no-floating-promises\n    (async () => {\n\n        // try {\n        //     // hacky :) (just for testing);\n        //     // (initializes the LCP pass)\n        //     await fetch(publicationJsonUrl.replace(\"/pub/\",\n        //         \"/pub/*-\" +\n        //         \"ZWM0ZjJkYmIzYjE0MDA5NTU1MGM5YWZiYmI2OWI1ZDZmZDllODE0YjlkYTgyZmFkMGIzNGU5ZmNiZTU2ZjFjYg\" +\n        //         \"==-*\"));\n        // } catch (e) {\n        //     console.log(e);\n        // }\n\n        let response: Response | undefined;\n        try {\n            response = await fetch(publicationJsonUrl);\n        } catch (e) {\n            console.log(e);\n        }\n        if (!response) {\n            return;\n        }\n        if (!response.ok) {\n            console.log(\"BAD RESPONSE?!\");\n        }\n        response.headers.forEach((arg0: any, arg1: any) => {\n            console.log(arg0 + \" => \" + arg1);\n        });\n\n        let publicationJson: any | undefined;\n        try {\n            publicationJson = await response.json();\n        } catch (e) {\n            console.log(e);\n        }\n        if (!publicationJson) {\n            return;\n        }\n        console.log(publicationJson);\n\n        if (publicationJson.spine) {\n            const readerControlsSpine = document.getElementById(\"reader_controls_SPINE\");\n            publicationJson.spine.forEach((spineItem: any) => {\n                const spineItemLink = document.createElement(\"a\");\n                const spineItemLinkHref = publicationJsonUrl + \"/../\" + spineItem.href;\n                spineItemLink.setAttribute(\"href\", spineItemLinkHref);\n                spineItemLink.addEventListener(\"click\", (event) => {\n                    event.preventDefault();\n\n                    webview1.setAttribute(\"src\", spineItemLinkHref);\n                    // webview1.getWebContents().loadURL(spineItemLinkHref, { extraHeaders: \"pragma: no-cache\\n\" });\n                    // webview1.loadURL(spineItemLinkHref, { extraHeaders: \"pragma: no-cache\\n\" });\n                });\n                spineItemLink.appendChild(document.createTextNode(spineItem.href));\n                if (readerControlsSpine) {\n                    readerControlsSpine.appendChild(spineItemLink);\n                    readerControlsSpine.appendChild(document.createElement(\"br\"));\n                }\n            });\n        }\n\n        if (publicationJson.toc && publicationJson.toc.length) {\n            const readerControlsToc = document.getElementById(\"reader_controls_TOC\");\n            if (readerControlsToc) {\n                appendToc(publicationJson.toc, readerControlsToc, publicationJsonUrl, webview1);\n            }\n        }\n        if (publicationJson[\"page-list\"] && publicationJson[\"page-list\"].length) {\n            const readerControlsPageList = document.getElementById(\"reader_controls_PAGELIST\");\n            if (readerControlsPageList) {\n                appendToc(publicationJson[\"page-list\"], readerControlsPageList, publicationJsonUrl, webview1);\n            }\n        }\n\n        const readerControlsLandmarks = document.getElementById(\"reader_controls_LANDMARKS\");\n        if (readerControlsLandmarks) {\n            if (publicationJson.landmarks && publicationJson.landmarks.length) {\n                appendToc(publicationJson.landmarks, readerControlsLandmarks, publicationJsonUrl, webview1);\n            }\n            if (publicationJson.lot && publicationJson.lot.length) {\n                readerControlsLandmarks.appendChild(document.createElement(\"hr\"));\n                appendToc(publicationJson.lot, readerControlsLandmarks, publicationJsonUrl, webview1);\n            }\n            if (publicationJson.loa && publicationJson.loa.length) {\n                readerControlsLandmarks.appendChild(document.createElement(\"hr\"));\n                appendToc(publicationJson.loa, readerControlsLandmarks, publicationJsonUrl, webview1);\n            }\n            if (publicationJson.loi && publicationJson.loi.length) {\n                readerControlsLandmarks.appendChild(document.createElement(\"hr\"));\n                appendToc(publicationJson.loi, readerControlsLandmarks, publicationJsonUrl, webview1);\n            }\n            if (publicationJson.lov && publicationJson.lov.length) {\n                readerControlsLandmarks.appendChild(document.createElement(\"hr\"));\n                appendToc(publicationJson.lov, readerControlsLandmarks, publicationJsonUrl, webview1);\n            }\n        }\n    })();\n    //     const spineItemUrl = publicationJsonUrl + \"/../\" + publicationJson.spine[0].href;\n    //     console.log(spineItemUrl);\n    //     webview1.setAttribute(\"src\", spineItemUrl);\n\n    // const a = document.querySelector(\"html > body > a\");\n    // a.click();\n}\n\nfunction appendToc(json: any, anchor: HTMLElement, publicationJsonUrl: string, webview1: HTMLElement) {\n\n    const ul = document.createElement(\"ul\");\n    json.forEach((tocLinkJson: any) => {\n        const li = document.createElement(\"li\");\n\n        if (!tocLinkJson.title) {\n            tocLinkJson.title = \"xxx\";\n        }\n\n        if (tocLinkJson.href) {\n            const tocLink = document.createElement(\"a\");\n            const tocLinkHref = publicationJsonUrl + \"/../\" + tocLinkJson.href;\n            tocLink.setAttribute(\"href\", tocLinkHref);\n            tocLink.addEventListener(\"click\", (event) => {\n                event.preventDefault();\n\n                webview1.setAttribute(\"src\", tocLinkHref);\n                // webview1.getWebContents().loadURL(tocLinkHref, { extraHeaders: \"pragma: no-cache\\n\" });\n                // webview1.loadURL(tocLinkHref, { extraHeaders: \"pragma: no-cache\\n\" });\n            });\n            tocLink.appendChild(document.createTextNode(tocLinkJson.title));\n            li.appendChild(tocLink);\n\n            const br = document.createElement(\"br\");\n            li.appendChild(br);\n\n            const tocHeading = document.createElement(\"span\");\n            tocHeading.appendChild(document.createTextNode(tocLinkJson.href));\n            li.appendChild(tocHeading);\n        } else {\n            const tocHeading = document.createElement(\"span\");\n            tocHeading.appendChild(document.createTextNode(tocLinkJson.title));\n            li.appendChild(tocHeading);\n        }\n\n        ul.appendChild(li);\n\n        if (tocLinkJson.children && tocLinkJson.children.length) {\n            appendToc(tocLinkJson.children, li, publicationJsonUrl, webview1);\n        }\n    });\n\n    anchor.appendChild(ul);\n}\n","export interface IStringMap { [key: string]: string; }\n\nexport const getURLQueryParams = (): IStringMap => {\n    const params: IStringMap = {};\n\n    let query = window.location.search;\n    if (query && query.length) {\n        query = query.substring(1);\n        const keyParams = query.split(\"&\");\n        keyParams.forEach((keyParam) => {\n            const keyVal = keyParam.split(\"=\");\n            if (keyVal.length > 1) {\n                params[keyVal[0]] = decodeURIComponent(keyVal[1]);\n            }\n        });\n    }\n\n    return params;\n};\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n"]}