{"version":3,"sources":["../../../../../node_modules/browser-pack/_prelude.js","../../../../../src/electron/renderer/index.ts","../../../../../src/electron/renderer/querystring.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","querystring_1","console","log","window","location","document","baseURI","URL","onerror","err","addEventListener","publicationJsonUrl","getURLQueryParams","webview1","createElement","openDevTools","setAttribute","body","appendChild","webview2","setTimeout","async","h1","querySelector","fetch","replace","response","ok","headers","forEach","arg0","arg1","publicationJson","json","spine","spineItem","spineItemLink","spineItemLinkHref","href","event","preventDefault","createTextNode","swBootUrl","params","query","search","substring","split","keyParam","keyVal","decodeURIComponent"],"mappings":"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","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { getURLQueryParams } from \"./querystring\";\n\nconsole.log(\"INDEX\");\n\nconsole.log(window.location);\nconsole.log(document.baseURI);\nconsole.log(document.URL);\n\nwindow.onerror = (err) => {\n    console.log(\"Error\", err);\n};\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n\n    const queryParams = getURLQueryParams();\n\n    // tslint:disable-next-line:no-string-literal\n    const publicationJsonUrl = queryParams[\"pub\"];\n\n    console.log(\" (((( publicationJsonUrl )))) \" + publicationJsonUrl);\n\n    const webview1 = document.createElement(\"webview\");\n    webview1.addEventListener(\"dom-ready\", () => {\n        webview1.openDevTools();\n    });\n    webview1.setAttribute(\"id\", \"webview1\");\n    webview1.setAttribute(\"style\",\n        \"width: 100%; height: 400px;\" +\n        \"box-sizing: border-box; border: 2px solid black\");\n    webview1.setAttribute(\"webpreferences\",\n        \"nodeIntegration=0, nodeIntegrationInWorker=0, sandbox=0, \" +\n        \"contextIsolation=0, webSecurity=1, allowRunningInsecureContent=0\");\n    // webview1.setAttribute(\"preload\", \"./preload.js\");\n    // webview.setAttribute(\"src\", \"dummy\");\n    document.body.appendChild(webview1);\n\n    const webview2 = document.createElement(\"webview\");\n    // webview2.addEventListener('did-start-loading', () => {\n    // });\n    // webview2.addEventListener('did-stop-loading', () => {\n    // });\n    // webview2.addEventListener('did-finish-load', () => {\n    // });\n\n    webview2.addEventListener(\"dom-ready\", () => {\n\n        webview2.openDevTools();\n        // const wc = webview2.getWebContents();\n\n        setTimeout(async () => {\n            document.body.setAttribute(\"style\", \"background-color: silver; margin: 0; padding: 0;\");\n\n            const h1 = document.querySelector(\"html > body > h1\");\n            if (!h1) {\n                return;\n            }\n            h1.setAttribute(\"style\", \"color: green;\");\n\n            try {\n\n                // hacky :) (just for testing);\n                // (initializes the LCP pass)\n                await fetch(publicationJsonUrl.replace(\"/pub/\",\n                    \"/pub/*-\" +\n                    \"ZWM0ZjJkYmIzYjE0MDA5NTU1MGM5YWZiYmI2OWI1ZDZmZDllODE0YjlkYTgyZmFkMGIzNGU5ZmNiZTU2ZjFjYg\" +\n                    \"==-*\"));\n\n                const response = await fetch(publicationJsonUrl);\n                if (!response.ok) {\n                    console.log(\"BAD RESPONSE?!\");\n                }\n                response.headers.forEach((arg0: any, arg1: any) => {\n                    console.log(arg0 + \" => \" + arg1);\n                });\n\n                const publicationJson = await response.json();\n                console.log(publicationJson);\n\n                publicationJson.spine.forEach((spineItem: any) => {\n                    const spineItemLink = document.createElement(\"a\");\n                    const spineItemLinkHref = publicationJsonUrl + \"/../\" + spineItem.href;\n                    spineItemLink.setAttribute(\"href\", spineItemLinkHref);\n                    spineItemLink.addEventListener(\"click\", (event) => {\n                        webview1.setAttribute(\"src\", spineItemLinkHref);\n                        event.preventDefault();\n                    });\n                    spineItemLink.appendChild(document.createTextNode(spineItem.href));\n                    document.body.appendChild(spineItemLink);\n                    document.body.appendChild(document.createElement(\"br\"));\n                });\n\n                //     const spineItemUrl = publicationJsonUrl + \"/../\" + publicationJson.spine[0].href;\n                //     console.log(spineItemUrl);\n                //     webview1.setAttribute(\"src\", spineItemUrl);\n\n                // const a = document.querySelector(\"html > body > a\");\n                // a.click();\n            } catch (e) {\n                console.log(e);\n            }\n        }, 5000);\n    });\n    webview2.setAttribute(\"id\", \"webview2\");\n    webview2.setAttribute(\"style\",\n        \"display: inline-flex; visibilityx: hidden; width: 100%; height: 50px; \" +\n        \"box-sizing: border-box; border: 2px solid magenta\");\n    webview2.setAttribute(\"webpreferences\",\n        \"nodeIntegration=0, nodeIntegrationInWorker=0, sandbox=0, \" +\n        \"contextIsolation=0, webSecurity=1, allowRunningInsecureContent=0\");\n    webview2.setAttribute(\"preload\", \"./preload.js\");\n    document.body.appendChild(webview2);\n\n    // const swBootUrl = publicationJsonUrl + \"/show/metadata\";\n    // const swBootUrl = publicationJsonUrl;\n    const swBootUrl = publicationJsonUrl + \"/../\";\n    console.log(swBootUrl);\n\n    webview2.setAttribute(\"src\", swBootUrl);\n});\n","export interface IStringMap { [key: string]: string; }\n\nexport const getURLQueryParams = (): IStringMap => {\n    const params: IStringMap = {};\n\n    let query = window.location.search;\n    if (query && query.length) {\n        query = query.substring(1);\n        const keyParams = query.split(\"&\");\n        keyParams.forEach((keyParam) => {\n            const keyVal = keyParam.split(\"=\");\n            if (keyVal.length > 1) {\n                params[keyVal[0]] = decodeURIComponent(keyVal[1]);\n            }\n        });\n    }\n\n    return params;\n};\n"]}