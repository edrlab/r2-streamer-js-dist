{"version":3,"file":"server-opds1-2.js","sourceRoot":"","sources":["../../../../src/http/server-opds1-2.ts"],"names":[],"mappings":";;AAAA,+CAAsD;AACtD,2CAAwC;AAExC,mDAA0F;AAC1F,gDAAuD;AACvD,2DAAkE;AAClE,wDAA2C;AAC3C,qCAAqC;AACrC,gCAAgC;AAChC,mCAAmC;AACnC,0CAA0C;AAC1C,iCAAiC;AACjC,mCAAmC;AACnC,yDAAyD;AACzD,qCAAyC;AACzC,iCAAiC;AAGjC,qFAAyE;AAEzE,MAAM,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAEvC,sBAA6B,OAAe,EAAE,SAA8B;IAGxE,MAAM,SAAS,GAAG;;;;;;;;;;;;;;;;;;;;;;CAsBrB,CAAC;IAEE,MAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IACvD,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IAErC,YAAY,CAAC,GAAG,CAAC,sDAAqB,CAAC,CAAC;IAExC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAqB,EAAE,GAAqB,EAAE,EAAE;QAEnE,IAAI,IAAI,GAAG,cAAc,CAAC;QAC1B,IAAI,IAAI,4EAA4E;YAChF,8DAA8D;YAC9D,kDAAkD;YAClD,oBAAoB;YACpB,+CAA+C;YAC/C,mBAAmB;YAGnB,eAAe;YACf,oEAAoE;YACpE,gCAAgC,CAAC;QACrC,IAAI,IAAI,SAAS,CAAC;QAElB,IAAI,IAAI,sCAAsC,CAAC;QAE/C,IAAI,IAAI,sCAAsC;YAC1C,mDAAmD;YACnD,0CAA0C,CAAC;QAE/C,IAAI,IAAI,gBAAgB,CAAC;QAEzB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,YAAY,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;QAC9D,GAAW,CAAC,UAAU,GAAG,KAAK,CAAC;QAChC,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;IAEH,YAAY,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,EAAE,GAAoB,EAAE,GAAqB,EAAE,EAAE;QAEtF,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,MAAM,CAAC,UAAU,GAAI,GAAW,CAAC,UAAU,CAAC;QACpD,CAAC;QAED,MAAM,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC;QAIzC,KAAK,CAAC,UAAU,CAAC,CAAC;QAElB,MAAM,YAAY,GAAG,GAAG,CAAC,MAAM;YAC3B,GAAG,CAAC,QAAQ,KAAK,OAAO;YACxB,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,OAAO,CAGvC;QACL,MAAM,OAAO,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;cACjD,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;QAEvB,MAAM,OAAO,GAAG,CAAC,GAAQ,EAAE,EAAE;YACzB,KAAK,CAAC,GAAG,CAAC,CAAC;YACX,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,6CAA6C;kBAC5D,GAAG,GAAG,oBAAoB,CAAC,CAAC;QACtC,CAAC,CAAC;QAEF,MAAM,OAAO,GAAG,KAAK,EAAE,QAAiC,EAAE,EAAE;YAMxD,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,GAAG,IAAI,QAAQ,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnF,OAAO,CAAC,YAAY,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;gBAC5C,MAAM,CAAC;YACX,CAAC;YAED,IAAI,YAAoB,CAAC;YACzB,IAAI,CAAC;gBACD,YAAY,GAAG,MAAM,mCAAqB,CAAC,QAAQ,CAAC,CAAC;YACzD,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACX,KAAK,CAAC,GAAG,CAAC,CAAC;gBACX,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,6CAA6C;sBAC5D,GAAG,GAAG,oBAAoB,CAAC,CAAC;gBAClC,MAAM,CAAC;YACX,CAAC;YACD,MAAM,WAAW,GAAG,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAClD,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAExE,MAAM,OAAO,GAAG,WAAW,CAAC,eAAe,CAAC,SAAS,KAAK,OAAO,CAAC;YAClE,IAAI,KAAuB,CAAC;YAE5B,IAAI,KAA2B,CAAC;YAChC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAGV,MAAM,GAAG,GAAG,8CAA8C,CAAC;gBAC3D,KAAK,CAAC,GAAG,CAAC,CAAC;gBAEX,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,6CAA6C;sBAC5D,GAAG,GAAG,oBAAoB,CAAC,CAAC;gBAClC,MAAM,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAK,GAAG,mBAAG,CAAC,WAAW,CAAO,WAAW,EAAE,WAAI,CAAC,CAAC;gBAEjD,IAAI,CAAC;oBACD,KAAK,GAAG,+BAAmB,CAAC,KAAK,CAAC,CAAC;gBAMvC,CAAC;gBAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACX,KAAK,CAAC,+BAA+B,CAAC,CAAC;oBACvC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAEX,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,6CAA6C;0BAC5D,GAAG,GAAG,oBAAoB,CAAC,CAAC;oBAClC,MAAM,CAAC;gBACX,CAAC;YACL,CAAC;YAED,MAAM,IAAI,GAAG,CAAC,GAAQ,EAAE,EAAE;gBACtB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,QAAQ;uBACtC,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;oBAC7D,CAAC,GAAG,CAAC,IAAI,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,QAAQ;2BAClC,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,CACpE,CAAC,CAAC,CAAC;oBACC,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAc,CAAC,CAAC,CAAC,GAAG,CAAC,IAAc,CAAC;oBAClE,EAAE,CAAC,CAAC,CAAC,iBAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACpB,QAAQ,GAAG,yBAAc,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;oBACpD,CAAC;oBACD,GAAG,CAAC,QAAQ,GAAG,OAAO;wBAClB,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;wBAC9D,UAAU,GAAG,qCAA0B,CAAC,QAAQ,CAAC,CAAC;gBAC1D,CAAC;YACL,CAAC,CAAC;YAEF,MAAM,YAAY,GAAG,cAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC7C,+BAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAExC,MAAM,YAAY,GAAG,cAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC7C,+BAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAExC,MAAM,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;YAChC,MAAM,eAAe,GAAG,UAAU,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YACtD,MAAM,eAAe,GAAG,UAAU,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YAEtD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc;gBAC/B,0DAA0D;gBAC1D,gBAAgB,GAAG,UAAU,GAAG,KAAK,GAAG,UAAU,GAAG,WAAW;gBAChE,MAAM;gBACN,wEAAwE;gBACxE,yCAAyC;gBACzC,sDAAsD;gBACtD,aAAa;gBACb,mCAAmC;gBACnC,6EAA6E;gBAC7E,eAAe,GAAG,aAAa;gBAC/B,mCAAmC;gBACnC,6EAA6E;gBAC7E,eAAe,GAAG,aAAa;gBAC/B,eAAe;gBACf,UAAU;gBAIV,gBAAgB,CAAC,CAAC;QAC1B,CAAC,CAAC;QAIF,MAAM,sBAAsB,GAAG,IAAI,CAAC;QACpC,EAAE,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC;gBACR,OAAO,EAAE,EAAE;gBACX,MAAM,EAAE,KAAK;gBACb,GAAG,EAAE,UAAU;aAClB,CAAC;iBACG,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;iBACvB,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,QAAqC,CAAC;YAC1C,IAAI,CAAC;gBAED,QAAQ,GAAG,MAAM,cAAc,CAAC;oBAC5B,OAAO,EAAE,EAAE;oBACX,MAAM,EAAE,KAAK;oBACb,uBAAuB,EAAE,IAAI;oBAC7B,GAAG,EAAE,UAAU;iBAClB,CAAC,CAAC;YACP,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACX,OAAO,CAAC,GAAG,CAAC,CAAC;gBACb,MAAM,CAAC;YACX,CAAC;YAED,MAAM,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;AAC3C,CAAC;AAlOD,oCAkOC","sourcesContent":["import { convertOpds1ToOpds2 } from \"@opds/converter\";\r\nimport { OPDS } from \"@opds/opds1/opds\";\r\nimport { OPDSFeed } from \"@opds/opds2/opds2\";\r\nimport { encodeURIComponent_RFC3986, ensureAbsolute, isHTTP } from \"@utils/http/UrlUtils\";\r\nimport { traverseJsonObjects } from \"@utils/JsonUtils\";\r\nimport { streamToBufferPromise } from \"@utils/stream/BufferUtils\";\r\nimport { XML } from \"@utils/xml-js-mapper\";\r\nimport * as css2json from \"css2json\";\r\nimport * as debug_ from \"debug\";\r\nimport * as express from \"express\";\r\nimport * as jsonMarkup from \"json-markup\";\r\nimport * as morgan from \"morgan\";\r\nimport * as request from \"request\";\r\nimport * as requestPromise from \"request-promise-native\";\r\nimport { JSON as TAJSON } from \"ta-json\";\r\nimport * as xmldom from \"xmldom\";\r\n\r\nimport { Server } from \"./server\";\r\nimport { trailingSlashRedirect } from \"./server-trailing-slash-redirect\";\r\n\r\nconst debug = debug_(\"r2:server:opds\");\r\n\r\nexport function serverOPDS12(_server: Server, topRouter: express.Application) {\r\n\r\n    // https://github.com/mafintosh/json-markup/blob/master/style.css\r\n    const jsonStyle = `\r\n.json-markup {\r\n    line-height: 17px;\r\n    font-size: 13px;\r\n    font-family: monospace;\r\n    white-space: pre;\r\n}\r\n.json-markup-key {\r\n    font-weight: bold;\r\n}\r\n.json-markup-bool {\r\n    color: firebrick;\r\n}\r\n.json-markup-string {\r\n    color: green;\r\n}\r\n.json-markup-null {\r\n    color: gray;\r\n}\r\n.json-markup-number {\r\n    color: blue;\r\n}\r\n`;\r\n\r\n    const routerOPDS12 = express.Router({ strict: false });\r\n    routerOPDS12.use(morgan(\"combined\"));\r\n\r\n    routerOPDS12.use(trailingSlashRedirect);\r\n\r\n    routerOPDS12.get(\"/\", (_req: express.Request, res: express.Response) => {\r\n\r\n        let html = \"<html><head>\";\r\n        html += `<script type=\"text/javascript\">function encodeURIComponent_RFC3986(str) { ` +\r\n            `return encodeURIComponent(str).replace(/[!'()*]/g, (c) => { ` +\r\n            `return \"%\" + c.charCodeAt(0).toString(16); }); }` +\r\n            `function go(evt) {` +\r\n            `if (evt) { evt.preventDefault(); } var url = ` +\r\n            `location.origin +` +\r\n            // `location.protocol + '//' + location.hostname + ` +\r\n            // `(location.port ? (':' + location.port) : '') + ` +\r\n            ` '/opds12/' +` +\r\n            ` encodeURIComponent_RFC3986(document.getElementById(\"url\").value);` +\r\n            `location.href = url;}</script>`;\r\n        html += \"</head>\";\r\n\r\n        html += \"<body><h1>OPDS 1 -> 2 converter</h1>\";\r\n\r\n        html += `<form onsubmit=\"go();return false;\">` +\r\n            `<input type=\"text\" name=\"url\" id=\"url\" size=\"80\">` +\r\n            `<input type=\"submit\" value=\"Go!\"></form>`;\r\n\r\n        html += \"</body></html>\";\r\n\r\n        res.status(200).send(html);\r\n    });\r\n\r\n    routerOPDS12.param(\"urlEncoded\", (req, _res, next, value, _name) => {\r\n        (req as any).urlEncoded = value;\r\n        next();\r\n    });\r\n\r\n    routerOPDS12.get(\"/:urlEncoded(*)\", async (req: express.Request, res: express.Response) => {\r\n\r\n        if (!req.params.urlEncoded) {\r\n            req.params.urlEncoded = (req as any).urlEncoded;\r\n        }\r\n\r\n        const urlDecoded = req.params.urlEncoded;\r\n        // if (urlDecoded.substr(-1) === \"/\") {\r\n        //     urlDecoded = urlDecoded.substr(0, urlDecoded.length - 1);\r\n        // }\r\n        debug(urlDecoded);\r\n\r\n        const isSecureHttp = req.secure ||\r\n            req.protocol === \"https\" ||\r\n            req.get(\"X-Forwarded-Proto\") === \"https\"\r\n            // (req.headers.host && req.headers.host.indexOf(\"now.sh\") >= 0) ||\r\n            // (req.hostname && req.hostname.indexOf(\"now.sh\") >= 0)\r\n            ;\r\n        const rootUrl = (isSecureHttp ? \"https://\" : \"http://\")\r\n            + req.headers.host;\r\n\r\n        const failure = (err: any) => {\r\n            debug(err);\r\n            res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                + err + \"</p></body></html>\");\r\n        };\r\n\r\n        const success = async (response: request.RequestResponse) => {\r\n\r\n            // Object.keys(response.headers).forEach((header: string) => {\r\n            //     debug(header + \" => \" + response.headers[header]);\r\n            // });\r\n\r\n            if (response.statusCode && (response.statusCode < 200 || response.statusCode >= 300)) {\r\n                failure(\"HTTP CODE \" + response.statusCode);\r\n                return;\r\n            }\r\n\r\n            let responseData: Buffer;\r\n            try {\r\n                responseData = await streamToBufferPromise(response);\r\n            } catch (err) {\r\n                debug(err);\r\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                    + err + \"</p></body></html>\");\r\n                return;\r\n            }\r\n            const responseStr = responseData.toString(\"utf8\");\r\n            const responseXml = new xmldom.DOMParser().parseFromString(responseStr);\r\n            // debug(responseXml);\r\n            const isEntry = responseXml.documentElement.localName === \"entry\";\r\n            let opds1: OPDS | undefined;\r\n            // let opdsEntry: Entry | undefined;\r\n            let opds2: OPDSFeed | undefined;\r\n            if (isEntry) {\r\n                // opdsEntry = XML.deserialize<Entry>(responseXml, Entry);\r\n\r\n                const err = \"OPDS Entry as top-level feed, not supported.\";\r\n                debug(err);\r\n\r\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                    + err + \"</p></body></html>\");\r\n                return;\r\n            } else {\r\n                opds1 = XML.deserialize<OPDS>(responseXml, OPDS);\r\n\r\n                try {\r\n                    opds2 = convertOpds1ToOpds2(opds1);\r\n                    // debug(opds2);\r\n\r\n                    // // breakLength: 100  maxArrayLength: undefined\r\n                    // console.log(util.inspect(opds2,\r\n                    //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\r\n                } catch (err) {\r\n                    debug(\"OPDS 1 -> 2 conversion FAILED\");\r\n                    debug(err);\r\n\r\n                    res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                        + err + \"</p></body></html>\");\r\n                    return;\r\n                }\r\n            }\r\n\r\n            const funk = (obj: any) => {\r\n                if ((obj.href && typeof obj.href === \"string\"\r\n                    && obj.type && obj.type.indexOf(\"application/atom+xml\") >= 0) ||\r\n                    (obj.Href && typeof obj.Href === \"string\"\r\n                        && obj.Type && obj.Type.indexOf(\"application/atom+xml\") >= 0)\r\n                ) {\r\n                    let fullHref = obj.href ? obj.href as string : obj.Href as string;\r\n                    if (!isHTTP(fullHref)) {\r\n                        fullHref = ensureAbsolute(urlDecoded, fullHref);\r\n                    }\r\n                    obj.__href__ = rootUrl +\r\n                        req.originalUrl.substr(0, req.originalUrl.indexOf(\"/opds12/\")) +\r\n                        \"/opds12/\" + encodeURIComponent_RFC3986(fullHref);\r\n                }\r\n            };\r\n\r\n            const jsonObjOPDS1 = TAJSON.serialize(opds1);\r\n            traverseJsonObjects(jsonObjOPDS1, funk);\r\n\r\n            const jsonObjOPDS2 = TAJSON.serialize(opds2);\r\n            traverseJsonObjects(jsonObjOPDS2, funk);\r\n\r\n            const css = css2json(jsonStyle);\r\n            const jsonPrettyOPDS1 = jsonMarkup(jsonObjOPDS1, css);\r\n            const jsonPrettyOPDS2 = jsonMarkup(jsonObjOPDS2, css);\r\n\r\n            res.status(200).send(\"<html><body>\" +\r\n                \"<h1>OPDS2 JSON feed (converted from OPDS1 XML/ATOM)</h1>\" +\r\n                \"<h2><a href=\\\"\" + urlDecoded + \"\\\">\" + urlDecoded + \"</a></h2>\" +\r\n                \"<hr>\" +\r\n                \"<table border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"90%\\\" \" +\r\n                \"style=\\\"table-layout:fixed;width:90%\\\">\" +\r\n                \"<thead><tr><th>OPDS1</th><th>OPDS2</th></tr></thead>\" +\r\n                \"<tbody><tr>\" +\r\n                \"<td valign=\\\"top\\\" width=\\\"50%\\\">\" +\r\n                \"<div style=\\\"overflow-x: auto;margin:0;padding:0;width:100%;height:auto;\\\">\" +\r\n                jsonPrettyOPDS1 + \"</div></td>\" +\r\n                \"<td valign=\\\"top\\\" width=\\\"50%\\\">\" +\r\n                \"<div style=\\\"overflow-x: auto;margin:0;padding:0;width:100%;height:auto;\\\">\" +\r\n                jsonPrettyOPDS2 + \"</div></td>\" +\r\n                \"</tbody></tr>\" +\r\n                \"</table>\" +\r\n                // \"<p><pre>\" + jsonPretty + \"</pre></p>\" +\r\n                // \"<hr><p><pre>\" + jsonStr + \"</pre></p>\" +\r\n                // \"<p><pre>\" + dumpStr + \"</pre></p>\" +\r\n                \"</body></html>\");\r\n        };\r\n\r\n        // No response streaming! :(\r\n        // https://github.com/request/request-promise/issues/90\r\n        const needsStreamingResponse = true;\r\n        if (needsStreamingResponse) {\r\n            request.get({\r\n                headers: {},\r\n                method: \"GET\",\r\n                uri: urlDecoded,\r\n            })\r\n                .on(\"response\", success)\r\n                .on(\"error\", failure);\r\n        } else {\r\n            let response: requestPromise.FullResponse;\r\n            try {\r\n                // tslint:disable-next-line:await-promise no-floating-promises\r\n                response = await requestPromise({\r\n                    headers: {},\r\n                    method: \"GET\",\r\n                    resolveWithFullResponse: true,\r\n                    uri: urlDecoded,\r\n                });\r\n            } catch (err) {\r\n                failure(err);\r\n                return;\r\n            }\r\n\r\n            await success(response);\r\n        }\r\n    });\r\n\r\n    topRouter.use(\"/opds12\", routerOPDS12);\r\n}\r\n"]}