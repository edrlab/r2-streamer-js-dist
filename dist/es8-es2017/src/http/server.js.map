{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../../src/http/server.ts"],"names":[],"mappings":";;AAOA,+CAA+C;AAC/C,iCAAiC;AACjC,yBAAyB;AACzB,6BAA6B;AAC7B,+BAA+B;AAC/B,6BAA6B;AAG7B,6CAA6C;AAC7C,mEAAqE;AACrE,mDAA0E;AAC1E,qCAAqC;AACrC,gCAAgC;AAChC,mCAAmC;AACnC,0CAA0C;AAC1C,qCAAyC;AACzC,6BAAkC;AAElC,sDAA+E;AAC/E,+CAA0G;AAC1G,mDAA+C;AAC/C,+DAA2D;AAC3D,iEAA6D;AAC7D,+CAA2C;AAC3C,qDAAgD;AAChD,iDAA6C;AAC7C,6CAAyC;AACzC,6CAAyC;AAEzC,MAAM,KAAK,GAAG,MAAM,CAAC,yBAAyB,CAAC,CAAC;AAChD,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAEtC,MAAM,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC;AAK1F,MAAM,SAAS,GAAG;;;;;;;;;;;;;;;;;;;;;;CAsBjB,CAAC;AAeF;IAuBI,YAAY,OAAwB;QAjBpB,kBAAa,GAAG,IAAI,CAAC;QACrB,gBAAW,GAAG,IAAI,CAAC;QAkB/B,IAAI,CAAC,cAAc,GAAG,OAAO,IAAI,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC;QACzF,IAAI,CAAC,iBAAiB,GAAG,OAAO,IAAI,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,KAAK,CAAC;QAClG,IAAI,CAAC,mBAAmB,GAAG,OAAO,IAAI,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,KAAK,CAAC;QACxG,IAAI,CAAC,WAAW,GAAG,OAAO,IAAI,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC;QAEhF,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;QACtC,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC;QAC5C,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;QAEtC,IAAI,CAAC,gBAAgB,GAAG,iBAAW,CAAC,EAAE,MAAM,EAAE,iBAAiB,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAErF,IAAI,CAAC,UAAU,GAAG,OAAO,EAAE,CAAC;QAG5B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAoB,EAAE,GAAqB,EAAE,IAA0B,EAAE,EAAE;YAE5F,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;gBACnB,IAAI,EAAE,CAAC;gBACP,OAAO;aACV;YAeD,IAAI,MAAM,GAAG,IAAI,CAAC;YAElB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ;gBAC3C,IAAI,CAAC,UAAU,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;gBAI5D,IAAI,EAAqB,CAAC;gBAC1B,IAAI,MAAM,EAAE;oBACR,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;iBACzB;gBACD,IAAI,KAAK,GAAG,CAAC,CAAC;gBAEd,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC;gBAE5C,MAAM,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBAC7D,IAAI,SAAS,EAAE;oBACX,MAAM,UAAU,GAAG,IAAI,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;oBAInD,MAAM,SAAS,GAAG,UAAU,CAAC;oBAE7B,MAAM,UAAU,GAAa,EAAE,CAAC;oBAChC,MAAM,aAAa,GAAG,MAAM,CAAC,gBAAgB,CAAC,aAAa,EACvD,IAAI,CAAC,UAAU,CAAC,QAAQ,EACxB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;oBAClC,aAAa,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;oBACpC,MAAM,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;oBAC9C,IAAI,KAAK,EAAE;wBACP,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC1B;oBACD,MAAM,KAAK,GAAG,aAAa,CAAC,KAAK,EAAE,CAAC;oBACpC,IAAI,KAAK,EAAE;wBACP,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC1B;oBACD,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBAC5C,MAAM,aAAa,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBACtD,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM,GAAG,aAAa,CAAC;oBAC9C,MAAM,YAAY,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAE/D,IAAI;wBACA,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;wBAC/C,IAAI,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC;wBAC5B,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;wBAGhC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;wBACvB,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC;wBAKnB,IAAI,KAAK,IAAI,IAAI,EAAE;4BACf,MAAM,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;4BAC/B,IAAI,CAAC,GAAG,CAAC,EAAE;gCACP,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;6BAC1B;4BACD,IAAI,GAAG,KAAK,QAAQ,EAAE;gCAClB,MAAM,GAAG,KAAK,CAAC;6BAClB;yBACJ;qBACJ;oBAAC,OAAO,GAAG,EAAE;wBACV,KAAK,CAAC,GAAG,CAAC,CAAC;wBACX,KAAK,CAAC,YAAY,CAAC,CAAC;qBACvB;iBACJ;gBAED,IAAI,MAAM,EAAE;oBACR,MAAM,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBAC9B,MAAM,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;oBACtB,MAAM,WAAW,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC1B,MAAM,YAAY,GAAG,WAAW,GAAG,GAAG,CAAC;oBAKvC,UAAU,CAAC,UAAU,KAAK,OAAO,OAAO,KAAK,YAAY,QAAQ,QAAQ,IAAI,CAAC,CAAC;iBAClF;aACJ;YAED,IAAI,MAAM,EAAE;gBACR,KAAK,CAAC,0DAA0D,CAAC,CAAC;gBAClE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAKf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAEhB,GAAG,CAAC,GAAG,EAAE,CAAC;gBACV,OAAO;aACV;YAED,IAAI,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;QAGH,MAAM,aAAa,GAAG;YAClB,IAAI,EAAE,KAAK;SACd,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACtB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC,MAAM,CAAC,0BAA0B,EAAE,aAAa,CAAC,CAAC,CAAC;YAC9F,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,CAAC,MAAM,CAAC,6BAA6B,EAAE,aAAa,CAAC,CAAC,CAAC;SACvG;QAED,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAqB,EAAE,GAAqB,EAAE,EAAE;YAEtE,IAAI,IAAI,GAAG,mCAAmC,CAAC;YAE/C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC9B,MAAM,cAAc,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAE1D,IAAI,IAAI,aAAa;sBACf,CAAC,iBAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;sBACxC,kCAAkC,GAAG,qCAA0B,CAAC,cAAc,CAAC;sBAC/E,IAAI,GAAG,QAAQ,GAAG,cAAc,GAAG,UAAU,CAAC;YACxD,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACnB,IAAI,IAAI,4DAA4D,CAAC;aACxE;YACD,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;gBAC3B,IAAI,IAAI,yEAAyE,CAAC;aACrF;YACD,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACnB,IAAI,IAAI,uEAAuE,CAAC;gBAChF,IAAI,IAAI,6EAA6E,CAAC;aACzF;YACD,IAAI,IAAI,uEAAuE,CAAC;YAChF,IAAI,IAAI,gBAAgB,CAAC;YAEzB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,sBAAQ,EAAE,GAAG,GAAG,sBAAQ,GAAG,GAAG,GAAG,mBAAK,GAAG,IAAI,GAAG,uBAAS,GAAG,GAAG,CAAC,EACvF,CAAC,GAAoB,EAAE,GAAqB,EAAE,EAAE;YAE5C,MAAM,SAAS,GAAG,GAAG,CAAC,MAAkC,CAAC;YAEzD,MAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAK,GAAG,CAAC,KAA6B,CAAC,IAAI,CAAC;YACxF,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAK,GAAG,CAAC,KAA6B,CAAC,IAAI,EAAE;gBAChE,SAAS,CAAC,QAAQ,GAAI,GAAG,CAAC,KAA6B,CAAC,IAAI,CAAC;aAChE;YAED,MAAM,UAAU,GAAG,sBAAsB,CAAC;YAC1C,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE;gBAEhE,MAAM,GAAG,GAAG,wBAAwB,CAAC;gBACrC,KAAK,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC;gBACxB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,6CAA6C;sBAC5D,GAAG,GAAG,oBAAoB,CAAC,CAAC;gBAClC,OAAO;aACV;YAED,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;YAGpC,IAAI,MAAM,EAAE;gBACR,MAAM,UAAU,GAAG,UAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;gBAE5D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc;oBAC/B,sCAAsC;oBACtC,cAAc,GAAG,UAAU,GAAG,YAAY;oBAG1C,gBAAgB,CAAC,CAAC;aACzB;iBAAM;gBACH,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;gBAC1B,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,iCAAiC,CAAC,CAAC;gBAE3D,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAEpD,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAC7C,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACzB,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAEpC,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;gBAC1C,IAAI,KAAK,KAAK,IAAI,EAAE;oBAChB,KAAK,CAAC,yBAAyB,CAAC,CAAC;oBACjC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBAChB,GAAG,CAAC,GAAG,EAAE,CAAC;oBACV,OAAO;iBACV;gBAED,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBAG5B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACjC;QACL,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;YAC3B,sBAAS,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SACpC;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACnB,wBAAU,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAClC,0BAAW,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACnC,6BAAY,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SACvC;QAED,MAAM,gBAAgB,GAAmB,sBAAS,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1E,wCAAkB,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;QAC3C,0CAAmB,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;QAC5C,4BAAY,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;IACzC,CAAC;IAEM,aAAa;QAChB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,IAAqB,EAAE,GAAqB,EAAE,EAAE;YAEhF,MAAM,SAAS,GAAG;;CAE7B,CAAC;YACU,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;YACzC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,UAAU,CAAC,KAAa,EAAE,IAAqB;QAClD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAEM,UAAU,CAAC,KAAe,EAAE,IAAqB;QACpD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAEM,SAAS;QACZ,OAAO,CAAC,OAAO,IAAI,CAAC,UAAU,EAAE,KAAK,WAAW,CAAC;YAC7C,CAAC,OAAO,IAAI,CAAC,UAAU,KAAK,WAAW,CAAC;YACxC,CAAC,OAAO,IAAI,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC;IAClD,CAAC;IAEM,SAAS;QACZ,OAAO,CAAC,OAAO,IAAI,CAAC,UAAU,EAAE,KAAK,WAAW,CAAC;YAC7C,CAAC,OAAO,IAAI,CAAC,WAAW,KAAK,WAAW,CAAC,CAAC;IAClD,CAAC;IAEM,KAAK,CAAC,KAAK,CAAC,IAAY,EAAE,MAAe;QAE5C,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;YAClB,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAgB,CAAC,CAAC;SAC3D;QAED,IAAI,OAAO,GAAW,CAAC,CAAC;QACxB,IAAI;YACA,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAc,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7E;QAAC,OAAO,GAAG,EAAE;YACV,KAAK,CAAC,GAAG,CAAC,CAAC;YACX,OAAO,GAAG,CAAC,CAAC;SACf;QACD,MAAM,CAAC,GAAG,IAAI,IAAI,OAAO,IAAI,IAAI,CAAC;QAClC,KAAK,CAAC,SAAS,IAAI,OAAO,OAAO,eAAe,CAAC,EAAE,CAAC,CAAC;QAErD,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAE5B,OAAO,IAAI,OAAO,CAAa,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;gBACrD,IAAI,QAAqC,CAAC;gBAC1C,IAAI;oBACA,QAAQ,GAAG,MAAM,oCAAsB,EAAE,CAAC;iBAC7C;gBAAC,OAAO,GAAG,EAAE;oBACV,KAAK,CAAC,GAAG,CAAC,CAAC;oBACX,MAAM,CAAC,KAAK,CAAC,CAAC;oBACd,OAAO;iBACV;gBAED,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,EAChF,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE;oBAE5B,IAAI,CAAC,UAAU,GAAG,kBACX,QAAQ,IACX,OAAO,EAAE,WAAW,EACpB,OAAO,EAAE,CAAC,EACV,SAAS,EAAE,OAAO,GACP,CAAC;oBAChB,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAE7B,OAAO,IAAI,OAAO,CAAa,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE;gBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE;oBAEhE,IAAI,CAAC,UAAU,GAAG;wBACd,OAAO,EAAE,WAAW;wBACpB,OAAO,EAAE,CAAC;wBACV,SAAS,EAAE,MAAM;qBACN,CAAC;oBAChB,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;YAIP,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAEM,IAAI;QACP,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;YAClB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACjB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;gBACxB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;aAC/B;YACD,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACzB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;aAChC;YACD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC9B;IACL,CAAC;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAEM,SAAS;QACZ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;YACnB,OAAO,SAAS,CAAC;SACpB;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC/B,IAAI,CAAC,IAAI,EAAE;YACP,OAAO,SAAS,CAAC;SACpB;QAKD,IAAI,IAAI,CAAC,OAAO,KAAK,GAAG,IAAI,IAAI,CAAC,OAAO,KAAK,EAAE,EAAE;YAC7C,OAAO,GAAG,IAAI,CAAC,SAAS,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;SAChD;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,MAAM,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;IAOjE,CAAC;IAEM,eAAe,CAAC,GAAqB;QACxC,GAAG,CAAC,SAAS,CAAC,6BAA6B,EACvC,GAAG,CAAC,CAAC;QAET,GAAG,CAAC,SAAS,CAAC,8BAA8B,EACxC,oBAAoB,CAAC,CAAC;QAE1B,GAAG,CAAC,SAAS,CAAC,8BAA8B,EACxC,sEAAsE,CAAC,CAAC;IAChF,CAAC;IAEM,eAAe,CAAC,IAAc;QACjC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACjB,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBACpC,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC;gBAC5C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC/B;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACpB,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACjD,OAAO,QAAQ,KAAK,gBAAgB,CAAC;QACzC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,kBAAkB,CAAC,IAAc;QACpC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACjB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAC7B,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACR,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC;gBAC5C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAClC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YACpB,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACjD,OAAO,QAAQ,KAAK,gBAAgB,CAAC;QACzC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,eAAe;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAEM,KAAK,CAAC,0BAA0B,CAAC,QAAgB;QAEpD,IAAI,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,EAAE;YAKd,IAAI;gBACA,WAAW,GAAG,MAAM,4CAAuB,CAAC,QAAQ,CAAC,CAAC;aACzD;YAAC,OAAO,GAAG,EAAE;gBACV,KAAK,CAAC,GAAG,CAAC,CAAC;gBACX,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAC9B;YAED,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;SAChD;QAED,OAAO,WAAW,CAAC;IACvB,CAAC;IAEM,mBAAmB,CAAC,QAAgB;QACvC,OAAO,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,WAAW,CAAC;IACnE,CAAC;IAEM,iBAAiB,CAAC,QAAgB;QACrC,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAEM,gBAAgB,CAAC,QAAgB,EAAE,GAAgB;QAEtD,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAE;YACrC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;SAC3C;IACL,CAAC;IAEM,kBAAkB,CAAC,QAAgB;QACtC,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAE;YACpC,MAAM,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YAC7C,IAAI,GAAG,EAAE;gBACL,GAAG,CAAC,WAAW,EAAE,CAAC;aACrB;YACD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC;YAC9C,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;SAC5C;IACL,CAAC;IAEM,mBAAmB;QACtB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YACtD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,gBAAgB;QAEnB,IAAI,IAAI,CAAC,+BAA+B,EAAE;YACtC,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;YACtC,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;gBACtC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;aACxC;SACJ;QAED,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC3B,OAAO,IAAI,CAAC,oBAAoB,CAAC;SACpC;QAED,KAAK,CAAC,iBAAiB,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;YACvC,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE;gBAChC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;gBAErC,IAAI,CAAC,+BAA+B,GAAG,KAAK,CAAC;gBAE7C,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC;gBAC3D,MAAM,IAAI,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC7C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;oBAC9B,MAAM,cAAc,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAC1D,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;gBAEH,KAAK,CAAC,uBAAuB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBAExC,MAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE;oBAC5C,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE;oBAElB,GAAG,EAAE,OAAO,CAAC,GAAG;iBAEnB,CAAC,CAEG;gBACL,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;oBAC7B,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC;gBACH,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;oBAC7B,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC;aACN;YACD,OAAO,SAAS,CAAC;SACpB;QACD,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;QACtC,MAAM,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;QAC7E,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,SAAS,CAAC;SACpB;QACD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAExC,IAAI,CAAC,oBAAoB,GAAG,cAAM,CAAC,WAAW,CAAW,IAAI,EAAE,gBAAQ,CAAC,CAAC;QACzE,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACrC,CAAC;CACJ;AA5iBD,wBA4iBC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as child_process from \"child_process\";\nimport * as crypto from \"crypto\";\nimport * as fs from \"fs\";\nimport * as http from \"http\";\nimport * as https from \"https\";\nimport * as path from \"path\";\n\nimport { Publication } from \"@models/publication\";\nimport { OPDSFeed } from \"@opds/opds2/opds2\";\nimport { PublicationParsePromise } from \"@parser/publication-parser\";\nimport { encodeURIComponent_RFC3986, isHTTP } from \"@utils/http/UrlUtils\";\nimport * as css2json from \"css2json\";\nimport * as debug_ from \"debug\";\nimport * as express from \"express\";\nimport * as jsonMarkup from \"json-markup\";\nimport { JSON as TAJSON } from \"ta-json\";\nimport { tmpNameSync } from \"tmp\";\n\nimport { CertificateData, generateSelfSignedData } from \"../utils/self-signed\";\nimport { IRequestPayloadExtension, IRequestQueryParams, _jsonPath, _show, _version } from \"./request-ext\";\nimport { serverAssets } from \"./server-assets\";\nimport { serverManifestJson } from \"./server-manifestjson\";\nimport { serverMediaOverlays } from \"./server-mediaoverlays\";\nimport { serverOPDS } from \"./server-opds\";\nimport { serverOPDS12 } from \"./server-opds1-2\";\nimport { serverOPDS2 } from \"./server-opds2\";\nimport { serverPub } from \"./server-pub\";\nimport { serverUrl } from \"./server-url\";\n\nconst debug = debug_(\"r2:streamer#http/server\");\nconst debugHttps = debug_(\"r2:https\");\n\nconst IS_DEV = (process.env.NODE_ENV === \"development\" || process.env.NODE_ENV === \"dev\");\n\ninterface IPathPublicationMap { [key: string]: any; }\n\n// https://github.com/mafintosh/json-markup/blob/master/style.css\nconst jsonStyle = `\n.json-markup {\n    line-height: 17px;\n    font-size: 13px;\n    font-family: monospace;\n    white-space: pre;\n}\n.json-markup-key {\n    font-weight: bold;\n}\n.json-markup-bool {\n    color: firebrick;\n}\n.json-markup-string {\n    color: green;\n}\n.json-markup-null {\n    color: gray;\n}\n.json-markup-number {\n    color: blue;\n}\n`;\n\nexport interface ServerData extends CertificateData {\n    urlScheme: string;\n    urlHost: string;\n    urlPort: number;\n}\n\nexport interface IServerOptions {\n    disableReaders?: boolean;\n    disableDecryption?: boolean; /* excludes obfuscated fonts */\n    disableRemotePubUrl?: boolean;\n    disableOPDS?: boolean;\n}\n\nexport class Server {\n    public readonly disableReaders: boolean;\n    public readonly disableDecryption: boolean;\n    public readonly disableRemotePubUrl: boolean;\n    public readonly disableOPDS: boolean;\n\n    public readonly lcpBeginToken = \"*-\";\n    public readonly lcpEndToken = \"-*\";\n\n    private readonly publications: string[];\n    private publicationsOPDSfeed: OPDSFeed | undefined;\n    private publicationsOPDSfeedNeedsUpdate: boolean;\n    private readonly pathPublicationMap: IPathPublicationMap;\n    private creatingPublicationsOPDS: boolean;\n    private readonly opdsJsonFilePath: string;\n\n    private readonly expressApp: express.Application;\n\n    private httpServer: http.Server | undefined;\n    private httpsServer: https.Server | undefined;\n\n    private serverData: ServerData | undefined;\n\n    constructor(options?: IServerOptions) {\n\n        this.disableReaders = options && options.disableReaders ? options.disableReaders : false;\n        this.disableDecryption = options && options.disableDecryption ? options.disableDecryption : false;\n        this.disableRemotePubUrl = options && options.disableRemotePubUrl ? options.disableRemotePubUrl : false;\n        this.disableOPDS = options && options.disableOPDS ? options.disableOPDS : false;\n\n        this.publications = [];\n        this.pathPublicationMap = {};\n        this.publicationsOPDSfeed = undefined;\n        this.publicationsOPDSfeedNeedsUpdate = true;\n        this.creatingPublicationsOPDS = false;\n\n        this.opdsJsonFilePath = tmpNameSync({ prefix: \"readium2-OPDS2-\", postfix: \".json\" });\n\n        this.expressApp = express();\n        // this.expressApp.enable('strict routing');\n\n        this.expressApp.use((req: express.Request, res: express.Response, next: express.NextFunction) => {\n\n            if (!this.isSecured()) {\n                next();\n                return;\n            }\n\n            // let ua = req.get(\"user-agent\");\n            // if (ua) {\n            //     ua = ua.toLowerCase();\n            // }\n\n            // console.log(util.inspect(req,\n            // { showHidden: false,\n            // depth: 1,\n            // colors: true,\n            // customInspect: true,\n            // breakLength: 100,\n            // maxArrayLength: undefined }));\n\n            let doFail = true;\n\n            if (this.serverData && this.serverData.trustKey &&\n                this.serverData.trustCheck && this.serverData.trustCheckIV) {\n\n                // @ts-ignorexx: TS2454 (variable is used before being assigned)\n                // instead: exclamation mark \"definite assignment\"\n                let t1!: [number, number];\n                if (IS_DEV) {\n                    t1 = process.hrtime();\n                }\n                let delta = 0;\n\n                const urlCheck = this.serverUrl() + req.url;\n\n                const base64Val = req.get(\"X-\" + this.serverData.trustCheck);\n                if (base64Val) {\n                    const decodedVal = new Buffer(base64Val, \"base64\"); // .toString(\"utf8\");\n\n                    // const AES_BLOCK_SIZE = 16;\n                    // const iv = decodedVal.slice(0, AES_BLOCK_SIZE);\n                    const encrypted = decodedVal; // .slice(AES_BLOCK_SIZE);\n\n                    const decrypteds: Buffer[] = [];\n                    const decryptStream = crypto.createDecipheriv(\"aes-256-cbc\",\n                        this.serverData.trustKey,\n                        this.serverData.trustCheckIV);\n                    decryptStream.setAutoPadding(false);\n                    const buff1 = decryptStream.update(encrypted);\n                    if (buff1) {\n                        decrypteds.push(buff1);\n                    }\n                    const buff2 = decryptStream.final();\n                    if (buff2) {\n                        decrypteds.push(buff2);\n                    }\n                    const decrypted = Buffer.concat(decrypteds);\n                    const nPaddingBytes = decrypted[decrypted.length - 1];\n                    const size = encrypted.length - nPaddingBytes;\n                    const decryptedStr = decrypted.slice(0, size).toString(\"utf8\");\n                    // debug(decryptedStr);\n                    try {\n                        const decryptedJson = JSON.parse(decryptedStr);\n                        let url = decryptedJson.url;\n                        const time = decryptedJson.time;\n\n                        // milliseconds since epoch (midnight, 1 Jan 1970)\n                        const now = Date.now(); // +new Date()\n                        delta = now - time;\n\n                        // 3-second time window between HTTP header creation and consumption\n                        // this should account for plenty of hypothetical server latency\n                        // (typical figures way under 100ms, but there are occasional high-load spikes)\n                        if (delta <= 3000) {\n                            const i = url.lastIndexOf(\"#\");\n                            if (i > 0) {\n                                url = url.substr(0, i);\n                            }\n                            if (url === urlCheck) {\n                                doFail = false;\n                            }\n                        }\n                    } catch (err) {\n                        debug(err);\n                        debug(decryptedStr);\n                    }\n                }\n\n                if (IS_DEV) {\n                    const t2 = process.hrtime(t1);\n                    const seconds = t2[0];\n                    const nanoseconds = t2[1];\n                    const milliseconds = nanoseconds / 1e6;\n                    // const totalNanoseconds = (seconds * 1e9) + nanoseconds;\n                    // const totalMilliseconds = totalNanoseconds / 1e6;\n                    // const totalSeconds = totalNanoseconds / 1e9;\n\n                    debugHttps(`< B > (${delta}ms) ${seconds}s ${milliseconds}ms [ ${urlCheck} ]`);\n                }\n            }\n\n            if (doFail) {\n                debug(\"############## X-Debug- FAIL ========================== \");\n                debug(req.url);\n                // debug(url);\n                // Object.keys(req.headers).forEach((header: string) => {\n                //     debug(header + \" => \" + req.headers[header]);\n                // });\n                res.status(200);\n                // res.send(\"<html><body> </body></html>\");\n                res.end();\n                return;\n            }\n\n            next();\n        });\n\n        // https://expressjs.com/en/4x/api.html#express.static\n        const staticOptions = {\n            etag: false,\n        };\n\n        if (!this.disableReaders) {\n            this.expressApp.use(\"/readerNYPL\", express.static(\"misc/readers/reader-NYPL\", staticOptions));\n            this.expressApp.use(\"/readerHADRIEN\", express.static(\"misc/readers/reader-HADRIEN\", staticOptions));\n        }\n\n        this.expressApp.get(\"/\", (_req: express.Request, res: express.Response) => {\n\n            let html = \"<html><body><h1>Publications</h1>\";\n\n            this.publications.forEach((pub) => {\n                const filePathBase64 = new Buffer(pub).toString(\"base64\");\n\n                html += \"<p><strong>\"\n                    + (isHTTP(pub) ? pub : path.basename(pub))\n                    + \"</strong><br> => <a href='./pub/\" + encodeURIComponent_RFC3986(filePathBase64)\n                    + \"'>\" + \"./pub/\" + filePathBase64 + \"</a></p>\";\n            });\n            if (!this.disableOPDS) {\n                html += \"<h1>OPDS2 feed</h1><p><a href='./opds2'>CLICK HERE</a></p>\";\n            }\n            if (!this.disableRemotePubUrl) {\n                html += \"<h1>Load HTTP publication URL</h1><p><a href='./url'>CLICK HERE</a></p>\";\n            }\n            if (!this.disableOPDS) {\n                html += \"<h1>Browse HTTP OPDS1 feed</h1><p><a href='./opds'>CLICK HERE</a></p>\";\n                html += \"<h1>Convert OPDS feed v1 to v2</h1><p><a href='./opds12'>CLICK HERE</a></p>\";\n            }\n            html += \"<h1>Server version</h1><p><a href='./version/show'>CLICK HERE</a></p>\";\n            html += \"</body></html>\";\n\n            res.status(200).send(html);\n        });\n\n        this.expressApp.get([\"/\" + _version, \"/\" + _version + \"/\" + _show + \"/:\" + _jsonPath + \"?\"],\n            (req: express.Request, res: express.Response) => {\n\n                const reqparams = req.params as IRequestPayloadExtension;\n\n                const isShow = req.url.indexOf(\"/show\") >= 0 || (req.query as IRequestQueryParams).show;\n                if (!reqparams.jsonPath && (req.query as IRequestQueryParams).show) {\n                    reqparams.jsonPath = (req.query as IRequestQueryParams).show;\n                }\n\n                const gitRevJson = \"../../../gitrev.json\";\n                if (!fs.existsSync(path.resolve(path.join(__dirname, gitRevJson)))) {\n\n                    const err = \"Missing Git rev JSON! \";\n                    debug(err + gitRevJson);\n                    res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                        + err + \"</p></body></html>\");\n                    return;\n                }\n\n                const jsonObj = require(gitRevJson);\n                // debug(jsonObj);\n\n                if (isShow) {\n                    const jsonPretty = jsonMarkup(jsonObj, css2json(jsonStyle));\n\n                    res.status(200).send(\"<html><body>\" +\n                        \"<h1>R2-STREAMER-JS VERSION INFO</h1>\" +\n                        \"<hr><p><pre>\" + jsonPretty + \"</pre></p>\" +\n                        // \"<hr><p><pre>\" + jsonStr + \"</pre></p>\" +\n                        // \"<p><pre>\" + dumpStr + \"</pre></p>\" +\n                        \"</body></html>\");\n                } else {\n                    this.setResponseCORS(res);\n                    res.set(\"Content-Type\", \"application/json; charset=utf-8\");\n\n                    const jsonStr = JSON.stringify(jsonObj, null, \"  \");\n\n                    const checkSum = crypto.createHash(\"sha256\");\n                    checkSum.update(jsonStr);\n                    const hash = checkSum.digest(\"hex\");\n\n                    const match = req.header(\"If-None-Match\");\n                    if (match === hash) {\n                        debug(\"publications.json cache\");\n                        res.status(304); // StatusNotModified\n                        res.end();\n                        return;\n                    }\n\n                    res.setHeader(\"ETag\", hash);\n                    // res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\n\n                    res.status(200).send(jsonStr);\n                }\n            });\n\n        if (!this.disableRemotePubUrl) {\n            serverUrl(this, this.expressApp);\n        }\n        if (!this.disableOPDS) {\n            serverOPDS(this, this.expressApp);\n            serverOPDS2(this, this.expressApp);\n            serverOPDS12(this, this.expressApp);\n        }\n\n        const routerPathBase64: express.Router = serverPub(this, this.expressApp);\n        serverManifestJson(this, routerPathBase64);\n        serverMediaOverlays(this, routerPathBase64);\n        serverAssets(this, routerPathBase64);\n    }\n\n    public preventRobots() {\n        this.expressApp.get(\"/robots.txt\", (_req: express.Request, res: express.Response) => {\n\n            const robotsTxt = `User-agent: *\nDisallow: /\n`;\n            res.header(\"Content-Type\", \"text/plain\");\n            res.status(200).send(robotsTxt);\n        });\n    }\n\n    public expressUse(pathf: string, func: express.Handler) {\n        this.expressApp.use(pathf, func);\n    }\n\n    public expressGet(paths: string[], func: express.Handler) {\n        this.expressApp.get(paths, func);\n    }\n\n    public isStarted(): boolean {\n        return (typeof this.serverInfo() !== \"undefined\") &&\n            (typeof this.httpServer !== \"undefined\") ||\n            (typeof this.httpsServer !== \"undefined\");\n    }\n\n    public isSecured(): boolean {\n        return (typeof this.serverInfo() !== \"undefined\") &&\n            (typeof this.httpsServer !== \"undefined\");\n    }\n\n    public async start(port: number, secure: boolean): Promise<ServerData> {\n\n        if (this.isStarted()) {\n            return Promise.resolve(this.serverInfo() as ServerData);\n        }\n\n        let envPort: number = 0;\n        try {\n            envPort = process.env.PORT ? parseInt(process.env.PORT as string, 10) : 0;\n        } catch (err) {\n            debug(err);\n            envPort = 0;\n        }\n        const p = port || envPort || 3000;\n        debug(`PORT: ${port} || ${envPort} || 3000 => ${p}`);\n\n        if (secure) {\n            this.httpServer = undefined;\n\n            return new Promise<ServerData>(async (resolve, reject) => {\n                let certData: CertificateData | undefined;\n                try {\n                    certData = await generateSelfSignedData();\n                } catch (err) {\n                    debug(err);\n                    reject(\"err\");\n                    return;\n                }\n\n                this.httpsServer = https.createServer({ key: certData.private, cert: certData.cert },\n                    this.expressApp).listen(p, () => {\n\n                        this.serverData = {\n                            ...certData,\n                            urlHost: \"127.0.0.1\",\n                            urlPort: p, // this.httpsServer.address().port\n                            urlScheme: \"https\",\n                        } as ServerData;\n                        resolve(this.serverData);\n                    });\n            });\n        } else {\n            this.httpsServer = undefined;\n\n            return new Promise<ServerData>((resolve, _reject) => {\n                this.httpServer = http.createServer(this.expressApp).listen(p, () => {\n\n                    this.serverData = {\n                        urlHost: \"127.0.0.1\",\n                        urlPort: p, // this.httpsServer.address().port\n                        urlScheme: \"http\",\n                    } as ServerData;\n                    resolve(this.serverData);\n                });\n                // this.httpServer = this.expressApp.listen(p, () => {\n                //     debug(`http://localhost:${p}`);\n                // });\n            });\n        }\n    }\n\n    public stop() {\n        if (this.isStarted()) {\n            if (this.httpServer) {\n                this.httpServer.close();\n                this.httpServer = undefined;\n            }\n            if (this.httpsServer) {\n                this.httpsServer.close();\n                this.httpsServer = undefined;\n            }\n            this.serverData = undefined;\n            this.uncachePublications();\n        }\n    }\n\n    public serverInfo(): ServerData | undefined {\n        return this.serverData;\n    }\n\n    public serverUrl(): string | undefined {\n        if (!this.isStarted()) {\n            return undefined;\n        }\n        const info = this.serverInfo();\n        if (!info) {\n            return undefined;\n        }\n\n        // This is important, because browsers collapse the standard HTTP and HTTPS ports,\n        // and we don't normalise this elsewhere in consumer code!\n        // (which means critical URL prefix matching / syntax comparisons would fail otherwise :(\n        if (info.urlPort === 443 || info.urlPort === 80) {\n            return `${info.urlScheme}://${info.urlHost}`;\n        }\n        return `${info.urlScheme}://${info.urlHost}:${info.urlPort}`;\n\n        // const port = this.httpServer ? this.httpServer.address().port :\n        //     (this.httpsServer ? this.httpsServer.address().port : 0);\n        // return this.isStarted() ?\n        //     `${this.httpsServer ? \"https:\" : \"http:\"}//127.0.0.1:${port}` :\n        //     undefined;\n    }\n\n    public setResponseCORS(res: express.Response) {\n        res.setHeader(\"Access-Control-Allow-Origin\",\n            \"*\");\n\n        res.setHeader(\"Access-Control-Allow-Methods\",\n            \"GET, HEAD, OPTIONS\"); // POST, DELETE, PUT, PATCH\n\n        res.setHeader(\"Access-Control-Allow-Headers\",\n            \"Content-Type, Content-Length, Accept-Ranges, Link, Transfer-Encoding\");\n    }\n\n    public addPublications(pubs: string[]): string[] {\n        pubs.forEach((pub) => {\n            if (this.publications.indexOf(pub) < 0) {\n                this.publicationsOPDSfeedNeedsUpdate = true;\n                this.publications.push(pub);\n            }\n        });\n\n        return pubs.map((pub) => {\n            const pubid = new Buffer(pub).toString(\"base64\");\n            return `/pub/${pubid}/manifest.json`;\n        });\n    }\n\n    public removePublications(pubs: string[]): string[] {\n        pubs.forEach((pub) => {\n            this.uncachePublication(pub);\n            const i = this.publications.indexOf(pub);\n            if (i >= 0) {\n                this.publicationsOPDSfeedNeedsUpdate = true;\n                this.publications.splice(i, 1);\n            }\n        });\n\n        return pubs.map((pub) => {\n            const pubid = new Buffer(pub).toString(\"base64\");\n            return `/pub/${pubid}/manifest.json`;\n        });\n    }\n\n    public getPublications(): string[] {\n        return this.publications;\n    }\n\n    public async loadOrGetCachedPublication(filePath: string): Promise<Publication> {\n\n        let publication = this.cachedPublication(filePath);\n        if (!publication) {\n\n            // const fileName = path.basename(pathBase64Str);\n            // const ext = path.extname(fileName).toLowerCase();\n\n            try {\n                publication = await PublicationParsePromise(filePath);\n            } catch (err) {\n                debug(err);\n                return Promise.reject(err);\n            }\n\n            this.cachePublication(filePath, publication);\n        }\n        // return Promise.resolve(publication);\n        return publication;\n    }\n\n    public isPublicationCached(filePath: string): boolean {\n        return typeof this.cachedPublication(filePath) !== \"undefined\";\n    }\n\n    public cachedPublication(filePath: string): Publication | undefined {\n        return this.pathPublicationMap[filePath];\n    }\n\n    public cachePublication(filePath: string, pub: Publication) {\n        // TODO: implement LRU caching algorithm? Anything smarter than this will do!\n        if (!this.isPublicationCached(filePath)) {\n            this.pathPublicationMap[filePath] = pub;\n        }\n    }\n\n    public uncachePublication(filePath: string) {\n        if (this.isPublicationCached(filePath)) {\n            const pub = this.cachedPublication(filePath);\n            if (pub) {\n                pub.freeDestroy();\n            }\n            this.pathPublicationMap[filePath] = undefined;\n            delete this.pathPublicationMap[filePath];\n        }\n    }\n\n    public uncachePublications() {\n        Object.keys(this.pathPublicationMap).forEach((filePath) => {\n            this.uncachePublication(filePath);\n        });\n    }\n\n    public publicationsOPDS(): OPDSFeed | undefined {\n\n        if (this.publicationsOPDSfeedNeedsUpdate) {\n            this.publicationsOPDSfeed = undefined;\n            if (fs.existsSync(this.opdsJsonFilePath)) {\n                fs.unlinkSync(this.opdsJsonFilePath);\n            }\n        }\n\n        if (this.publicationsOPDSfeed) {\n            return this.publicationsOPDSfeed;\n        }\n\n        debug(`OPDS2.json => ${this.opdsJsonFilePath}`);\n        if (!fs.existsSync(this.opdsJsonFilePath)) {\n            if (!this.creatingPublicationsOPDS) {\n                this.creatingPublicationsOPDS = true;\n\n                this.publicationsOPDSfeedNeedsUpdate = false;\n\n                const jsFile = path.join(__dirname, \"opds2-create-cli.js\");\n                const args = [jsFile, this.opdsJsonFilePath];\n                this.publications.forEach((pub) => {\n                    const filePathBase64 = new Buffer(pub).toString(\"base64\");\n                    args.push(filePathBase64);\n                });\n                // debug(\"SPAWN OPDS2 create: %o\", args);\n                debug(`SPAWN OPDS2-create: ${args[0]}`);\n\n                const child = child_process.spawn(\"node\", args, {\n                    cwd: process.cwd(),\n                    // detached: true,\n                    env: process.env,\n                    // stdio: [\"ignore\"],\n                })\n                    // .unref()\n                    ;\n                child.stdout.on(\"data\", (data) => {\n                    debug(data.toString());\n                });\n                child.stderr.on(\"data\", (data) => {\n                    debug(data.toString());\n                });\n            }\n            return undefined;\n        }\n        this.creatingPublicationsOPDS = false;\n        const jsonStr = fs.readFileSync(this.opdsJsonFilePath, { encoding: \"utf8\" });\n        if (!jsonStr) {\n            return undefined;\n        }\n        const json = global.JSON.parse(jsonStr);\n\n        this.publicationsOPDSfeed = TAJSON.deserialize<OPDSFeed>(json, OPDSFeed);\n        return this.publicationsOPDSfeed;\n    }\n}\n"]}