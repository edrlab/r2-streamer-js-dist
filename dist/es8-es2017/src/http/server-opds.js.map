{"version":3,"file":"server-opds.js","sourceRoot":"","sources":["../../../../src/http/server-opds.ts"],"names":[],"mappings":"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","sourcesContent":["import { OPDS } from \"@opds/opds1/opds\";\nimport { Entry } from \"@opds/opds1/opds-entry\";\nimport { encodeURIComponent_RFC3986, ensureAbsolute } from \"@utils/http/UrlUtils\";\nimport { streamToBufferPromise } from \"@utils/stream/BufferUtils\";\nimport { XML } from \"@utils/xml-js-mapper\";\nimport * as debug_ from \"debug\";\nimport * as express from \"express\";\nimport * as morgan from \"morgan\";\nimport * as request from \"request\";\nimport * as requestPromise from \"request-promise-native\";\nimport * as xmldom from \"xmldom\";\n\nimport { Server } from \"./server\";\nimport { trailingSlashRedirect } from \"./server-trailing-slash-redirect\";\n\nconst debug = debug_(\"r2:streamer#http/server-opds\");\n\nexport function serverOPDS(_server: Server, topRouter: express.Application) {\n\n    const routerOPDS = express.Router({ strict: false });\n    routerOPDS.use(morgan(\"combined\"));\n\n    routerOPDS.use(trailingSlashRedirect);\n\n    routerOPDS.get(\"/\", (_req: express.Request, res: express.Response) => {\n\n        let html = \"<html><head>\";\n        html += `<script type=\"text/javascript\">function encodeURIComponent_RFC3986(str) { ` +\n            `return encodeURIComponent(str).replace(/[!'()*]/g, (c) => { ` +\n            `return \"%\" + c.charCodeAt(0).toString(16); }); }` +\n            `function go(evt) {` +\n            `if (evt) { evt.preventDefault(); } var url = ` +\n            `location.origin +` +\n            // `location.protocol + '//' + location.hostname + ` +\n            // `(location.port ? (':' + location.port) : '') + ` +\n            ` '/opds/' +` +\n            ` encodeURIComponent_RFC3986(document.getElementById(\"url\").value);` +\n            `location.href = url;}</script>`;\n        html += \"</head>\";\n\n        html += \"<body><h1>OPDS feed browser</h1>\";\n\n        html += `<form onsubmit=\"go();return false;\">` +\n            `<input type=\"text\" name=\"url\" id=\"url\" size=\"80\">` +\n            `<input type=\"submit\" value=\"Go!\"></form>`;\n\n        html += \"</body></html>\";\n\n        res.status(200).send(html);\n    });\n\n    routerOPDS.param(\"urlEncoded\", (req, _res, next, value, _name) => {\n        (req as any).urlEncoded = value;\n        next();\n    });\n\n    routerOPDS.get(\"/:urlEncoded(*)\", async (req: express.Request, res: express.Response) => {\n\n        if (!req.params.urlEncoded) {\n            req.params.urlEncoded = (req as any).urlEncoded;\n        }\n\n        const urlDecoded = req.params.urlEncoded;\n        // if (urlDecoded.substr(-1) === \"/\") {\n        //     urlDecoded = urlDecoded.substr(0, urlDecoded.length - 1);\n        // }\n        debug(urlDecoded);\n\n        const failure = (err: any) => {\n            debug(err);\n            res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                + err + \"</p></body></html>\");\n        };\n\n        const success = async (response: request.RequestResponse) => {\n\n            // Object.keys(response.headers).forEach((header: string) => {\n            //     debug(header + \" => \" + response.headers[header]);\n            // });\n\n            if (response.statusCode && (response.statusCode < 200 || response.statusCode >= 300)) {\n                failure(\"HTTP CODE \" + response.statusCode);\n                return;\n            }\n\n            let responseData: Buffer;\n            try {\n                responseData = await streamToBufferPromise(response);\n            } catch (err) {\n                debug(err);\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                    + err + \"</p></body></html>\");\n                return;\n            }\n            const responseStr = responseData.toString(\"utf8\");\n            const responseXml = new xmldom.DOMParser().parseFromString(responseStr);\n            // debug(responseXml);\n            const isEntry = responseXml.documentElement.localName === \"entry\";\n            let opds: OPDS | undefined;\n            let opdsEntry: Entry | undefined;\n            if (isEntry) {\n                opdsEntry = XML.deserialize<Entry>(responseXml, Entry);\n            } else {\n                opds = XML.deserialize<OPDS>(responseXml, OPDS);\n            }\n\n            // // breakLength: 100  maxArrayLength: undefined\n            // console.log(util.inspect(opds,\n            //     { showHidden: false, depth: 1000, colors: true, customInspect: true }));\n\n            let html = \"<html><head>\";\n            html += \"</head>\";\n            html += \"<body><h1>\" + urlDecoded + \"</h1>\";\n            if (opds && opds.Title) {\n                html += \"<h2>\" + opds.Title + \"</h2>\";\n            }\n            if (opdsEntry && opdsEntry.Title) {\n                html += \"<h2>\" + opdsEntry.Title + \"</h2>\";\n            }\n            if (opds && opds.Icon) {\n                const iconUrl = ensureAbsolute(urlDecoded, opds.Icon);\n                html += \"<img src='\" + iconUrl + \"' alt='' />\";\n            }\n            // if (opds.Updated) {\n            //     html += \"<h3>\" + opds.Updated.toUTCString() + \"</h3>\";\n            //     html += \"<h3>\" + opds.Updated.toDateString() + \"</h3>\";\n            //     html += \"<h3>\" + opds.Updated.toISOString() + \"</h3>\";\n            //     html += \"<h3>\" + opds.Updated.toTimeString() + \"</h3>\";\n            // }\n            const links = opds ? opds.Links : (opdsEntry ? opdsEntry.Links : undefined);\n            if (links && links.length) {\n                html += \"<p>\";\n                links.forEach((link) => {\n                    if (link.Type &&\n                        (link.Type.indexOf(\"opds-catalog\") >= 0 || link.Type === \"application/atom+xml\")) {\n                        const linkUrl = ensureAbsolute(urlDecoded, link.Href);\n                        const opdsUrl = req.originalUrl.substr(0, req.originalUrl.indexOf(\"/opds/\"))\n                            + \"/opds/\" + encodeURIComponent_RFC3986(linkUrl);\n\n                        html += \"<a href='\" + opdsUrl\n                            + \"'>\" + link.Href + \"</a> (TITLE: \" + link.Title\n                            + \") [REL: \" + link.Rel + \"]<br/>\";\n                    }\n                });\n                html += \"</p>\";\n            }\n\n            function processEntry(entry: Entry) {\n\n                html += \"<hr/>\";\n                html += \"<div>\";\n                if (opds) {\n                    html += \"<h3>\" + entry.Title + \"</h3>\";\n                }\n                if (entry.Summary) {\n                    if (!entry.SummaryType || entry.SummaryType === \"text\") {\n                        html += \"<strong>\" + entry.Summary + \"</strong>\";\n                    } else if (entry.SummaryType === \"html\") {\n                        html += \"<div>\" + entry.Summary + \"</div>\";\n                    }\n                    html += \"<br/>\";\n                }\n                if (entry.Content) {\n                    if (!entry.ContentType || entry.ContentType === \"text\") {\n                        html += \"<strong>\" + entry.Content + \"</strong>\";\n                    } else if (entry.ContentType === \"html\") {\n                        html += \"<div>\" + entry.Content + \"</div>\";\n                    }\n                    html += \"<br/>\";\n                }\n                if (entry.Links && entry.Links.length) {\n                    let image: string | undefined;\n                    let imageThumbnail: string | undefined;\n                    let epub: string | undefined;\n                    entry.Links.forEach((link) => {\n                        if (link.Type === \"application/epub+zip\") {\n                            epub = link.Href;\n                        }\n                        if (link.HasRel(\"http://opds-spec.org/image\")\n                            || link.HasRel(\"x-stanza-cover-image\")) {\n                            image = link.Href;\n                        }\n                        if (link.HasRel(\"http://opds-spec.org/image/thumbnail\")\n                            || link.HasRel(\"http://opds-spec.org/thumbnail\")\n                            || link.HasRel(\"x-stanza-cover-image-thumbnail\")) {\n                            imageThumbnail = link.Href;\n                        }\n\n                        if (opds && link.Type &&\n                            (link.Type.indexOf(\"opds-catalog\") >= 0 || link.Type === \"application/atom+xml\")) {\n                            const linkUrl = ensureAbsolute(urlDecoded, link.Href);\n                            const opdsUrl = req.originalUrl.substr(0, req.originalUrl.indexOf(\"/opds/\"))\n                                + \"/opds/\" + encodeURIComponent_RFC3986(linkUrl);\n\n                            html += \"<a href='\" + opdsUrl\n                                + \"'>\" + link.Href + \"</a> (TITLE: \" + link.Title\n                                + \") [REL: \" + link.Rel + \"]<br/>\";\n                        }\n                    });\n                    if (imageThumbnail) {\n                        const imageThumbnailUrl = ensureAbsolute(urlDecoded, imageThumbnail);\n                        if (image) {\n                            const imageUrl = ensureAbsolute(urlDecoded, image);\n                            html += \"<a href='\" + imageUrl + \"'><img src='\"\n                                + imageThumbnailUrl + \"' alt='' /></a><br/>\";\n                        } else {\n                            html += \"<img src='\" + imageThumbnailUrl + \"' alt='' /><br/>\";\n                        }\n                    } else if (image) {\n                        const imageUrl = ensureAbsolute(urlDecoded, image);\n                        html += \"<img src='\" + imageUrl + \"' alt='' /><br/>\";\n                    }\n                    if (epub) {\n                        const epub_ = ensureAbsolute(urlDecoded, epub);\n                        const epubUrl = req.originalUrl.substr(0, req.originalUrl.indexOf(\"/opds/\"))\n                            + \"/url/\" + encodeURIComponent_RFC3986(epub_);\n\n                        html += \"<strong><a href='\" + epubUrl + \"'>\" + epub + \"</a></strong>\";\n                    }\n                }\n                html += \"</div>\";\n            }\n\n            if (opds && opds.Entries && opds.Entries.length) {\n                opds.Entries.forEach((entry) => {\n                    processEntry(entry);\n                });\n            }\n            if (opdsEntry) {\n                processEntry(opdsEntry);\n            }\n\n            html += \"</body></html>\";\n\n            res.status(200).send(html);\n        };\n\n        // No response streaming! :(\n        // https://github.com/request/request-promise/issues/90\n        const needsStreamingResponse = true;\n        if (needsStreamingResponse) {\n            request.get({\n                headers: {},\n                method: \"GET\",\n                uri: urlDecoded,\n            })\n                .on(\"response\", success)\n                .on(\"error\", failure);\n        } else {\n            let response: requestPromise.FullResponse;\n            try {\n                // tslint:disable-next-line:await-promise no-floating-promises\n                response = await requestPromise({\n                    headers: {},\n                    method: \"GET\",\n                    resolveWithFullResponse: true,\n                    uri: urlDecoded,\n                });\n            } catch (err) {\n                failure(err);\n                return;\n            }\n\n            await success(response);\n        }\n    });\n\n    topRouter.use(\"/opds\", routerOPDS);\n}\n"]}