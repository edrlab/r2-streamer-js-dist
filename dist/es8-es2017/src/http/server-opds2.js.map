{"version":3,"file":"server-opds2.js","sourceRoot":"","sources":["../../../../src/http/server-opds2.ts"],"names":[],"mappings":";;AAOA,iCAAiC;AAEjC,uDAAkD;AAClD,mDAA8C;AAC9C,gDAAmE;AACnE,qCAAqC;AACrC,gCAAgC;AAChC,mCAAmC;AACnC,0CAA0C;AAC1C,qCAAyC;AAEzC,+CAAgG;AAEhG,qFAAyE;AAEzE,MAAM,KAAK,GAAG,MAAM,CAAC,+BAA+B,CAAC,CAAC;AAEtD,SAAgB,WAAW,CAAC,MAAc,EAAE,SAA8B;IAGtE,MAAM,SAAS,GAAG;;;;;;;;;;;;;;;;;;;;;;CAsBrB,CAAC;IAEE,MAAM,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IAGtD,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,mBAAK,GAAG,IAAI,GAAG,uBAAS,GAAG,GAAG,CAAC,EACvD,CAAC,GAAoB,EAAE,GAAqB,EAAE,EAAE;QAE5C,MAAM,SAAS,GAAG,GAAG,CAAC,MAAkC,CAAC;QAEzD,MAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAK,GAAG,CAAC,KAA6B,CAAC,IAAI,CAAC;QACxF,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAK,GAAG,CAAC,KAA6B,CAAC,IAAI,EAAE;YAChE,SAAS,CAAC,QAAQ,GAAI,GAAG,CAAC,KAA6B,CAAC,IAAI,CAAC;SAChE;QAED,MAAM,WAAW,GAAI,GAAG,CAAC,KAA6B,CAAC,SAAS;YAC3D,GAAG,CAAC,KAA6B,CAAC,SAAS,KAAK,MAAM,CAAC;QAE5D,MAAM,YAAY,GAAG,GAAG,CAAC,MAAM;YAC3B,GAAG,CAAC,QAAQ,KAAK,OAAO;YACxB,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,OAAO,CAGvC;QAEL,MAAM,OAAO,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;cACjD,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;QACvB,MAAM,OAAO,GAAG,OAAO,GAAG,0BAA0B,CAAC;QAErD,MAAM,IAAI,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,EAAE;YACP,MAAM,GAAG,GAAG,6DAA6D,CAAC;YAC1E,KAAK,CAAC,GAAG,CAAC,CAAC;YACX,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,wDAAwD;kBACvE,GAAG,GAAG,oBAAoB,CAAC,CAAC;YAClC,OAAO;SACV;QAED,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE;YAClC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,MAAM,QAAQ,GAAG,IAAI,qBAAQ,EAAE,CAAC;YAChC,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC;YACxB,QAAQ,CAAC,QAAQ,GAAG,uBAAuB,CAAC;YAC5C,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC7B;QAED,SAAS,WAAW,CAAC,IAAY;YAC7B,OAAO,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC;QACpC,CAAC;QAED,SAAS,cAAc,CAAC,OAAY;YAChC,+BAAmB,CAAC,OAAO,EACvB,CAAC,GAAG,EAAE,EAAE;gBACJ,IAAI,GAAG,CAAC,IAAI,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,QAAQ;uBACrC,CAAC,iBAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBAEtB,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;iBACpC;YACL,CAAC,CAAC,CAAC;QACX,CAAC;QAED,IAAI,MAAM,EAAE;YACR,IAAI,cAAc,GAAQ,IAAI,CAAC;YAE/B,IAAI,SAAS,CAAC,QAAQ,EAAE;gBACpB,QAAQ,SAAS,CAAC,QAAQ,EAAE;oBAExB,KAAK,KAAK,CAAC,CAAC;wBACR,cAAc,GAAG,IAAI,CAAC;wBACtB,MAAM;qBACT;oBACD,KAAK,UAAU,CAAC,CAAC;wBACb,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC;wBAC/B,MAAM;qBACT;oBACD,KAAK,OAAO,CAAC,CAAC;wBACV,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC;wBAC5B,MAAM;qBACT;oBACD,KAAK,cAAc,CAAC,CAAC;wBACjB,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC;wBACnC,MAAM;qBACT;oBACD,OAAO,CAAC,CAAC;wBACL,cAAc,GAAG,IAAI,CAAC;qBACzB;iBACJ;aACJ;iBAAM;gBACH,cAAc,GAAG,IAAI,CAAC;aACzB;YAED,IAAI,CAAC,cAAc,EAAE;gBACjB,cAAc,GAAG,EAAE,CAAC;aACvB;YAED,MAAM,OAAO,GAAG,cAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YAEjD,cAAc,CAAC,OAAO,CAAC,CAAC;YAQxB,MAAM,UAAU,GAAG,UAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;YAE5D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc;gBAC/B,0BAA0B;gBAC1B,cAAc,GAAG,UAAU,GAAG,YAAY;gBAG1C,gBAAgB,CAAC,CAAC;SACzB;aAAM;YACH,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAC5B,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,sCAAsC,CAAC,CAAC;YAEhE,MAAM,mBAAmB,GAAG,cAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAEnD,cAAc,CAAC,mBAAmB,CAAC,CAAC;YAEpC,MAAM,mBAAmB,GAAG,WAAW,CAAC,CAAC;gBACrC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAU,CAAC,mBAAmB,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;gBAClE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAE3D,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC7C,QAAQ,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;YACrC,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAEpC,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YAC1C,IAAI,KAAK,KAAK,IAAI,EAAE;gBAChB,KAAK,CAAC,yBAAyB,CAAC,CAAC;gBACjC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAChB,GAAG,CAAC,GAAG,EAAE,CAAC;gBACV,OAAO;aACV;YAED,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAG5B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SAC7C;IACL,CAAC,CAAC,CAAC;IAEP,MAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IAGvD,YAAY,CAAC,GAAG,CAAC,sDAAqB,CAAC,CAAC;IAExC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAoB,EAAE,GAAqB,EAAE,EAAE;QAElE,MAAM,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAEvC,IAAI,gBAAgB,GAAG,GAAG,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,EAAE;YACR,gBAAgB,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACpD;QAED,IAAI,QAAQ,GAAG,gBAAgB;YAC3B,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;YAChD,wBAAwB,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,EAAE;YACR,QAAQ,IAAI,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACzC;QAKD,KAAK,CAAC,aAAa,GAAG,CAAC,WAAW,QAAQ,QAAQ,EAAE,CAAC,CAAC;QACtD,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,YAAY,CAAC,GAAG,CAAC,oBAAoB,EAAE,WAAW,CAAC,CAAC;IAEpD,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;AAC1C,CAAC;AAzMD,kCAyMC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as crypto from \"crypto\";\n\nimport { OPDSLink } from \"@opds/opds2/opds2-link\";\nimport { isHTTP } from \"@utils/http/UrlUtils\";\nimport { sortObject, traverseJsonObjects } from \"@utils/JsonUtils\";\nimport * as css2json from \"css2json\";\nimport * as debug_ from \"debug\";\nimport * as express from \"express\";\nimport * as jsonMarkup from \"json-markup\";\nimport { JSON as TAJSON } from \"ta-json\";\n\nimport { IRequestPayloadExtension, IRequestQueryParams, _jsonPath, _show } from \"./request-ext\";\nimport { Server } from \"./server\";\nimport { trailingSlashRedirect } from \"./server-trailing-slash-redirect\";\n\nconst debug = debug_(\"r2:streamer#http/server-opds2\");\n\nexport function serverOPDS2(server: Server, topRouter: express.Application) {\n\n    // https://github.com/mafintosh/json-markup/blob/master/style.css\n    const jsonStyle = `\n.json-markup {\n    line-height: 17px;\n    font-size: 13px;\n    font-family: monospace;\n    white-space: pre;\n}\n.json-markup-key {\n    font-weight: bold;\n}\n.json-markup-bool {\n    color: firebrick;\n}\n.json-markup-string {\n    color: green;\n}\n.json-markup-null {\n    color: gray;\n}\n.json-markup-number {\n    color: blue;\n}\n`;\n\n    const routerOPDS2 = express.Router({ strict: false });\n    // routerOPDS2.use(morgan(\"combined\", { stream: { write: (msg: any) => debug(msg) } }));\n\n    routerOPDS2.get([\"/\", \"/\" + _show + \"/:\" + _jsonPath + \"?\"],\n        (req: express.Request, res: express.Response) => {\n\n            const reqparams = req.params as IRequestPayloadExtension;\n\n            const isShow = req.url.indexOf(\"/show\") >= 0 || (req.query as IRequestQueryParams).show;\n            if (!reqparams.jsonPath && (req.query as IRequestQueryParams).show) {\n                reqparams.jsonPath = (req.query as IRequestQueryParams).show;\n            }\n\n            const isCanonical = (req.query as IRequestQueryParams).canonical &&\n                (req.query as IRequestQueryParams).canonical === \"true\";\n\n            const isSecureHttp = req.secure ||\n                req.protocol === \"https\" ||\n                req.get(\"X-Forwarded-Proto\") === \"https\"\n                // (req.headers.host && req.headers.host.indexOf(\"now.sh\") >= 0) ||\n                // (req.hostname && req.hostname.indexOf(\"now.sh\") >= 0)\n                ;\n\n            const rootUrl = (isSecureHttp ? \"https://\" : \"http://\")\n                + req.headers.host;\n            const selfURL = rootUrl + \"/opds2/publications.json\";\n\n            const feed = server.publicationsOPDS();\n            if (!feed) {\n                const err = \"Publications OPDS2 feed not available yet, try again later.\";\n                debug(err);\n                res.status(503).send(\"<html><body><p>Resource temporarily unavailable</p><p>\"\n                    + err + \"</p></body></html>\");\n                return;\n            }\n\n            if (!feed.findFirstLinkByRel(\"self\")) {\n                feed.Links = [];\n                const selfLink = new OPDSLink();\n                selfLink.Href = selfURL;\n                selfLink.TypeLink = \"application/opds+json\";\n                selfLink.AddRel(\"self\");\n                feed.Links.push(selfLink);\n            }\n\n            function absoluteURL(href: string): string {\n                return rootUrl + \"/pub/\" + href;\n            }\n\n            function absolutizeURLs(jsonObj: any) {\n                traverseJsonObjects(jsonObj,\n                    (obj) => {\n                        if (obj.href && typeof obj.href === \"string\"\n                            && !isHTTP(obj.href)) {\n                            // obj.href_ = obj.href;\n                            obj.href = absoluteURL(obj.href);\n                        }\n                    });\n            }\n\n            if (isShow) {\n                let objToSerialize: any = null;\n\n                if (reqparams.jsonPath) {\n                    switch (reqparams.jsonPath) {\n\n                        case \"all\": {\n                            objToSerialize = feed;\n                            break;\n                        }\n                        case \"metadata\": {\n                            objToSerialize = feed.Metadata;\n                            break;\n                        }\n                        case \"links\": {\n                            objToSerialize = feed.Links;\n                            break;\n                        }\n                        case \"publications\": {\n                            objToSerialize = feed.Publications;\n                            break;\n                        }\n                        default: {\n                            objToSerialize = null;\n                        }\n                    }\n                } else {\n                    objToSerialize = feed;\n                }\n\n                if (!objToSerialize) {\n                    objToSerialize = {};\n                }\n\n                const jsonObj = TAJSON.serialize(objToSerialize);\n\n                absolutizeURLs(jsonObj);\n\n                // const jsonStr = global.JSON.stringify(jsonObj, null, \"    \");\n\n                // // breakLength: 100  maxArrayLength: undefined\n                // const dumpStr = util.inspect(objToSerialize,\n                //     { showHidden: false, depth: 1000, colors: false, customInspect: true });\n\n                const jsonPretty = jsonMarkup(jsonObj, css2json(jsonStyle));\n\n                res.status(200).send(\"<html><body>\" +\n                    \"<h1>OPDS2 JSON feed</h1>\" +\n                    \"<hr><p><pre>\" + jsonPretty + \"</pre></p>\" +\n                    // \"<hr><p><pre>\" + jsonStr + \"</pre></p>\" +\n                    // \"<p><pre>\" + dumpStr + \"</pre></p>\" +\n                    \"</body></html>\");\n            } else {\n                server.setResponseCORS(res);\n                res.set(\"Content-Type\", \"application/opds+json; charset=utf-8\");\n\n                const publicationsJsonObj = TAJSON.serialize(feed);\n\n                absolutizeURLs(publicationsJsonObj);\n\n                const publicationsJsonStr = isCanonical ?\n                    global.JSON.stringify(sortObject(publicationsJsonObj), null, \"\") :\n                    global.JSON.stringify(publicationsJsonObj, null, \"  \");\n\n                const checkSum = crypto.createHash(\"sha256\");\n                checkSum.update(publicationsJsonStr);\n                const hash = checkSum.digest(\"hex\");\n\n                const match = req.header(\"If-None-Match\");\n                if (match === hash) {\n                    debug(\"publications.json cache\");\n                    res.status(304); // StatusNotModified\n                    res.end();\n                    return;\n                }\n\n                res.setHeader(\"ETag\", hash);\n                // res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\n\n                res.status(200).send(publicationsJsonStr);\n            }\n        });\n\n    const routerOPDS2_ = express.Router({ strict: false });\n    // routerOPDS2_.use(morgan(\"combined\", { stream: { write: (msg: any) => debug(msg) } }));\n\n    routerOPDS2_.use(trailingSlashRedirect);\n\n    routerOPDS2_.get(\"/\", (req: express.Request, res: express.Response) => {\n\n        const i = req.originalUrl.indexOf(\"?\");\n\n        let pathWithoutQuery = req.originalUrl;\n        if (i >= 0) {\n            pathWithoutQuery = pathWithoutQuery.substr(0, i);\n        }\n\n        let redirect = pathWithoutQuery +\n            (pathWithoutQuery.substr(-1) === \"/\" ? \"\" : \"/\") +\n            \"publications.json/show\";\n        if (i >= 0) {\n            redirect += req.originalUrl.substr(i);\n        }\n\n        // No need for CORS with \"show\" URL redirect\n        // server.setResponseCORS(res);\n\n        debug(`REDIRECT: ${req.originalUrl} ==> ${redirect}`);\n        res.redirect(301, redirect);\n    });\n\n    routerOPDS2_.use(\"/publications.json\", routerOPDS2);\n\n    topRouter.use(\"/opds2\", routerOPDS2_);\n}\n"]}