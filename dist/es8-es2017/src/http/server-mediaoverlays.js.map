{"version":3,"file":"server-mediaoverlays.js","sourceRoot":"","sources":["../../../../src/http/server-mediaoverlays.ts"],"names":[],"mappings":"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","sourcesContent":["import * as crypto from \"crypto\";\r\nimport * as path from \"path\";\r\n\r\nimport {\r\n    getAllMediaOverlays,\r\n    getMediaOverlay,\r\n    mediaOverlayURLParam,\r\n    mediaOverlayURLPath,\r\n} from \"@parser/epub\";\r\nimport { encodeURIComponent_RFC3986, isHTTP } from \"@utils/http/UrlUtils\";\r\nimport { sortObject, traverseJsonObjects } from \"@utils/JsonUtils\";\r\nimport * as css2json from \"css2json\";\r\nimport * as debug_ from \"debug\";\r\nimport * as express from \"express\";\r\nimport * as jsonMarkup from \"json-markup\";\r\nimport { JSON as TAJSON } from \"ta-json\";\r\n\r\nimport { Publication } from \"@models/publication\";\r\nimport { Server } from \"./server\";\r\n\r\nconst debug = debug_(\"r2:server:mediaoverlays\");\r\n\r\nexport function serverMediaOverlays(server: Server, routerPathBase64: express.Router) {\r\n\r\n    // https://github.com/mafintosh/json-markup/blob/master/style.css\r\n    const jsonStyle = `\r\n.json-markup {\r\n    line-height: 17px;\r\n    font-size: 13px;\r\n    font-family: monospace;\r\n    white-space: pre;\r\n}\r\n.json-markup-key {\r\n    font-weight: bold;\r\n}\r\n.json-markup-bool {\r\n    color: firebrick;\r\n}\r\n.json-markup-string {\r\n    color: green;\r\n}\r\n.json-markup-null {\r\n    color: gray;\r\n}\r\n.json-markup-number {\r\n    color: blue;\r\n}\r\n`;\r\n\r\n    const routerMediaOverlays = express.Router({ strict: false });\r\n    // routerMediaOverlays.use(morgan(\"combined\"));\r\n\r\n    routerMediaOverlays.get([\"/\", \"/show/:\" + mediaOverlayURLParam + \"?\"],\r\n        async (req: express.Request, res: express.Response) => {\r\n\r\n            if (!req.params.pathBase64) {\r\n                req.params.pathBase64 = (req as any).pathBase64;\r\n            }\r\n            if (!req.params.lcpPass64) {\r\n                req.params.lcpPass64 = (req as any).lcpPass64;\r\n            }\r\n\r\n            const isShow = req.url.indexOf(\"/show\") >= 0 || req.query.show;\r\n\r\n            // debug(req.method);\r\n            const isHead = req.method.toLowerCase() === \"head\";\r\n            if (isHead) {\r\n                debug(\"HEAD !!!!!!!!!!!!!!!!!!!\");\r\n            }\r\n\r\n            const isCanonical = req.query.canonical && req.query.canonical === \"true\";\r\n\r\n            const isSecureHttp = req.secure ||\r\n                req.protocol === \"https\" ||\r\n                req.get(\"X-Forwarded-Proto\") === \"https\"\r\n                // (req.headers.host && req.headers.host.indexOf(\"now.sh\") >= 0) ||\r\n                // (req.hostname && req.hostname.indexOf(\"now.sh\") >= 0)\r\n                ;\r\n\r\n            const pathBase64Str = new Buffer(req.params.pathBase64, \"base64\").toString(\"utf8\");\r\n\r\n            // const fileName = path.basename(pathBase64Str);\r\n            // const ext = path.extname(fileName).toLowerCase();\r\n\r\n            let publication: Publication;\r\n            try {\r\n                publication = await server.loadOrGetCachedPublication(pathBase64Str);\r\n            } catch (err) {\r\n                debug(err);\r\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                    + err + \"</p></body></html>\");\r\n                return;\r\n            }\r\n\r\n            // dumpPublication(publication);\r\n\r\n            const rootUrl = (isSecureHttp ? \"https://\" : \"http://\")\r\n                + req.headers.host + \"/pub/\"\r\n                + (req.params.lcpPass64 ?\r\n                    (server.lcpBeginToken + encodeURIComponent_RFC3986(req.params.lcpPass64) + server.lcpEndToken) :\r\n                    \"\")\r\n                + encodeURIComponent_RFC3986(req.params.pathBase64);\r\n\r\n            function absoluteURL(href: string): string {\r\n                return rootUrl + \"/\" + href;\r\n            }\r\n\r\n            function absolutizeURLs(jsonObject: any) {\r\n                traverseJsonObjects(jsonObject,\r\n                    (obj) => {\r\n                        if (obj.text && typeof obj.text === \"string\"\r\n                            && !isHTTP(obj.text)) {\r\n                            // obj.text_ = obj.text;\r\n                            obj.text = absoluteURL(obj.text);\r\n                        }\r\n\r\n                        if (obj.audio && typeof obj.audio === \"string\"\r\n                            && !isHTTP(obj.audio)) {\r\n                            // obj.audio_ = obj.audio;\r\n                            obj.audio = absoluteURL(obj.audio);\r\n                        }\r\n                    });\r\n            }\r\n\r\n            let objToSerialize: any = null;\r\n\r\n            const resource = isShow ?\r\n                (req.query.show ? req.query.show : req.params[mediaOverlayURLParam]) :\r\n                req.query[mediaOverlayURLParam];\r\n            if (resource && resource !== \"all\") {\r\n                try {\r\n                    objToSerialize = await getMediaOverlay(publication, resource);\r\n                } catch (err) {\r\n                    debug(err);\r\n                    res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                        + err + \"</p></body></html>\");\r\n                    return;\r\n                }\r\n            } else {\r\n                try {\r\n                    objToSerialize = await getAllMediaOverlays(publication);\r\n                } catch (err) {\r\n                    debug(err);\r\n                    res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\r\n                        + err + \"</p></body></html>\");\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (!objToSerialize) {\r\n                objToSerialize = [];\r\n            }\r\n\r\n            let jsonObj = TAJSON.serialize(objToSerialize);\r\n            jsonObj = { \"media-overlay\": jsonObj };\r\n\r\n            if (isShow) {\r\n                absolutizeURLs(jsonObj);\r\n\r\n                // const jsonStr = global.JSON.stringify(jsonObj, null, \"    \");\r\n\r\n                // // breakLength: 100  maxArrayLength: undefined\r\n                // const dumpStr = util.inspect(objToSerialize,\r\n                //     { showHidden: false, depth: 1000, colors: false, customInspect: true });\r\n\r\n                const jsonPretty = jsonMarkup(jsonObj, css2json(jsonStyle));\r\n\r\n                res.status(200).send(\"<html><body>\" +\r\n                    \"<h1>\" + path.basename(pathBase64Str) + \"</h1>\" +\r\n                    \"<p><pre>\" + jsonPretty + \"</pre></p>\" +\r\n                    // \"<p><pre>\" + jsonStr + \"</pre></p>\" +\r\n                    // \"<p><pre>\" + dumpStr + \"</pre></p>\" +\r\n                    \"</body></html>\");\r\n            } else {\r\n                // absolutizeURLs(jsonObj);\r\n\r\n                server.setResponseCORS(res);\r\n                res.set(\"Content-Type\", \"application/vnd.readium.mo+json; charset=utf-8\");\r\n\r\n                const jsonStr = isCanonical ?\r\n                    global.JSON.stringify(sortObject(jsonObj), null, \"\") :\r\n                    global.JSON.stringify(jsonObj, null, \"  \");\r\n\r\n                const checkSum = crypto.createHash(\"sha256\");\r\n                checkSum.update(jsonStr);\r\n                const hash = checkSum.digest(\"hex\");\r\n\r\n                const match = req.header(\"If-None-Match\");\r\n                if (match === hash) {\r\n                    debug(\"smil cache\");\r\n                    res.status(304); // StatusNotModified\r\n                    res.end();\r\n                    return;\r\n                }\r\n\r\n                res.setHeader(\"ETag\", hash);\r\n                // res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\r\n\r\n                res.status(200);\r\n\r\n                if (isHead) {\r\n                    res.end();\r\n                } else {\r\n                    res.send(jsonStr);\r\n                }\r\n            }\r\n        });\r\n\r\n    routerPathBase64.use(\"/:pathBase64/\" + mediaOverlayURLPath, routerMediaOverlays);\r\n}\r\n"]}