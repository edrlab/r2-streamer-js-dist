{"version":3,"file":"server-mediaoverlays.js","sourceRoot":"","sources":["../../../../src/http/server-mediaoverlays.ts"],"names":[],"mappings":"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","sourcesContent":["import * as crypto from \"crypto\";\nimport * as path from \"path\";\n\nimport { mediaOverlayURLParam, mediaOverlayURLPath } from \"@parser/epub\";\nimport { encodeURIComponent_RFC3986, isHTTP } from \"@utils/http/UrlUtils\";\nimport { sortObject, traverseJsonObjects } from \"@utils/JsonUtils\";\nimport * as css2json from \"css2json\";\nimport * as debug_ from \"debug\";\nimport * as express from \"express\";\nimport * as jsonMarkup from \"json-markup\";\nimport { JSON as TAJSON } from \"ta-json\";\n\nimport { Publication } from \"@models/publication\";\nimport { Server } from \"./server\";\n\nconst debug = debug_(\"r2:server:mediaoverlays\");\n\nexport function serverMediaOverlays(server: Server, routerPathBase64: express.Router) {\n\n    // https://github.com/mafintosh/json-markup/blob/master/style.css\n    const jsonStyle = `\n.json-markup {\n    line-height: 17px;\n    font-size: 13px;\n    font-family: monospace;\n    white-space: pre;\n}\n.json-markup-key {\n    font-weight: bold;\n}\n.json-markup-bool {\n    color: firebrick;\n}\n.json-markup-string {\n    color: green;\n}\n.json-markup-null {\n    color: gray;\n}\n.json-markup-number {\n    color: blue;\n}\n`;\n\n    const routerMediaOverlays = express.Router({ strict: false });\n    // routerMediaOverlays.use(morgan(\"combined\"));\n\n    routerMediaOverlays.get([\"/\", \"/show/:\" + mediaOverlayURLParam + \"?\"],\n        async (req: express.Request, res: express.Response) => {\n\n            if (!req.params.pathBase64) {\n                req.params.pathBase64 = (req as any).pathBase64;\n            }\n            if (!req.params.lcpPass64) {\n                req.params.lcpPass64 = (req as any).lcpPass64;\n            }\n\n            const isShow = req.url.indexOf(\"/show\") >= 0 || req.query.show;\n\n            // debug(req.method);\n            const isHead = req.method.toLowerCase() === \"head\";\n            if (isHead) {\n                debug(\"HEAD !!!!!!!!!!!!!!!!!!!\");\n            }\n\n            const isCanonical = req.query.canonical && req.query.canonical === \"true\";\n\n            const isSecureHttp = req.secure ||\n                req.protocol === \"https\" ||\n                req.get(\"X-Forwarded-Proto\") === \"https\"\n                // (req.headers.host && req.headers.host.indexOf(\"now.sh\") >= 0) ||\n                // (req.hostname && req.hostname.indexOf(\"now.sh\") >= 0)\n                ;\n\n            const pathBase64Str = new Buffer(req.params.pathBase64, \"base64\").toString(\"utf8\");\n\n            // const fileName = path.basename(pathBase64Str);\n            // const ext = path.extname(fileName).toLowerCase();\n\n            let publication: Publication;\n            try {\n                publication = await server.loadOrGetCachedPublication(pathBase64Str);\n            } catch (err) {\n                debug(err);\n                res.status(500).send(\"<html><body><p>Internal Server Error</p><p>\"\n                    + err + \"</p></body></html>\");\n                return;\n            }\n\n            // dumpPublication(publication);\n\n            const rootUrl = (isSecureHttp ? \"https://\" : \"http://\")\n                + req.headers.host + \"/pub/\"\n                + (req.params.lcpPass64 ?\n                    (server.lcpBeginToken + encodeURIComponent_RFC3986(req.params.lcpPass64) + server.lcpEndToken) :\n                    \"\")\n                + encodeURIComponent_RFC3986(req.params.pathBase64);\n\n            function absoluteURL(href: string): string {\n                return rootUrl + \"/\" + href;\n            }\n\n            function absolutizeURLs(jsonObject: any) {\n                traverseJsonObjects(jsonObject,\n                    (obj) => {\n                        if (obj.text && typeof obj.text === \"string\"\n                            && !isHTTP(obj.text)) {\n                            // obj.text_ = obj.text;\n                            obj.text = absoluteURL(obj.text);\n                        }\n\n                        if (obj.audio && typeof obj.audio === \"string\"\n                            && !isHTTP(obj.audio)) {\n                            // obj.audio_ = obj.audio;\n                            obj.audio = absoluteURL(obj.audio);\n                        }\n                    });\n            }\n\n            let objToSerialize: any = null;\n\n            const resource = isShow ?\n                (req.query.show ? req.query.show : req.params[mediaOverlayURLParam]) :\n                req.query[mediaOverlayURLParam];\n            if (resource && resource !== \"all\") {\n                objToSerialize = publication.FindMediaOverlayByHref(resource);\n            } else {\n                objToSerialize = publication.FindAllMediaOverlay();\n            }\n\n            if (!objToSerialize) {\n                objToSerialize = [];\n            }\n\n            let jsonObj = TAJSON.serialize(objToSerialize);\n            jsonObj = { \"media-overlay\": jsonObj };\n\n            if (isShow) {\n                absolutizeURLs(jsonObj);\n\n                // const jsonStr = global.JSON.stringify(jsonObj, null, \"    \");\n\n                // // breakLength: 100  maxArrayLength: undefined\n                // const dumpStr = util.inspect(objToSerialize,\n                //     { showHidden: false, depth: 1000, colors: false, customInspect: true });\n\n                const jsonPretty = jsonMarkup(jsonObj, css2json(jsonStyle));\n\n                res.status(200).send(\"<html><body>\" +\n                    \"<h1>\" + path.basename(pathBase64Str) + \"</h1>\" +\n                    \"<p><pre>\" + jsonPretty + \"</pre></p>\" +\n                    // \"<p><pre>\" + jsonStr + \"</pre></p>\" +\n                    // \"<p><pre>\" + dumpStr + \"</pre></p>\" +\n                    \"</body></html>\");\n            } else {\n                // absolutizeURLs(jsonObj);\n\n                server.setResponseCORS(res);\n                res.set(\"Content-Type\", \"application/vnd.readium.mo+json; charset=utf-8\");\n\n                const jsonStr = isCanonical ?\n                    global.JSON.stringify(sortObject(jsonObj), null, \"\") :\n                    global.JSON.stringify(jsonObj, null, \"  \");\n\n                const checkSum = crypto.createHash(\"sha256\");\n                checkSum.update(jsonStr);\n                const hash = checkSum.digest(\"hex\");\n\n                const match = req.header(\"If-None-Match\");\n                if (match === hash) {\n                    debug(\"smil cache\");\n                    res.status(304); // StatusNotModified\n                    res.end();\n                    return;\n                }\n\n                res.setHeader(\"ETag\", hash);\n                // res.setHeader(\"Cache-Control\", \"public,max-age=86400\");\n\n                res.status(200);\n\n                if (isHead) {\n                    res.end();\n                } else {\n                    res.send(jsonStr);\n                }\n            }\n        });\n\n    routerPathBase64.use(\"/:pathBase64/\" + mediaOverlayURLPath, routerMediaOverlays);\n}\n"]}