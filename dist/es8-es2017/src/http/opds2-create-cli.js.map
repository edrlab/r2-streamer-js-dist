{"version":3,"file":"opds2-create-cli.js","sourceRoot":"","sources":["../../../../src/http/opds2-create-cli.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport * as fs from \"fs\";\n\nimport { OPDSFeed } from \"@r2-opds-js/opds/opds2/opds2\";\nimport { OPDSLink } from \"@r2-opds-js/opds/opds2/opds2-link\";\nimport { OPDSMetadata } from \"@r2-opds-js/opds/opds2/opds2-metadata\";\nimport { OPDSPublication } from \"@r2-opds-js/opds/opds2/opds2-publication\";\nimport { OPDSPublicationMetadata } from \"@r2-opds-js/opds/opds2/opds2-publicationMetadata\";\nimport { Publication } from \"@r2-shared-js/models/publication\";\nimport { PublicationParsePromise } from \"@r2-shared-js/parser/publication-parser\";\nimport { encodeURIComponent_RFC3986, isHTTP } from \"@r2-utils-js/_utils/http/UrlUtils\";\nimport * as debug_ from \"debug\";\nimport * as moment from \"moment\";\nimport { JSON as TAJSON } from \"ta-json-x\";\n\nconst debug = debug_(\"r2:streamer#http/opds2-create-cli\");\n\ndebug(`process.cwd(): ${process.cwd()}`);\ndebug(`__dirname: ${__dirname}`);\n\nlet args = process.argv.slice(2);\n// debug(\"process.argv.slice(2): %o\", args);\n\nif (!args.length) {\n    debug(\"FILEPATH ARGUMENTS ARE MISSING.\");\n    process.exit(1);\n}\nconst opdsJsonFilePath = args[0];\nargs = args.slice(1);\nif (fs.existsSync(opdsJsonFilePath)) {\n    debug(\"OPDS2 JSON file already exists.\");\n    process.exit(1);\n}\n\n// tslint:disable-next-line:no-floating-promises\n(async () => {\n    const feed = new OPDSFeed();\n\n    // TODO: what is the JSON-LD context URL?\n    // https://drafts.opds.io/opds-2.0\n    // https://github.com/opds-community/test-catalog/tree/master/2.0\n    feed.Context = [\"http://opds-spec.org/opds.jsonld\"];\n\n    feed.Metadata = new OPDSMetadata();\n    feed.Metadata.RDFType = \"http://schema.org/DataFeed\";\n    feed.Metadata.Title = \"Readium 2 OPDS 2.0 Feed\";\n    feed.Metadata.Modified = moment(Date.now()).toDate();\n\n    feed.Publications = [];\n\n    let nPubs = 0;\n    for (const pathBase64 of args) {\n        const pathBase64Str = new Buffer(decodeURIComponent(pathBase64), \"base64\").toString(\"utf8\");\n\n        if (isHTTP(pathBase64Str)) {\n            continue;\n        }\n\n        // const fileName = path.basename(pathBase64Str);\n        // const ext = path.extname(fileName).toLowerCase();\n\n        debug(`OPDS parsing: ${pathBase64Str}`);\n        let publication: Publication;\n        try {\n            publication = await PublicationParsePromise(pathBase64Str);\n        } catch (err) {\n            debug(err);\n            continue;\n        }\n\n        nPubs++;\n        const filePathBase64Encoded = encodeURIComponent_RFC3986(pathBase64);\n\n        const publi = new OPDSPublication();\n\n        publi.Links = [];\n        const linkSelf = new OPDSLink();\n        linkSelf.Href = filePathBase64Encoded + \"/manifest.json\";\n        linkSelf.TypeLink = \"application/webpub+json\";\n        linkSelf.AddRel(\"http://opds-spec.org/acquisition\");\n        publi.Links.push(linkSelf);\n\n        feed.Publications.push(publi);\n\n        publi.Images = [];\n        const coverLink = publication.GetCover();\n        if (coverLink) {\n            const linkCover = new OPDSLink();\n            linkCover.Href = filePathBase64Encoded + \"/\" + coverLink.Href;\n            linkCover.TypeLink = coverLink.TypeLink;\n            // linkCover.Rel = [];\n            // linkCover.Rel.push(\"cover\");\n\n            if (coverLink.Width && coverLink.Height) {\n                linkCover.Width = coverLink.Width;\n                linkCover.Height = coverLink.Height;\n\n            }\n            publi.Images.push(linkCover);\n        }\n\n        if (publication.Metadata) {\n            try {\n                const publicationMetadataJson = TAJSON.serialize(publication.Metadata);\n                publi.Metadata = TAJSON.deserialize<OPDSPublicationMetadata>(\n                    publicationMetadataJson, OPDSPublicationMetadata);\n            } catch (err) {\n                debug(err);\n                continue;\n            }\n        }\n    }\n\n    feed.Metadata.NumberOfItems = nPubs;\n\n    const jsonObj = TAJSON.serialize(feed);\n    const jsonStr = global.JSON.stringify(jsonObj, null, \"\");\n    fs.writeFileSync(opdsJsonFilePath, jsonStr, { encoding: \"utf8\" });\n\n    debug(\"DONE! :)\");\n    debug(opdsJsonFilePath);\n})();\n"]}