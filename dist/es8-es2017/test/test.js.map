{"version":3,"file":"test.js","sourceRoot":"","sources":["../../../test/test.ts"],"names":[],"mappings":";;AAAA,yDAAyD;AACzD,6BAA2B;AAC3B,gCAAgC;AAEhC,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AAIhC,KAAK;IACD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAClC,CAAC;AACD,UAAI,CAAC,kBAAkB,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE;IACjC,KAAK,CAAC,YAAY,CAAC,CAAC;IACpB,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC;AAIH,UAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,EAAE,EAAE;IAC5B,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAEX,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC;IACzC,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;IACrC,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;IACvC,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,CAAC;IAC5C,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,aAAa,CAAC,EAAE,SAAS,CAAC,CAAC;IACjD,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,eAAe,CAAC,EAAE,SAAS,CAAC,CAAC;IAEnD,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC;IACpC,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,EAAE,CAAC,gCAAgB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC","sourcesContent":["import { timeStrToSeconds } from \"@models/media-overlay\";\r\nimport { test } from \"ava\";\r\nimport * as debug_ from \"debug\";\r\n\r\nconst debug = debug_(\"r2:test\");\r\n\r\n// ==========================\r\n\r\nasync function fn() {\r\n    return Promise.resolve(\"foo\");\r\n}\r\ntest(\"dummy async test\", async (t) => {\r\n    debug(\"test ASYNC\");\r\n    t.is(await fn(), \"foo\");\r\n});\r\n\r\n// ==========================\r\n\r\ntest(\"SMIL clock values\", (t) => {\r\n    t.plan(16);\r\n\r\n    t.is(timeStrToSeconds(\"12.345\"), 12.345);\r\n    t.is(timeStrToSeconds(\"2345ms\"), 2.345);\r\n    t.is(timeStrToSeconds(\"345ms\"), 0.345);\r\n    t.is(timeStrToSeconds(\"7.75h\"), 27900);\r\n    t.is(timeStrToSeconds(\"76.2s\"), 76.2);\r\n    t.is(timeStrToSeconds(\"00:56.78\"), 56.78);\r\n    t.is(timeStrToSeconds(\"09:58\"), 598);\r\n    t.is(timeStrToSeconds(\"09.5:58\"), 628);\r\n    t.is(timeStrToSeconds(\"0:00:04\"), 4);\r\n    t.is(timeStrToSeconds(\"0:05:01.2\"), 301.2);\r\n    t.is(timeStrToSeconds(\"124:59:36\"), 449976);\r\n    t.is(timeStrToSeconds(\"5:34:31.396\"), 20071.396);\r\n    t.is(timeStrToSeconds(\"5:34.5:31.396\"), 20101.396);\r\n\r\n    t.is(timeStrToSeconds(\"7.5z\"), 7.5);\r\n    t.is(timeStrToSeconds(\"4:5:34:31.396\"), 0);\r\n    t.is(timeStrToSeconds(\"\"), 0);\r\n});\r\n"]}